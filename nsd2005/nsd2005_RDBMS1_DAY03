1数据导入导出 （批量管理数据）
	1.1  检索目录（导入导出数据时调用的文件必须在此目录里）
		查看目录
mysql> show variables ；看所有变量
mysql> show variables   like  "%file%" ; 模糊查找
mysql> show variables like  "secure_file_priv" ;  查看指定变量的值
+------------------+-----------------------+
| Variable_name    | Value                 |
+------------------+-----------------------+
| secure_file_priv | /var/lib/mysql-files/ |
+------------------+-----------------------+
1 row in set (0.00 sec)

mysql> 

		修改目录
]# vim /etc/my.cnf
[mysqld]
secure_file_priv="/myload"
:wq
[root@host50 ~]# mkdir /myload
[root@host50 ~]# chown  mysql /myload
[root@host50 ~]# ls -ld /myload/
drwxr-xr-x. 2 mysql root 6 8月  15 10:45 /myload/
[root@host50 ~]# setenforce  0
[root@host50 ~]# systemctl  restart mysqld
]# mysql -uroot -p密码
mysql> show variables like  "secure_file_priv" ;
+------------------+----------+
| Variable_name    | Value    |
+------------------+----------+
| secure_file_priv | /myload/ |
+------------------+----------+

	1.2 数据导入：把系统文件的内容存储到表里
		命令格式？
		mysql>  load  data  infile "/目录名/文件名"  into   table  库名.表名
fields  terminated by "符号"   lines  terminated  by  "\n" ;
		注意事项？
		数据导入的操作步骤：
			1  根据导入文件的内容创建符合存储数据的表结构
			2  把系统文件拷贝到检索目录下
			3  执行导入数据的命令
			4  查看数据

例子： 把/etc/passwd文件的尼尔存储到 db3库下user表里
mysql> create database db3;
mysql> create table db3.user(name char(30) , password  char(1) , uid  int  , gid  int , comment  varchar(200) , homedir  char(60) , shell  char(50) );
mysql> select  * from  db3.user;
mysql> system  cp  /etc/passwd  /myload/

mysql> system ls /myload
passwd

mysql> load data  infile  "/myload/passwd"  into table  db3.user 
    -> fields  terminated by ":"  lines terminated by "\n" ;

mysql> select  * from  db3.user;

mysql> alter table db3.user add  id  int  primary key  auto_increment first;
			
mysql>  select  * from  db3.user;
mysql>  select  * from  db3.user where id=12;

	1.3 数据导出： 把表里数据存放到系统文件里
		注意事项？
		命令格式1 
		select 查询   into  outfile  "/目录名/文件名";

mysql> select  * from  db3.user into outfile "/myload/a.txt" ;
mysql> system ls /myload/
a.txt  passwd
mysql> system cat /myload/a.txt

		命令格式2 
		select 查询   into  outfile  "/目录名/文件名"   fields terminated by  "符号" ;

mysql> select  * from db3.user  into outfile  "/myload/b.txt" fields terminated by  ":" ;
mysql> system ls /myload/
a.txt  b.txt  passwd
mysql> 
mysql> system cat /myload/b.txt


		命令格式3
		select 查询   into  outfile  "/目录名/文件名"   fields terminated by  "符号"    lines   terminated by  "符号"   ;

mysql> select  name ,  homedir , shell  from  db3.user where id <= 3  into outfile "/myload/d.txt" fields  terminated by "#"  lines  terminated by "!!!";


mysql> system cat /myload/d.txt
root#/root#/bin/bash!!!bin#/bin#/sbin/nologin!!!daemon#/sbin#/sbin/nologin!!!mysql> 


2管理表记录
	2.1 插入表记录（添加新行）insert into
mysql> insert into  db3.user values (21,"a","x",3000,3000,"test user" , "/bin/bash", "/bin/bash");

mysql> insert into  db3.user values 
(22,"b","x",3000,3000,"test user" , "/bin/bash", "/bin/bash"),(25,"C","y",3001,3001,"test user","/home/c","/sbin/nologin");

mysql> insert into  db3.user (name,uid) values ("bob2",2009)；
			
mysql> insert into  db3.user (name,uid) values ("bob",2009),("jerry",3008),("lilei",2020);

	
	2.2 查询表记录 select
		select  字段名列表   from  库名.表名；
		select  字段名列表   from  库名.表名 where  条件；

		字段名列表 控制显示的列
		条件控制显示的行。

		select  * from  db3.user;  查看所有行所有列
		select  name , shell , homedir   from  db3.user;
		select  name , shell , homedir   from  db3.user where  id <= 5;

	2.3 更新表记录（修改行中列的值） update
		update  库.表   set 列名=值，列名=值  ； 修改所有行列的值
		update  库.表   set 列名=值，列名=值   where  条件；只修改与条件匹配行  列的值


mysql>  update  db3.user set password="A";
mysql> update  db3.user set  password="x" , comment="admin" where name = "root" ;

	2.4 删除表记录 delete
		delete  from   库.表； 删除所有行
		delete  from   库.表  where  条件； 只删除与条件匹配的行

mysql> delete from  db1.gz_tab;
mysql> delete from db3.user where id > 19;
mysql> select  * from db3.user;


3匹配条件 重点
	3.1 基本匹配条件 （select  update   delete   ）
		数值比较  > >=  < <=  =   !=

select  *  from  db3.user where  id = 3; 

select  name , uid  from  db3.user where uid >= 500 ;

select  name ,uid , gid  from  db3.user where   uid  = gid ;

mysql> select  name ,uid , gid  from  db3.user where   uid  != gid ;

 		字符比较  =   !=
select name from db3.user where  name = "sync" ;

select  name , shell  from  db3.user  where  shell  !=  "/bin/bash" ;
		

		is        null    空
		is not  null   非空

mysql> update  db3.user  set  shell=NULL  where id=19;

select name  from  db3.user  where shell is null ;
mysql> select id , name , shell  from  db3.user  where shell is null ;
mysql> select id , name  from  db3.user  where shell is not  null ;

		逻辑比较 （多个判断条件）
		     逻辑与  and      &&   多个条件必须都成立
		     逻辑或   or        ||      多个条件某个条件成立即可
	
 select name ,shell , uid   from db3.user where  shell="/bin/bash"  and  uid<=10;
 mysql> select  * from db3.user where  id >= 5  and id <= 10
mysql> select name , shell from db3.user where  shell != "/bin/bash"  and   shell != "/sbin/nologin" ;
		
mysql> select name ,uid  from db3.user where  uid = 1  or uid=6  or  uid = 9;

		     逻辑非   not      !       取反
	mysql> select id , name  from  db3.user  where shell is not  null ;
	select  name , shell  from  db3.user  where  shell  !=  "/bin/bash" ;



    		匹配范围内的任意一个值即可
	 	in       not in    between...and...
		
mysql> select name  from db3.user where name  in  ("mysql","httpd","sync","bin");

mysql> select name ,uid  from db3.user where uid  in  (1,6,3,9,12);

mysql> select name , shell  from  db3.user where shell not in ("/bin/bash","/sbin/nologin");
	3.2 高级匹配条件
		like 模糊查询
mysql> select name from  db3.user where  name  like  '_ _ _ _';  必须是 4个字母
mysql> select name from  db3.user where  name  like  '_ _ _'; 必须是 3个字母
mysql> select name from  db3.user where  name  like  '%a%'; 有字母a 就可以
mysql> select name from  db3.user where  name  like  '_ _%_ _'; 名字至少是4个字母
		正则匹配 regexp
		where 字段名  regexp   ‘正则表达式’
			正则元字符：^   $   .   [ ]   *    | 
select  name from db3.user where  name regexp '^a';
select  name from db3.user where  name regexp 't$';
select  name from db3.user where  name regexp '^a|t$';
select  name from db3.user where  name regexp '^a.*t$';
select  name from db3.user where  name regexp '^r.*t$';
select  name ,uid  from db3.user where  uid  regexp '^..$';
select  name ,uid  from db3.user where  name  regexp '^[abc]';

	四则计算 + - *  /  %     (select  update   delete)

mysql> select  * from  db3.user where   id % 2  =  0  ;

mysql> update  db3.user set  uid=uid+1 where  id <= 5 ;

mysql> update  db3.user set  uid=uid-1 where  id <= 5 ;

mysql> select  name , uid , gid , uid + gid  zcj , (uid + gid ) / 2  pjz  from db3.user where name="lp";

		

	3.3 操作查询结果（数据查出来后  对查询的数据 再做处理）
		聚集函数(MySQL服务内置的对数据做统计的命令）
		avg(字段名)   sum(字段名)  min(字段名) max(字段名)  count(字段名)
mysql> select  min(uid)  from  db3.user;
mysql> select  max(uid)  from  db3.user;
mysql> select  avg(uid)  from  db3.user;
mysql> select  sum(uid)  from  db3.user;

mysql> select count(name) from  db3.user where  shell =  "/sbin/nologin" ;

mysql> select  count(*) from  db3.user;

mysql> select  count(*) from  db3.user where uid <= 10;
  

		查询结果排序 order by 字段名   asc|desc
mysql> select name , uid  from db3.user where uid   between  10 and 100；

mysql> select name , uid  from db3.user where uid   between  10 and 100  order by  uid  ;

mysql> select name , uid  from db3.user where uid   between  10 and 100  order by  uid  desc;

		不显示查询结果的重复值    distinct 字段名

mysql> select  gid  from  db3.user ;
mysql> select  distinct   gid  from  db3.user ;


		查询结果分组  group  by  字段名
mysql> select  shell from  db3.user where uid <= 500 ;

mysql> select  shell from  db3.user where uid <= 500 group by shell;


select  部门  from 员工表 where   性别="女” and  年龄 <= 28  and  婚姻="否" group  by 部门 ；


在查询结果      过滤数据 having  条件
		命令格式  select查询命令  having   条件；
	

nsd2005    全国有300人
     面试招聘    300个人 我自己逐一面试  找优秀的
     中心助教 在班里挑选10个优秀的人    10*10  = 100 

mysql> select name  from db3.user where  shell != "/bin/bash"；

mysql> select name  from db3.user where  shell != "/bin/bash"  having  name="mysql";

mysql> select name  from db3.user where  shell != "/bin/bash"   name="mysql" or name="sync";

		限制查询结果   显示的行数  limit  	
		不限制的话，默认会把所有查询结果输出到电脑屏幕。
		命令格式  select查询名   limit  数字； #显示查询结果的头几行
mysql> select  name , uid,shell  from  db3.user where  uid <= 100 limit 2;

		命令格式2 select查询名   limit  数字1，数字2   #显示查询结果指定范围的行
		数字1  起始行 （第1行 用 零 表示）
		数字2  总行数

mysql> select  name , uid,shell  from  db3.user  limit  0 ，3 ;
mysql> select  name , uid,shell  from  db3.user  limit  2,6 ;
mysql> select  name , uid,shell  from  db3.user  limit  3,3 ;
mysql> select * from  db3.user  limit  3,4;