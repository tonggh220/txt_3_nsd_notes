环境准备
	58和59 的Redis服务停止
	把redis集群中的主机恢复为独立数据库服务器：
		51 - 56 做如下操作
		停止redis服务
		注释配置文件里的集群功能配置项
		清空数据库目录
		启动redis服务
		查看进程 netstat  -utnlp  | grep redis-server  只有redis服务端口
		查看数据  keys *  没有数据


1 主从复制
	分为主master数据库服务器 和 从slave数据库服务器
		master数据库服务器:客户端存取数据时连接的服务器
		slave数据库服务器：连接主服务器 同步主服务器的数据到本机
	

	配置redis主从结构，涉及到的命令
		注意 : redis服务启动后，默认就是master角色
		命令行配置（立即生效，但重启redis服务或操作系统会还原）
		 > slaveof   主服务器ip    主服务器端口
		 > info  replication # 查看复制信息
		 > slaveof  no one  #临时恢复为主服务器

		永久配置 vim /etc/redis/6379.conf
		slaveof  主服务器ip    主服务器端口

	主从复制结构： 一主一从    一主多从    主从从


		配置一主一从   
		要求：把52配置为51的从服务器
		52的配置如下 
		redis-cli  -h 192.168.4.52 -p 6352
		> slaveof  192.168.4.51  6351
		> info replication
		> exit
		vim /etc/redis/6379.conf
		282  slaveof    192.168.4.51  6351
		:wq

配置一主多从    
		要求;把53主机 也配置为51 的从服务器
		
	   53主机的配置，如下   时间3分钟到14:17
		vim /etc/redis/6379.conf
		282  slaveof    192.168.4.51  6351
		:wq
		]#redis-cli  -h 192.168.4.53 -p 6353 shutdown
                                  ]# /etc/init.d/redis_6379 start
                                  ]# redis-cli  -h 192.168.4.53 -p 6353   查看到 和 51一样的数据
	51 主机查看复制信息
192.168.4.51:6351> INFO replication
# Replication
role:master
connected_slaves:2
slave0:ip=192.168.4.52,port=6352,state=online,offset=11645,lag=0
slave1:ip=192.168.4.53,port=6353,state=online,offset=11645,lag=1




	配置主从从  练习3分钟 到  14:31 
	要求 把主机54 配置为53的slave服务器
	54主机的配置如下：
	192.168.4.54:6354> slaveof 192.168.4.53 6353
                 192.168.4.54:6354> config rewrite   #把配置保存的/etc/redis/6379.conf文件
	
	在53主机查看复制信息
	192.168.4.53:6353> info replication   #是51的slave   又是54的master

	在51主机 存储新数据  52 53 54   三台主机都会有数据


	配置带验证的主从复制（主服务器有连接密码）
	  51主机  设置连接密码
[root@localhost ~]# vim +501 /etc/redis/6379.conf	
	       requirepass 654321
:wq
[root@localhost ~]# redis-cli  -h 192.168.4.51 -p 6351 shutdown
[root@localhost ~]# /etc/init.d/redis_6379 start
Starting Redis server...
[root@localhost ~]# redis-cli  -h 192.168.4.51 -p 6351 -a 654321
192.168.4.51:6351> keys *

	53 he 52 主机 指定连接密码
	]# vim /etc/redis/6379.com	
           289 masterauth 654321
	:wq

     ]# redis-cli  -h 192.168.4.52 -p 6352 shutdown
  ]#  /etc/init.d/redis_6379 start
  ]#  redis-cli  -h 192.168.4.52 -p 6352 
  >info  replication


  哨兵服务：监视主从复制结构中的主服务器，把对应的从升级为master 服务器。
		在主机57 配置哨兵服务 监视主数据库服务器51 会自动把对应的从升级为主服务器。
														时间到15:20
		51 和  52 为一主一从结构  （让53不做51的 slave服务器）
		在主机57 配置哨兵服务 步骤如下
			安装Redis软件（不需要做初始配置） 时间3分钟到 15:33
		yum  -y  install gcc	
		tar -zxvf redis-4.0.8.tar.gz 
		cd redis-4.0.8
		make && make install

			创建并编辑哨兵服务的主配置文件
			vim  /etc/sentinel.conf
			bind  192.168.4.57
			sentinel monitor   redisser   192.168.4.51  6351   1
			sentinel auth-pass redisser  654321
			:wq

			启动配置文件运行哨兵服务
			
			~]# redis-sentinel  /etc/sentinel.conf

			测试 ：
			     停止51主机的redis服务


			     在 52主机 查看复制信息（发现52的角色自动变为master）

			     查57的哨兵配置文件，自动监视当前的主服务器52


2 持久化（理论  大于 操作）
            （redis服务 先把客户端的数据存储在内存里， 在把数据保存到硬盘）
              2.1 RDB 指定的就是 数据库库目录下的dump.rdb文件
	
	#使用dump.rdb文件恢复数据
	50主机备份文件
[root@host50 ~]# cp /var/lib/redis/6379/dump.rdb  /root/
[root@host50 ~]# ls /root/*.rdb
/root/dump.rdb
[root@host50 ~]# scp /root/dump.rdb  root@192.168.4.55:/opt/


	55 主机恢复数据，步骤如下：
		停止redis服务  ]# redis-cli  -h 192.168.4.55 -p 6355  shutdown

		移动备份文件到数据库目录下
[root@localhost ~]# ls /var/lib/redis/6379/
dump.rdb
[root@localhost ~]# mv /opt/dump.rdb /var/lib/redis/6379/
mv：是否覆盖"/var/lib/redis/6379/dump.rdb"？ y
[root@localhost ~]# 

		启动服务 /etc/init.d/redis_6379 start

		查看数据redis-cli  -h 192.168.4.55 -p 6355 
		             > keys *
