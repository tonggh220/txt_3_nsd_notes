	集群知识点回顾：
		什么是集群？ 多台服务器提供相同服务（网站服务  数据库服务）
		集群类型？    
		    LB(负载均衡集群) 集群中的所有服务器平均分摊客户端的多次连接访问 		    HA(高可用集群) 备用的服务器会自动接替故障的主服务器，继续提供服务，这个过程对客户端来说是透明的。
		    集群服务软件有那些？ LVS   Haproxy  Nginx  Keepalived 
			

             MHA软件介绍
             集群拓扑结构		 
             MHA的工作过程
             集群环境准备
             集群环境准备
	  1、配置三台数据库服务器  51 、 52 、53 
	       彼此之间可以使用对方的系统root用户ssh免密登录。
  202  ssh-keygen 
  203  ssh-copy-id  root@192.168.4.52
  204  ssh-copy-id  root@192.168.4.53
  205  history 
  206  ssh  root@192.168.4.52
  207  ssh  root@192.168.4.53

   86  ssh-keygen 
   87  ssh-copy-id  root@192.168.4.51
   88  ssh-copy-id  root@192.168.4.53
   89  ssh root@192.168.4.51
   90  ssh root@192.168.4.53

   65  ssh-keygen 
   66  ssh-copy-id  root@192.168.4.51
   67  ssh-copy-id  root@192.168.4.52
   68  ssh root@192.168.4.51
   69  ssh root@192.168.4.52
	  2、配置 57 主机 可以免密ssh连接3台数据库服务器 51 、 52 、53
   47  ssh-keygen 
   48  ssh-copy-id  root@192.168.4.51
   49  ssh-copy-id  root@192.168.4.52
   50  ssh-copy-id  root@192.168.4.53
   51  ssh root@192.168.4.51
   52  ssh root@192.168.4.52
   53  ssh root@192.168.4.53


	  3、分别在 51 、 52 、53 、 57 主机 安装mha目录下的所有 perl 软件
	   	cd mha
		yum -y install perl-*.rpm

	  4、配置 MySQL一主多从结构 ,具体步骤如下：
		 提示 确保3台服务器的数据是一致的 。
		 配置主数据库服务器 192.168.4.51
			启用binlog日志
			用户授权
			查看日志信息
[root@host51 mha]# vim /etc/my.cnf
[mysqld]
server_id=51
log_bin=master51
:wq
[root@host51 mha]# systemctl restart mysqld

[root@host51 mha]# mysql -uroot -p密码
mysql> grant replication slave on  *.*  to  repluser@"%" identified by "123qqq...A";


mysql> show master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.01 sec)

mysql> 

		 配置从数据库服务器 192.168.4.52 
[root@host52 mha]# vim /etc/my.cnf
[mysqld]
server_id=52
:wq
[root@host52 mha]# systemctl restart mysqld

[root@host52 mha]# mysql -uroot -p密码
mysql> change master to  master_host="192.168.4.51" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.04 sec)

mysql> start slave;
Query OK, 0 rows affected (0.02 sec)

mysql> show slave status \G
            Slave_IO_Running: Yes
            Slave_SQL_Running: Yes

		 配置从数据库服务器 192.168.4.53 
[root@host53 mha]# vim /etc/my.cnf
[mysqld]
server_id=53
:wq
[root@host53 mha]# systemctl restart mysqld

[root@host53 mha]# mysql -uroot -p密码
mysql> change master to  master_host="192.168.4.51" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=441;
mysql> start slave;
mysql> show slaver status \G
            Slave_IO_Running: Yes
            Slave_SQL_Running: Yes


      配置管理主机192.168.4.57（重点） 具体如下：
	1 安装MHA软件
[root@host57 ~]# cd mha
[root@host57 mha]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm 

]#tar -zxvf mha4mysql-manager-0.56.tar.gz 
]#cd mha4mysql-manager-0.56
]#perl Makefile.PL 
]# make 
]# make install
	 2  创建并编辑管理服务的主配置文件
[root@host57 mha4mysql-manager-0.56]# mkdir /etc/mha
[root@host57 mha4mysql-manager-0.56]# cp samples/conf/app1.cnf /etc/mha/
[root@host57 mha4mysql-manager-0.56]# vim /etc/mha/app1.cnf 
[root@host57 mha4mysql-manager-0.56]# vim /etc/mha/app1.cnf 	     	
     [server default]     					//管理服务默认配置
                manager_workdir=/etc/mha   			 //工作目录
                manager_log=/etc/mha/manager.log   		//日志文件
                master_ip_failover_script=/etc/mha/master_ip_failover	//故障切换脚本
                 ssh_user=root 				 //访问ssh服务用户
                 ssh_port=22    				//ssh服务端口
                 repl_user=repluser   	          			//数据同步授权用户
                 repl_password=123qqq…A    			//密码
                 user=root 		          			//监控用户
                 password=123qqq…A 	          			//密码

[server1]                                     		//指定第1台数据库服务器
hostname=192.168.4.51		//服务器ip地址
port=3306				//服务端口
candidate_master=1   			//竞选主服务器

[server2]                                     		//指定第2台数据库服务器
hostname=192.168.4.52
port=3306
candidate_master=1  
			
[server3]                                      		//指定第3台数据库服务器
hostname=192.168.4.53
port=3306
candidate_master=1  	
:wq
    3 创建故障切换脚本，并指定vip地址
		[root@host57 ~]# cp mha/master_ip_failover  /etc/mha/
[root@host57 ~]# vim  +35 /etc/mha/master_ip_failover  		
my $vip = '192.168.4.100/24';  # Virtual IP
my $key = "1";
my $ssh_start_vip = "/sbin/ifconfig ens33:$key $vip";
my $ssh_stop_vip = "/sbin/ifconfig ens33:$key down";
:wq
[root@host57 ~]# chmod +x  /etc/mha/master_ip_failover
		
	4	把vip地址  配置在当前的主数据库服务器192.168.4.51上
[root@host51 mha]# ifconfig  ens33:1 192.168.4.100
[root@host51 mha]# ifconfig  ens33:1


配置3台数据库服务器，具体配置如下
	   1 安装软件
[root@host51 ~]# cd mha/
[root@host51 mha]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm

[root@host52 ~]# cd mha/
[root@host52 mha]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm 

[root@host53 ~]# cd mha/
[root@host53 mha]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm 
	
	2 添加授权用户 (监控用户root)
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.* to root@"%" identified by "123qqq...A"'

[root@host52 ~]# mysql -uroot -p123qqq...A -e 'show grants for root@"%"'

[root@host53 ~]# mysql -uroot -p123qqq...A -e 'show grants for root@"%"'


    优化数据库服务器的配置，如下
		1 修改3台数据库服务器的/etc/my.cnf 文件 ，安装master模块和slave模块 并启用。 和  禁止删除本机的中继日志文件

		2 在 52 和 53 主机启用binlog日志

		3 在 52 和 53 主机添加从服务器同步数据时的连接用repluser

[root@host51 mysql]# vim /etc/my.cnf
[mysqld]
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1           
relay_log_purge=0  
:wq

[root@host51 mysql]# systemctl  restart mysqld


[root@host52 mysql]# vim /etc/my.cnf
[mysqld]
server_id=52
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1           
relay_log_purge=0  
log_bin=master52
:wq

[root@host52 mysql]# systemctl  restart mysqld
[root@host52 mysql]# mysql -uroot -p123qqq...A -e 'grant replication slave on *.* to repluser@"%" identified by "123qqq...A"'

[root@host52 mysql]# mysql -uroot -p123qqq...A -e 'show slave status \G' | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes




[root@host53 mysql]# vim /etc/my.cnf
[mysqld]
server_id=53
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1           
relay_log_purge=0  
log_bin=master53
:wq

[root@host53 mysql]# systemctl  restart mysqld
[root@host53 mysql]# mysql -uroot -p123qqq...A -e 'grant replication slave on *.* to repluser@"%" identified by "123qqq...A"'

[root@host53 mysql]# mysql -uroot -p123qqq...A -e 'show slave status \G' | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host53 mysql]#


   测试配置
[root@host57 ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf
Tue Aug 25 17:19:11 2020 - [info] All SSH connection tests passed successfully.
		
[root@host57 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf
MySQL Replication Health is OK. 



            启动管理服务（启动信息会占终端显示）
[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover  
Tue Aug 25 17:36:46 2020 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.
Tue Aug 25 17:36:46 2020 - [info] Reading application default configuration from /etc/mha/app1.cnf..
Tue Aug 25 17:36:46 2020 - [info] Reading server configuration from /etc/mha/app1.cnf..
   
	查看管理服务的运行状态（开一个新终端查看）
[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf 
app1 (pid:10355) is running(0:PING_OK), master:192.168.4.51
[root@host57 ~]# 
	
	在当前主服务器51 查看vip地址
[root@host51 ~]# ifconfig  ens33:1
ens33:1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.4.100  netmask 255.255.255.0  broadcast 192.168.4.255
        ether 00:0c:29:1a:05:3d  txqueuelen 1000  (Ethernet)
        device interrupt 19  base 0x2000  

	
	客户端50主机连接vip 地址访问数据库服务，存取数据
	命令格式 mysql -h192.168.4.100 -u用户  -p密码
		1 在主服务器51 添加客户端连接服务使用的用户名和密码
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'create database bbsdb'mysql: 
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'create table bbsdb.t1(id int)'
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'grant select,insert on bbsdb.* to plj@"%" identified by "123qqq...A"'
		
		2 从数据库服务器52 和 53 会自动同步添加的用户
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'show grants for plj@"%"' 
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'show grants for plj@"%"' 
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'use bbsdb;show tables' 
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'use bbsdb;show tables' 
		
		3 客户端连接vip 地址访问数据库服务，存取数据
[root@host50 ~]# ping -c 2  192.168.4.100
[root@host50 ~]# mysql -h192.168.4.100 -uplj -p123qqq...A
ysql> select @@hostname;
+------------+
| @@hostname |
+------------+
| host51     |
+------------+
1 row in set (0.01 sec)

mysql> insert into  bbsdb.t1 values(1);
Query OK, 1 row affected (0.09 sec)

mysql> select  * from bbsdb.t1;
+------+
| id   |
+------+
|    1 |
+------+
1 row in set (0.00 sec)

mysql> 

排错思路：
      查看检查的输出信息
	ssh免密登录 没成功
	主从结构不正常 （52 和 53 的io 线程 和 sql线程要是是yes状态）
	MySQL数据库服务器的优化配置是否配置正确
	请认真检查 app1.cnf文件的编写
	所有主机防火墙 要关闭。
	软件包没有安装完全

             测试mha集群高可用功能：
		1 当51 主机宕机时 ，客户端依然可以连接地址100访问数据库服务存取数据
	host51]# systemctl  stop  mysqld
host50]#  mysql  -h192.168.4.100  -uplj  -p123qqq...A

		2 在2台备用的数据库服务器查看vip地址（谁获取到了vip地址，谁就是新的主数据库服务器）
		host52]#  ip addr show  | grep  "192.168.4.100"
                                  host53]#  ip addr show  | grep  "192.168.4.100"

		3 在另数据库服务器查slave进程进程的状态，会自动到新的主数据库服务器同步数据
		]# mysql  -uroot -p123qqq...A -e  ' show slave status \G' | grep  -i "master_host" 
		]# mysql  -uroot -p123qqq...A -e  ' show slave status \G' | grep  -i  yes
		 
		4 查看app1.cnf文件 会发现 数据服务器192.168.4.51 的配置自动被删除
		host57]# cat /etc/mha/app1.cnf  

		5 查看管理服务的状态，发现管理服务自动停止了 
[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf 
		
		6 检查主从同步配置，启动管理服务，使其可以监视新的主数据库服务器
[root@host57 ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf
[root@host57 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf
[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover

[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf 
app1 (pid:4719) is running(0:PING_OK), master:192.168.4.52
[root@host57 ~]# 


             把故障的服务器51，再添加到集群里
		1 配置数据库服务器51
			启动MySQL服务
[root@host51 ~]# systemctl  start  mysqld

			确保与当前master 服务器数据一致
[root@host52 ~]# mysqldump -uroot -p123qqq...A bbsdb > /root/bbsdb.sql
[root@host52 ~]# scp /root/bbsdb.sql  root@192.168.4.51:/opt/
[root@host51 ~]# mysql -uroot -p123qqq...A bbsdb < /opt/bbsdb.sql

查看日志信息
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'show master status'
mysql: [Warning] Using a password on the command line interface can be insecure.
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master52.000001 |      941 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
[root@host52 ~]# 

			指定主服务器信息
[root@host51 ~]# mysql -uroot -p123qqq...A -e ' change master to  master_host="192.168.4.52" , master_user="repluser", master_password="123qqq...A",master_log_file="master52.000001",master_log_pos=941'
[root@host51 ~]#  mysql -uroot -p123qqq...A -e ' start slave'

[root@host51 ~]#  mysql -uroot -p123qqq...A -e ' show slave status \G' | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host51 ~]# 
[root@host51 ~]#  mysql -uroot -p123qqq...A -e ' show slave status \G' | grep -i "master_host"
mysql: [Warning] Using a password on the command line interface can be insecure.
                  Master_Host: 192.168.4.52
[root@host51 ~]# 