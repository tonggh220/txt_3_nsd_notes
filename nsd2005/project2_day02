
升级网站运行平台到LNMP 步骤如下：
	1 清除当前配置 
        停止服务  卸载挂载
        
	2 安装LNMP软件
		安装源码Nginx软件
		安装php-fpm软件
		安装php及php-mysql软件 
		安装mariadb-server及 mariadb、mariadb-devel软件(可选安装，因为数据不存储在nginx服务器本机的数据库里)

	3 修改配置文件
	
	4 启动服务
	       4.1  挂载nfs30主机的共享目录到nginx的网页目录下
	       4.2 启动 nginx服务 php-fpm服务

	5测试配置
	
案例2 ：部署缓存服务
            目的：提供内存空间存储数据，把网站的热点数据放到内存里，加快访问速度
	2.1 部署redis集群 ，步骤如下 练习到 12:00
		搭建redis服务器(6台)，具体操作如下：
		 	安装软件
			初始化配置
			停止服务
			修改配置文件，启用集群配置
			启动服务
			查看服务信息
			配置管理主机
			创建集群
			查看集群信息  
[root@localhost ~]# redis-trib.rb  info  192.168.4.51:6351
192.168.4.51:6351 (c3e25c31...) -> 0 keys | 5461 slots | 1 slaves.
192.168.4.53:6353 (9a3fab93...) -> 0 keys | 5461 slots | 1 slaves.
192.168.4.52:6352 (051b66a1...) -> 0 keys | 5462 slots | 1 slaves.
[OK] 0 keys in 3 masters.
0.00 keys per slot on average.
[root@localhost ~]#



	2.2 配置网站服务可以连接集群存取数据
		安装提供模块的软件redis-cluster-4.3.0.tgz
		调用模块
		重启php-fpm服务
		查看redis模块
		
			 时间10分钟 到 14:26

	2.3 测试配置：编写php脚本连接redis集群中任意主机存取数据
		编写存储数据php脚本
nfs30]# vim /sitedir/x.php
<?php
$redis_list = ['192.168.4.51:6351','192.168.4.52:6352','192.168.4.53:6353','192.168.4.54:6354','192.168.4.56:6356','192.168.4.57:6379'];

$client = new RedisCluster(NUll,$redis_list);
$client->set("i","tarenaA ");
$client->set("j","tarenaB ");
$client->set("k","tarenaC ");
echo  "data ok";
?>
:wq



		编写取数据的php脚本
nfs30]# vim /sitedir/y.php
<?php
$redis_list = ['192.168.4.51:6351','192.168.4.52:6352','192.168.4.53:6353','192.168.4.54:6354','192.168.4.56:6356','192.168.4.57:6379'];

$client = new RedisCluster(NUll,$redis_list);

echo $client->get("i");
echo $client->get("j");
echo  $client->get("k");
?>
:wq
	
                   	客户端连接网站服务器访问存储数据的脚本
[root@host50 ~]# curl http://192.168.4.33/x.php
data ok

		在Redis服务器 本机命令连接，查看php脚本里的数据是否存储成功
[root@host50 ~]# redis-cli -c -h 192.168.4.51 -p 6351
192.168.4.51:6351> keys *
1) "j"
192.168.4.51:6351> exit
[root@host50 ~]# 
[root@host50 ~]# redis-cli -c -h 192.168.4.52 -p 6352
192.168.4.52:6352> keys *
1) "k"
192.168.4.52:6352> exit
[root@host50 ~]# redis-cli -c -h 192.168.4.53 -p 6353
192.168.4.53:6353> keys *
1) "i"
192.168.4.53:6353> get   i
"tarenaA "
192.168.4.53:6353> info replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.54,port=6354,state=online,offset=15135,lag=1


		客户端连接网站服务器访问取数据的脚本
[root@host50 ~]# curl http://192.168.4.33/y.php
tarenaA tarenaB tarenaC 


统一排错步骤：
	检查存取数据的php脚本代码写对了吗？
	查看是否 支持 php  -m  | grep  -i  redis
	检查提供模块的软件是 redis-cluster-4.3.0.tgz
	所有主机的防火墙和selinux 关一遍
	查看nginx服务日志文件  查看访问报错信息
	查看Redis服务日志文件  查看访问报错信息

数据迁移：把存储在读写分离结构里的数据在线迁移到PXC集群
	具体步骤如下：
	1  把66主机配置为11的从数数据库服务器
		运行运行MySQL数据库服务器（装包 起服务 管理员登陆 修改密码）
		确保与主数据库服务器数据一致
			1  11主机 ，不锁表 备份网站存储数据的库 buydb 并记录备份完成后是要的binlog日志名和偏移量位置  把备份文件拷贝给 66 数据库服务器
   11  yum -y install libev-4.15-1.el6.rf.x86_64.rpm  ; yum  -y install percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm 
  
   13  innobackupex --user root --password 123qqq...A  /allbak --no-timestamp

   15  scp -r /allbak   root@192.168.4.66:/root/

			        66主机主机执行恢复：停止服务 准备恢复数据 拷贝数据 修改所有者和组用户为mysql  启动服务  管理员登陆查看数据
 12  yum -y install libev-4.15-1.el6.rf.x86_64.rpm ; yum -y install percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm 
   13  systemctl  stop mysqld
   14  rm -rf /var/lib/mysql/*
   15  innobackupex --apply-log /root/allbak
   16  innobackupex --copy-back /root/allbak
   19  chown -R mysql:mysql  /var/lib/mysql
   20  systemctl  start mysqld
   21  mysql -uroot -p123qqq...A

		指定server_id 并重启mysqld服务

		查看备份文件里记录的日志名和偏移量
[root@pxc66 ~]# grep  master11  /root/allbak/xtrabackup_info 
binlog_pos = filename 'master11.000003', position '1340'
[root@pxc66 ~]# 

		指定主数据库服务器信息
mysql> change master to master_host="192.168.4.11" ,  master_user="repluser",master_password="123qqq...A" , master_log_file="master11.000003",master_log_pos=1340;
Query OK, 0 rows affected, 2 warnings (0.01 sec)

mysql> start slave;

			
		启动slave进程  mysql> start slave;
		查看状态
mysql> show slave status \G
  	Slave_IO_Running: Yes
                Slave_SQL_Running: Yes

启动slave进程  mysql> start slave;
		查看状态
mysql> show slave status \G
  	Slave_IO_Running: Yes
                Slave_SQL_Running: Yes

             
		创建PXC集群 ，步骤如下：
			1. 在pxcnode66主机,做如下配置：
停止mysqld服务、卸载mysqld服务软件  安装PXC软件、

修改配置文件 、启动mysql服务
数据库管理员登录、用户授权
查看集群状态信息show status like "%wsrep%";
查看slave进程的状态 show slave status \G

			2、配置另外2台PXC服务器
				2.1    主机10做如下配置
安装PXC软件、修改配置文件、启动mysql服务
数据库管理员登录、查看集群状态信息、查看数据

				2.2    主机88做如下配置
安装PXC软件、修改配置文件、启动mysql服务
数据库管理员登录、查看集群状态信息、查看数据

			3 三台服务器的功能配置
wsrep_cluster_address=gcomm://192.168.4.66,192.168.4.10,192.168.4.88

			4 测试配置
在网站服务器web33直接连接pxc集群主机访问数据库服务
web33]# mysql -h192.168.4.10 -uplj -p123qqq...A
web33]# mysql -h192.168.4.66 -uplj -p123qqq...A
web33]# mysql -h192.168.4.88 -uplj -p123qqq...A

[root@MySQL11 ~]# mysql -uroot -p123qqq...A
mysql> alter table buydb.user add id int primary key auto_increment first;
mysql> mysql> select  * from buydb.user;

[root@web33 ~]# mysql -h192.168.4.77 -P4006 -uplj -p123qqq...A
MySQL [(none)]> insert buydb.user(username,password)values("y","y");


[root@pxc66 ~]# mysql -uroot -p123qqq...A  -e 'select  * from buydb.user'
[root@pxc88 ~]#  mysql -uroot -p123qqq...A  -e 'select  * from buydb.user'
[root@pxc10 ~]#  mysql -uroot -p123qqq...A  -e 'select  * from buydb.user'

		案例4 集群配置
配置LB 集群
	在98 主机配置haproxy调度器，步骤如下
		安装软件
		修改配置文件
		启动服务
		测试网站服务器连接数据库服务的时候范围haproxy主机98
124  mysql -h192.168.4.98  -uplj -p123qqq...A -e 'select @@hostname' //多次连接访问显示不同的主机名

配置HA集群 ，配置备用调度器，步骤如下：
	配置备用调度 77
		安装haproxy软件
		修改配置文件（配置与haproxy99主机相同）
		启动服务
		测试配置
	配置高可集群步骤如下：
		1 分别在主调度器和备用调度器安装keepalived 软件
		2 修改2台服务的配置文件
		3 分别启动keepalived 服务
		测试配置：
		4 客户端连接vip地址访问数据库服务器
		5 把主调度器的服务停止备用调度器获取vip地址

