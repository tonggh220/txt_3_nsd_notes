1 数据分片概述（相关概念）
	分库分表
	水平分割
	垂直分割
	mycat软件介绍
	10种分片规则
	拓扑结构
	mycat服务的工作工程？
	
2 部署MyCAT服务192.168.4.56，具体操作如下
	2.1 安装mycat软件
]# yum  -y   install  java-1.8.0-openjdk.x86_64
]# tar -zxvf Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz 
]# mv mycat  /usr/local/

	2.2 文件列表 （听 和 记）
[root@host56 ~]# ls /usr/local/mycat/
bin   catlet  conf  lib  logs  version.txt

		conf目录存储的是配置文件
			.xml	    #mycat服务配置文件
			server.xml     		//设置连接账号及逻辑库
			schema.xml   	//配置数据分片存储的表
			rule.xml         		//分片规则
xml  扩展标记语言  标签要成对出现
注释符号 <!--     -->
			
		.properties    和   .txt    #分片规则配置文件



		2.3.2  定义要分片存储数据的表(重点)
[root@host56 ~]# vim /usr/local/mycat/conf/schema.xml
<mycat:schema 选项>
	<schema 选项>   #指定分片存储数据的表名
		<table  选项>   </table>#指定表名 和调用的分片规则及存储数据的数据库服务器 
		<table  选项     /> 
	</schema> 

	<datanode 选项/> #指定数据库服务器的主机名

	<datahost  选项>   #指定数据库服务器的Ip地址
	</datahost>	
</mycat:schema>

例子：
[root@host56 ~]# sed -i '56,77d' /usr/local/mycat/conf/schema.xml
[root@host56 ~]# sed -i '39,42d' /usr/local/mycat/conf/schema.xml
[root@host56 ~]# vim /usr/local/mycat/conf/schema.xml

<table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile" />


<table name="goods" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />


<table name="customer" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile">

<dataNode name="dn1" dataHost="mysql51" database="db1" />
<dataNode name="dn2" dataHost="mysql52" database="db2" />
<dataNode name="dn3" dataHost="mysql53" database="db3" />

       <dataHost name="mysql51" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM1" url="192.168.4.51:3306" user="pljadmin"
                                   password="123qqq...A">
                </writeHost>
        </dataHost>


<dataHost name="mysql52" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM2" url="192.168.4.52:3306" user="pljadmin"
                                   password="123qqq...A">
                </writeHost>
        </dataHost>

<dataHost name="mysql53" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM3" url="192.168.4.53:3306" user="pljadmin"
                                   password="123qqq...A">
                </writeHost>
        </dataHost>
:wq


2.4 配置数据库服务器（51/52/53）
		2.4.1 创建存储数据的库
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'create database db1'
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'create database db2'
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'create database db3'

		2.4.2 添加给mycat连接使用的用户
[root@host53 ~]#  mysql -uroot -p123qqq...A -e 'grant all on *.* to pljadmin@"%" identified by "123qqq...A"'
[root@host52 ~]#  mysql -uroot -p123qqq...A -e 'grant all on *.* to pljadmin@"%" identified by "123qqq...A"'
[root@host51 ~]#  mysql -uroot -p123qqq...A -e 'grant all on *.* to pljadmin@"%" identified by "123qqq...A"'

	2.5 启动mycat服务 并查看服务状态
		注意 关闭(51 52 53  56  的  selinux   和 firewalld)
		2.5.1 测试数据库服务的授权用户
[root@host56 ~]# which  mysql || yum -y install mariadb
[root@host56 ~]# mysql -h192.168.4.53 -upljadmin -p123qqq...A
[root@host56 ~]# mysql -h192.168.4.52 -upljadmin -p123qqq...A
[root@host56 ~]# mysql -h192.168.4.51 -upljadmin -p123qqq...A
		2.5.2 启动mycat服务
[root@host56 ~]# ls /usr/local/mycat/logs/
[root@host56 ~]# 
[root@host56 ~]# /usr/local/mycat/bin/mycat start
Starting Mycat-server...
[root@host56 ~]# 
[root@host56 ~]# ls /usr/local/mycat/logs/
mycat.log  mycat.pid  wrapper.log
[root@host56 ~]# 
[root@host56 ~]# cat /usr/local/mycat/logs/mycat.pid 
10203
[root@host56 ~]#			
[root@host56 ~]# netstat  -utnlp  | grep 8066
tcp6       0      0 :::8066                 :::*                    LISTEN      10211/java          
[root@host56 ~]# 	
		
	2.6 客户端连接mycat服务，查看数据
命令格式  ]#  mysql -h192.168.4.56  -P8066 -u用户  -p密码
[root@host50 ~]# mysql -h192.168.4.56 -P8066 -uroot -p123456
> show  databases;
> use TESTDB;
> show tables；


3 测试配置
	存储数据的过程：
		根据表使用的分片规则建表
			查看表使用的分片规则
			查看要求表中必须要有的字段名(分片字段)
			根据分片规则建表
		                 存储数据
			查看数据是否分布式存储

	3.1 分片规则  枚举规则sharding-by-intfile
		    具体的方法：分片字段值 必须在 规则文件 定义的 值里 选择


	     cat schema.xml   得知  employee 表使用 sharding-by-intfile
 <table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile" />

	     cat  rule.xml        得知  分片字段名
[root@host56 ~]# vim /usr/local/mycat/conf/rule.xml
       <tableRule name="sharding-by-intfile"> 规则命令
                <rule>
                        <columns>sharding_id</columns>字段名
                        <algorithm>hash-int</algorithm> 算法
                </rule>
        </tableRule>

       <function name="hash-int"
                class="io.mycat.route.function.PartitionByFileMap"> 算法名
                <property name="mapFile">partition-hash-int.txt</property> 对应的配置文件
        </function>
 :wq
		编辑分片规则配置文件，定义分片字段的值
[root@host56 ~]# vim /usr/local/mycat/conf/partition-hash-int.txt 
10000=0  
10010=1  
10020=2
:wq
		重启mycat服务
[root@host56 ~]# /usr/local/mycat/bin/mycat stop
[root@host56 ~]# /usr/local/mycat/bin/mycat start
[root@host56 ~]# netstat  -utnlp  | grep 8066

客户端连接56主机创建表
[root@host50 ~]# mysql -h192.168.4.56 -P8066 -uroot -p123456
mysql> use TESTDB;
mysql> create table employee(id int primary key  auto_increment ,
    -> sharding_id  int , name char(10) , home char(15) );
mysql>

在3台数据库服务器本机查看表结构
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'desc db1.employee'
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'desc db2.employee'
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'desc db3.employee'

[root@host50 ~]# mysql -h192.168.4.56 -P8066 -uroot -p123456
mysql> use TESTDB;
mysql> insert into employee(sharding_id , name , home ) values (10030,"tom","usa");
ERROR 1064 (HY000): can't find any valid datanode :EMPLOYEE -> SHARDING_ID -> 10030
mysql>





mysql> insert into employee(sharding_id , name , home ) values (10000,"tom","usa");
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee(sharding_id , name , home ) values (10000,"tom","usa");
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee(sharding_id , name , home ) values (10010,"lucy","usa");
Query OK, 1 row affected (0.04 sec)

mysql> insert into employee(sharding_id , name , home ) values (10010,"jerry","usa");
Query OK, 1 row affected (0.02 sec)

mysql> insert into employee(sharding_id , name , home ) values (10010,"jerryA","usa");
Query OK, 1 row affected (0.01 sec)


mysql> insert into employee(sharding_id , name , home ) values (10020,"johnA","usa");
Query OK, 1 row affected (0.06 sec)

mysql> insert into employee(sharding_id , name , home ) values (10020,"johnAa","usa");
Query OK, 1 row affected (0.04 sec)

mysql> insert into employee(sharding_id , name , home ) values (10020,"johnAaB","usa");

mysql> select  * from employee;  查看数据 
+----+-------------+---------+------+
| id | sharding_id | name    | home |
+----+-------------+---------+------+
|  1 |       10000 | tom     | usa  |
|  2 |       10000 | tom     | usa  |
|  1 |       10020 | johnA   | usa  |
|  2 |       10020 | johnAa  | usa  |
|  3 |       10020 | johnAaB | usa  |
|  1 |       10010 | lucy    | usa  |
|  2 |       10010 | jerry   | usa  |
|  3 |       10010 | jerryA  | usa  |
+----+-------------+---------+------+
8 rows in set (0.03 sec)

在数据库服务器本机查看数据

[root@host51 ~]# mysql -uroot -p123qqq...A -e 'select  * from  db1.employee'

[root@host52 ~]#  mysql -uroot -p123qqq...A -e 'select  * from db2.employee'

[root@host52 ~]#  mysql -uroot -p123qqq...A -e 'select  * from db2.employee'

