1  PXC集群
	PXC软件介绍
	使用拓扑
	配置pxc集群
		1   3台主机都要安装软件（按照ppt的顺序按照）
		2   安装文件说明
]# ls /etc/percona-xtradb-cluster.conf.d/

		mysqld.cnf   MySQL服务运行配置
		mysqld_safe.cnf   MySQL服务进程运行参数配置（无需修改）
		wsrep.cnf  集群配置文件（重点）
		
		3 修改配置文件
			3.1  修改MySQL服务运行配置
修改3台数据库服务器的server_id  值不允许相同
vim /etc/percona-xtradb-cluster.conf.d/mysqld.cnf (其他配置默认即可)

			3.2  修改集群配置（集群名称、集群成员列表、授权用户要一样）
修改71 的wsrep.cnf文件
[root@pxc71 pxc]# vim /etc/percona-xtradb-cluster.conf.d/wsrep.cnf
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73
wsrep_node_address=192.168.4.71
wsrep_cluster_name=pxc-cluster
wsrep_node_name=pxc-cluster-node-71
wsrep_sst_auth="sstuser:123qqq...A"

修改72 的wsrep.cnf文件
[root@pxc72 pxc]# vim /etc/percona-xtradb-cluster.conf.d/wsrep.cnf
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73
wsrep_node_address=192.168.4.72
wsrep_cluster_name=pxc-cluster
wsrep_node_name=pxc-cluster-node-72
wsrep_sst_auth="sstuser:123qqq...A"

修改73 的wsrep.cnf文件
[root@pxc73 pxc]# vim /etc/percona-xtradb-cluster.conf.d/wsrep.cnf
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73
wsrep_node_address=192.168.4.73
wsrep_cluster_name=pxc-cluster
wsrep_node_name=pxc-cluster-node-73
wsrep_sst_auth="sstuser:123qqq...A"
:wq

	
		关闭3台数据库服务器的selinux 和 firewalld
		4 初始化集群（在任意1台数据库服务器上执行都可以，只需要执行1遍）
[root@pxc71 ~]# ls /var/lib/mysql
[root@pxc71 ~]# 
[root@pxc71 ~]# systemctl  start mysql@bootstrap.service  
[root@pxc71 ~]# 
[root@pxc71 ~]# ls /var/lib/mysql
auto.cnf         gvwstate.dat    mysqld_safe.pid     pxc71-bin.000002
ca-key.pem       ib_buffer_pool  mysql.sock          pxc71-bin.index
ca.pem           ibdata1         mysql.sock.lock     server-cert.pem
client-cert.pem  ib_logfile0     performance_schema  server-key.pem
client-key.pem   ib_logfile1     private_key.pem     sys
galera.cache     ibtmp1          public_key.pem      xb_doublewrite
grastate.dat     mysql           pxc71-bin.000001
[root@pxc71 ~]# 
[root@pxc71 ~]# vim /etc/percona-xtradb-cluster.conf.d/mysqld.cnf 
[root@pxc71 ~]# 
[root@pxc71 ~]# netstat  -utnlp  | grep  3306
tcp6       0      0 :::3306                 :::*                    LISTEN      88919/mysqld        
[root@pxc71 ~]# netstat  -utnlp  | grep  4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      88919/mysqld        
[root@pxc71 ~]# ls /var/log/mysqld.log 
/var/log/mysqld.log
[root@pxc71 ~]# 
[root@pxc71 ~]# grep  password /var/log/mysqld.log 
2020-07-31T15:05:19.539324Z 1 [Note] A temporary password is generated for root@localhost: R7,%wiOsrwki
[root@pxc71 ~]# 
[root@pxc71 ~]# mysql -uroot -p'R7,%wiOsrwki'
mysql> alter user root@"localhost" identified by "123456";
mysql> exit
[root@pxc71 ~]# mysql -uroot -p123456
mysql> grant reload, lock tables,replication client,process on *.* to sstuser@"localhost"  identified by "123qqq...A";

reload(加载数据)lock tables（锁表）replication client（检查数据库服务状态）process（可以在登录状态mysql>下使用命令管理mysql服务）

		5 在剩下2台数据库服务器上，启动mysql服务
[root@pxc72 ~]# ls /var/lib/mysql
[root@pxc72 ~]# systemctl  start mysql  启动数据库服务
[root@pxc72 ~]# 
[root@pxc72 ~]# ls /var/lib/mysql
auto.cnf         ib_logfile1             pxc72-bin.index
ca-key.pem       ibtmp1                  server-cert.pem
ca.pem           innobackup.move.log     server-key.pem
client-cert.pem  innobackup.prepare.log  sys
client-key.pem   mysql                   xb_doublewrite
galera.cache     mysql.sock              xtrabackup_binlog_pos_innodb
grastate.dat     mysql.sock.lock         xtrabackup_galera_info
gvwstate.dat     performance_schema      xtrabackup_info
ib_buffer_pool   private_key.pem         xtrabackup_master_key_id
ibdata1          public_key.pem
ib_logfile0      pxc72-bin.000001
[root@pxc72 ~]# 
[root@pxc72 ~]# netstat  -utnlp  | grep  3306
tcp6       0      0 :::3306                 :::*                    LISTEN      99627/mysqld        
[root@pxc72 ~]# netstat  -utnlp  | grep  4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      99627/mysqld        
[root@pxc72 ~]# mysql -uroot -p123456
mysql> select user  from  mysql.user where  user="sstuser";

[root@pxc73 ~]# ls /var/lib/mysql
[root@pxc73 ~]# 
[root@pxc73 ~]# systemctl  start mysql    # 启动数据库服务
[root@pxc73 ~]# 
[root@pxc73 ~]# ls /var/lib/mysql
auto.cnf         ib_logfile1             pxc73-bin.index
ca-key.pem       ibtmp1                  server-cert.pem
ca.pem           innobackup.move.log     server-key.pem
client-cert.pem  innobackup.prepare.log  sys
client-key.pem   mysql                   xb_doublewrite
galera.cache     mysql.sock              xtrabackup_binlog_pos_innodb
grastate.dat     mysql.sock.lock         xtrabackup_galera_info
gvwstate.dat     performance_schema      xtrabackup_info
ib_buffer_pool   private_key.pem         xtrabackup_master_key_id
ibdata1          public_key.pem
ib_logfile0      pxc73-bin.000001
[root@pxc73 ~]# 
[root@pxc73 ~]# netstat  -utnlp | grep  3306
tcp6       0      0 :::3306                 :::*                    LISTEN      98793/mysqld        
[root@pxc73 ~]# netstat  -utnlp | grep  4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      98793/mysqld        
[root@pxc73 ~]# mysql -uroot -p123456 -e  'select user from  mysql.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+---------------+
| user          |
+---------------+
| mysql.session |
| mysql.sys     |
| root          |
| sstuser       |
+---------------+
[root@pxc73 ~]# 

		6 在3台数据库服务器本机分别查看集群状态
[root@pxc73 ~]# mysql -uroot -p123456
mysql> show  status like "%wsrep%"；

      	测试集群
		1 在任意1台数据库服务器添加客户端连接用户
[root@pxc73 ~]# mysql -uroot -p123456 -e 'grant all  on bbsdb.* to admin@"%" identified by "123456"'
[root@pxc71 ~]#  mysql  -uroot -p123456  -e 'select user from mysql.user where user="admin"'
[root@pxc72 ~]#  mysql  -uroot -p123456  -e 'select user from mysql.user where user="admin"'


		2 在客户端连接任意1台数据库服务器存取数据
[root@host53 ~]# mysql -h192.168.4.72 -uadmin -p123456
mysql> create database bbsdb;
mysql> create table bbsdb.t1(id int primary key auto_increment, name char(10));
mysql> insert into bbsdb.t1(name)values("bob"),("tom");
mysql> select  * from bbsdb.t1;
mysql> select  * from bbsdb.t1;
+----+------+
| id | name |
+----+------+
|  3 | bob  |
|  6 | tom  |
+----+------+
2 rows in set (0.00 sec)

mysql> 

mysql> exit;

[root@host53 ~]# mysql -h192.168.4.71 -uadmin -p123456
mysql> select  * from bbsdb.t1;
+----+------+
| id | name |
+----+------+
|  3 | bob  |
|  6 | tom  |
+----+------+
2 rows in set (0.00 sec)

mysql> 
mysql> insert into bbsdb.t1(name)values("a"),("b"),("c");
mysql> select  * from bbsdb.t1;
+----+------+
| id | name |
+----+------+
|  3 | bob  |
|  6 | tom  |
|  7 | a    |
| 10 | b    |
| 13 | c    |
+----+------+
5 rows in set (0.01 sec)

mysql> exit
[root@host53 ~]# mysql -h192.168.4.73 -uadmin -p123456
mysql> insert into bbsdb.t1(name)values("A"),("B"),("C");
mysql> select  * from bbsdb.t1;
+----+------+
| id | name |
+----+------+
|  3 | bob  |
|  6 | tom  |
|  7 | a    |
| 10 | b    |
| 13 | c    |
| 14 | A    |
| 17 | B    |
| 20 | C    |
+----+------+
8 rows in set (0.00 sec)

mysql> 

		3 停止任意1台数据库服务器。另外2台照常提供服务
[root@pxc71 ~]#  systemctl  stop mysql@bootstrap.service 
[root@host53 ~]# mysql -h192.168.4.73 -uadmin -p123456
mysql> insert into  bbsdb.t1(name) values("ff");

[root@host53 ~]# mysql -h192.168.4.72 -uadmin -p123456	
mysql> insert into  bbsdb.t1(name) values("zz");	
  
		4 启动停止主机的mysql服务，登录后查看集群状态和数据

[root@pxc71 ~]# mysql -uroot -p123456 -e 'show status like "%wsrep%"'
[root@pxc71 ~]# mysql -uroot -p123456 -e 'select * from bbsdb.t1'


2 MySQL存储引擎（理论比较多  难点 ）
	2.1  什么是存储引擎：是mysql服务的功能组件。存储引擎有不同功能和数据存储方式。表的处理器。

	2.2 MySQL服务体系结构
	2.3MySQL服务处理查询访问的工作过程

	2.4 查看数据库服务支持和默认使用的存储引擎
	show engines;

	2.5 查看服务器已有的表使用的存储引擎
		show create table 库.表名;

	2.6 修改数据库服务默认使用的存储引擎
]# vim /etc/my.cn 
[mysqld]
default-storage-engine=myisam
:wq

[root@host53 ~]# systemctl restart mysqld
[root@host53 ~]# mysql -uroot -p123qqq...A  -e 'show engines'
	
	2.7 建表时指定表使用的存储引擎和修改表使用的存储引擎
		create table db10.tea( name char(10),age int)engine=memory;

                                 mysql> alter table  db10.tea engine=myisam;
 

	2.8 常用存储引擎特点介绍
	2.9 事的特点及 演示
	2.10 建表时，如何觉得表使用哪种存储引擎？