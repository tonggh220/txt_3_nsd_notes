+++++++++++++++++RDBMS02_DAY04   MySQL高可用集群（软件 MHA）
		  
什么是集群？多台服务器一起提供相同的服务（httpd  mysqld）
集群的分类？ 负载均衡集群 LB (多台服务器平均分摊客户端的多次访问)
	     高可用集群   HA  （主备模式  正在提供服务主机称为主 主不能够提供服务备用的主机顶替继续提供服务，顶替的过程对客户端是透明）


对应的集群软件： 
             LB   : LVS  haproxy  nginx
	     HA   ： keepalived  
	     
		休息到 16:10 
1 mha软件介绍
2 MHA服务工作过程
3 实验拓扑
4 配置MHA集群
	4.1 部署集群环境
		 1.4.1 在所有主机(57 51 52 53 )安装依赖的软件perl (10分钟到16:42)
			]# cd mha
			]# yum -y  install perl-*.rpm
		 1.4.2 配置ssh免密登录
				1 数据库服务器主机之间ssh免密登录
[root@host51 mha]# ssh-keygen
[root@host51 mha]# ssh-copy-id  root@192.168.4.52
[root@host51 mha]# ssh-copy-id  root@192.168.4.53

[root@host51 mha]# ssh root@192.168.4.52
Last login: Thu Jul  2 00:41:13 2020 from 192.168.4.1
[root@host52 ~]# exit
登出
Connection to 192.168.4.52 closed.

[root@host51 mha]# ssh root@192.168.4.53
Last login: Wed Jul  1 17:18:45 2020 from 192.168.4.1
[root@host53 ~]# exit
登出
Connection to 192.168.4.53 closed.
[root@host51 mha]#


[root@host52 mha]# ssh-keygen
[root@host52 mha]# ssh-copy-id  root@192.168.4.51
[root@host52 mha]# ssh-copy-id  root@192.168.4.53

[root@host52 mha]# ssh root@192.168.4.51
Last login: Thu Jul  2 00:33:01 2020 from 192.168.4.1
[root@host51 ~]# exit
登出
Connection to 192.168.4.51 closed.
[root@host52 mha]# 
[root@host52 mha]# ssh root@192.168.4.53
Last login: Thu Jul  2 00:47:53 2020 from 192.168.4.51
[root@host53 ~]# 
[root@host53 ~]# exit
登出
Connection to 192.168.4.53 closed.
[root@host52 mha]#



[root@host53 mha]# ssh-keygen
[root@host53 mha]# ssh-copy-id  root@192.168.4.52
[root@host53 mha]# ssh-copy-id  root@192.168.4.51

[root@host53 mha]# ssh  root@192.168.4.52
Last login: Thu Jul  2 00:47:48 2020 from 192.168.4.51
[root@host52 ~]# exit
登出
Connection to 192.168.4.52 closed.
[root@host53 mha]# 
[root@host53 mha]# ssh  root@192.168.4.51
Last login: Thu Jul  2 00:48:57 2020 from 192.168.4.52
[root@host51 ~]# exit
登出
Connection to 192.168.4.51 closed.
[root@host53 mha]#


				2 管理主机57 ，ssh免密登录所有数据库服务器 

[root@host57 mha]# ssh-keygen 
[root@host57 mha]# ssh-copy-id  root@192.168.4.53
[root@host57 mha]# ssh-copy-id  root@192.168.4.52
[root@host57 mha]# ssh-copy-id  root@192.168.4.51
		
[root@host57 mha]# ssh root@192.168.4.51
Last login: Thu Jul  2 00:50:34 2020 from 192.168.4.53
[root@host51 ~]# exit
登出
Connection to 192.168.4.51 closed.
[root@host57 mha]# 
[root@host57 mha]# ssh root@192.168.4.52
Last login: Thu Jul  2 00:51:01 2020 from 192.168.4.53
[root@host52 ~]# 
[root@host52 ~]# exit
登出
Connection to 192.168.4.52 closed.
[root@host57 mha]# 
[root@host57 mha]# ssh root@192.168.4.53
Last login: Thu Jul  2 00:49:35 2020 from 192.168.4.52
[root@host53 ~]# exit
登出
Connection to 192.168.4.53 closed.
[root@host57 mha]# 

1.4.3 配置一主多从 同步结构
			 1 配置主数据库服务器51  (10分钟到 17:30)
host51~]#  vim /etc/my.cnf
[mysqld]
server_id=51
log_bin=master51
:wq

[root@host51 mha]# systemctl  restart mysqld

[root@host51 mha]# mysql -uroot -p123qqq...A -e 'grant replication slave on  *.* to repluser@"%" identified by "123qqq...A"'

[root@host51 mha]# mysql -uroot -p123qqq...A -e 'show master status'

+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
[root@host51 mha]#

			 2 配置从数据库服务器52
[root@host52 mysql]# vim /etc/my.cnf
[mysqld]
server_id=52
:wq
[root@host52 mysql]# systemctl  restart mysqld

[root@host52 mysql]# mysql -uroot -p666qqq...B
mysql> show slave status \G
Empty set (0.10 sec)
mysql> 
mysql> 
mysql> change master to master_host="192.168.4.51" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.08 sec)

mysql> start slave;
Query OK, 0 rows affected (0.01 sec)

mysql> exit
Bye
[root@host52 mysql]# mysql -uroot -p666qqq...B -e 'show slave status \G ' | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host52 mysql]# 
[root@host52 mysql]# mysql -uroot -p666qqq...B -e 'show slave status \G ' | grep -i master_hostmysql: [Warning] Using a password on the command line interface can be insecure.
                  Master_Host: 192.168.4.51
[root@host52 mysql]#

			 3 配置从数据库服务器53
[root@host53 mha]# vim /etc/my.cnf
[mysqld]
server_id=53
:wq
[root@host53 mha]# systemctl  restart mysqld
[root@host53 mha]# mysql -uroot -p666qqq...B
mysql> change master to master_host="192.168.4.51" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.02 sec)

mysql> start slave;
Query OK, 0 rows affected (0.01 sec)

mysql> exit
Bye
[root@host53 mha]# mysql -uroot -p666qqq...B -e 'show slave status \G' | grep -i yes
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host53 mha]# 
[root@host53 mha]# mysql -uroot -p666qqq...B -e 'show slave status \G' | grep -i master_host
mysql: [Warning] Using a password on the command line interface can be insecure.
                  Master_Host: 192.168.4.51
[root@host53 mha]#


	4.2 配置管理主机
		4.2.1  安装MHA_manager软件
			[root@host57 ~]# yum -y install  /var/ftp/upload/mha/mha4mysql-node-0.56-0.el6.noarch.rpm

			]# yum -y install  perl-ExtUtils-*  perl-CPAN*

			[root@host57 ~]# tar -zxvf /var/ftp/upload/mha/mha4mysql-manager-0.56.tar.gz 

[root@host57 ~]# cd mha4mysql-manager-0.56/

[root@host57 mha4mysql-manager-0.56]# perl Makefile.PL 
*** Module::AutoInstall version 1.03
*** Checking for Perl dependencies...
[Core Features]
- DBI                   ...loaded. (1.627)
- DBD::mysql            ...loaded. (4.023)
- Time::HiRes           ...loaded. (1.9725)
- Config::Tiny          ...loaded. (2.14)
- Log::Dispatch         ...loaded. (2.41)
- Parallel::ForkManager ...loaded. (1.18)
- MHA::NodeConst        ...loaded. (0.56)
*** Module::AutoInstall configuration finished.
Checking if your kit is complete...
Looks good
Writing Makefile for mha4mysql::manager
Writing MYMETA.yml and MYMETA.json
[root@host57 mha4mysql-manager-0.56]#
[root@host57 mha4mysql-manager-0.56]# make  
[root@host57 mha4mysql-manager-0.56]# make  install


			4.2.2 创建主配置文件并编辑
			[root@host57 mha4mysql-manager-0.56]# mkdir /etc/mha

			[root@host57 mha4mysql-manager-0.56]# ls samples/conf/
app1.cnf  masterha_default.cnf

[root@host57 mha4mysql-manager-0.56]# cp samples/conf/app1.cnf /etc/mha/					
			[root@host57 mha4mysql-manager-0.56]# ls /etc/mha/
app1.cnf

[root@host57 mha4mysql-manager-0.56]# vim /etc/mha/app1.cnf 
[server default] #管理服务运行参数配置项

[server数字]  定义数据库服务器ip地址

                [root@host57 mha4mysql-manager-0.56]# cat /etc/mha/app1.cnf 
[server default]
manager_workdir=/etc/mha
manager_log=/etc/mha/manager.log
master_ip_failover_script=/etc/mha/master_ip_failover

ssh_user=root
ssh_port=22

repl_user=repluser
repl_password=123qqq...A


user=root
password=123qqq...A

[server1]
hostname=192.168.4.51
port=3306
candidate_master=1

[server2]
hostname=192.168.4.52
port=3306
candidate_master=1

[server3]
hostname=192.168.4.53
port=3306
candidate_master=1

[root@host57 mha4mysql-manager-0.56]# 



		根据配置文件app1.cnf的设置，创建故障切换脚本，指定vip地址和网卡名

[root@host57 ~ ]# cp /var/ftp/upload/mha/master_ip_failover /etc/mha/

[root@host57 ~ ]# chmod  +x  /etc/mha/master_ip_failover

[root@host57 ~ ]# vim +35 /etc/mha/master_ip_failover

my $vip = '192.168.4.100/24';  # 指定vip地址 
my $key = "1";  #VIP地址编号
my $ssh_start_vip = "/sbin/ifconfig ens33:$key $vip";  #部署vip地址
my $ssh_stop_vip = "/sbin/ifconfig ens33:$key down";   #释放vip地址
:wq

		把vip地址100 部署在当前的主服务器51 上
[root@localhost ~]# which  ifconfig
/usr/sbin/ifconfig
[root@localhost ~]# rpm -qf /usr/sbin/ifconfig 
net-tools-2.0-0.22.20131004git.el7.x86_64
[root@localhost ~]# 			
[root@localhost ~]# ifconfig ens33:1 192.168.4.100
[root@localhost ~]# 
[root@localhost ~]# ip addr show  | grep -i 192
    inet 192.168.4.51/24 brd 192.168.4.255 scope global noprefixroute ens33
    inet 192.168.4.100/24 brd 192.168.4.255 scope global secondary ens33:1
[root@localhost ~]#

                4.3 优化数据库服务器的配置 （没有新知识 ，要理解问什么要这样配置）
		4.3.1  在所有数据库服务器51 52 53 安装mha_node软件
	]# yum -y install /var/ftp/upload/mha/mha4mysql-node-0.56-0.el6.noarch.rpm
	
		4.3.2 用户授权
			 在数据库服务器51 52 53 添加监控用户root
		mysql> grant all on  *.*  to root@"%" identified by "123qqq...A";

			 在备用数据库服务器 52 53 添加同步数据连接用户repluser

		mysql> grant replication slave on *.*  to repluser@"%" 	identified by "123qqq...A";	


		4.3.3 在所有数据库服务器启用半同步复制模式
plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so;"

rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1


	        4.3.4 在备用数据库服务器 52 53 上启用binlog日志
			log_bin=日志名

		4.3.5 禁止51 52 53自动删除本机的中继日志文件
			relay_log_purge=0


	        4.3.6 重启数据库服务
			先重启52 和 53 的数据库服务
			再重启51 的 数据库服务
			然后查看 52 和 53 主机 slave 进程的状态

        4.4 启动管理服务
		在57  测试ssh免密登录配置
[root@host57 ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf 

Fri Jul  3 22:07:53 2020 - [info] All SSH connection tests passed successfully.


		在57  测试主从同步配置
[root@host57 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf 
MySQL Replication Health is OK.

		在57  启动管理服务

[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf  --ignore_last_failover   启动服务，启动信息会占用终端显示
Fri Jul  3 22:27:18 2020 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.
Fri Jul  3 22:27:18 2020 - [info] Reading application default configuration from /etc/mha/app1.cnf..
Fri Jul  3 22:27:18 2020 - [info] Reading server configuration from /etc/mha/app1.cnf..

[root@host57 ~]# masterha_check_status --conf=/etc/mha/app1.cnf  #开新终端查看状态
app1 (pid:1917) is running(0:PING_OK), master:192.168.4.51
[root@host57 ~]# 

查看主服务器 51 使用部署的vip 地址 192.168.4.100
[root@host51 ~]# ip addr show  | grep  192
    inet 192.168.4.51/24 brd 192.168.4.255 scope global noprefixroute ens33
    inet 192.168.4.100/24 brd 192.168.4.255 scope global secondary ens33:1
[root@localhost ~]# 

[root@host57 ~]# ls /etc/mha/  查看工作目录文件列表
app1.cnf  app1.master_status.health  manager.log  master_ip_failover
[root@host57 ~]# 

#######################################################################
	4.5 访问集群
		在当前的主服务器51 添加客户端连接账号
]# mysql -uroot -p123qqq...A
mysql> create database db9;
mysql> create table db9.t1(id int);
mysql> grant  select , insert on *.*  to  plj99@"%" identified by "123qqq...A";
		

		客户端连接vip 访问数据库服务 
		
[root@host50 ~]# mysql -h192.168.4.100 -uplj99 -p123qqq...A

mysql> insert into db9.t1 values(999);
mysql> select  * from db9.t1;
+------+
| id   |
+------+
|  999 |
+------+
1 row in set (0.00 sec)

mysql>	

#########################################################################
	4.6 测试集群的高可用：
            测试结果：51的数据库服务停止后 客户端50 依然可以连接192.168.4.100访问数据

[root@host51 ~]# systemctl  stop  mysqld  （会释放vip地址100）

57主机的管理服务会自动停止 
[root@host57 ~]# masterha_check_status  --conf=/etc/mha/app1.cnf


在52 或 53 主机查看vip 地址
]# ip addr show  | grep  -i 192 （谁被选举为新master 谁就有vip100）

另一台 数据库服务器会自动做新的master的从服务器 ]# mysql -uroot -p666qqq...B -e 'show slave status \G '


客户端50 依然可以连接192.168.4.100访问数据 host50]# mysql -h192.168.4.100 -uplj99 -p123qqq...A

在管理主机57查看app1.cnf文件， 只剩下2台数据库服务器，启动管理服务会自动监控当前的主数据库服务器

[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf  --ignore_last_failover 

 [root@host57 ~]# masterha_check_status  --conf=/etc/mha/app1.cnf  开新终端查看服务的状态


 	4.7 修复宕机的数据库服务器
		4.7.1 配置数据库服务器51
			启动mysql服务  ]# systemctl  start  mysqld 

			与主服务器数据一致
[root@host52 ~]# ls /var/lib/mysql
[root@host52 ~]# scp /var/lib/mysql/master52.000001  root@192.168.4.51:/root/
[root@localhost ~]# mysqlbinlog  /root/master52.000001 | mysql -uroot -p123qqq...A
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@localhost ~]# 
[root@localhost ~]# mysql -uroot -p123qqq...A -e 'select * from db9.t1'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|  999 |
|  888 |
+------+
[root@localhost ~]# 
[root@host52 ~]# mysql -uroot -p666qqq...B  -e 'show master status'
mysql: [Warning] Using a password on the command line interface can be insecure.
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master52.000001 |      402 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
[root@host52 ~]# 
			指定主服务器信息
[root@localhost ~]# mysql -uroot -p123qqq...A -e 'show slave status \g'
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@localhost ~]# 
[root@localhost ~]# mysql -uroot -p123qqq...A -e 'change master to  master_host="192.168.4.52",master_user="repluser",master_password="123qqq...A",master_log_file="master52.000001",master_log_pos=402'
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@localhost ~]# 

				启动slave进程
[root@localhost ~]# mysql -uroot -p123qqq...A -e 'start slave'



				查看状态信息
[root@localhost ~]# mysql -uroot -p123qqq...A -e 'show slave status \G' | grep  -i yes

             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
 
[root@localhost ~]# mysql -uroot -p123qqq...A -e 'show slave status \G' | grep  -i master_host

                  Master_Host: 192.168.4.52
[root@localhost ~]# 
			
			


		4.7.2 配置管理主机57
			查看57管理服务的状态
[root@host57 ~]# masterha_check_status  --conf=/etc/mha/app1.cnf 
app1 (pid:3495) is running(0:PING_OK), master:192.168.4.52
[root@host57 ~]# 
			检查主从同步
[root@host57 ~]# masterha_check_repl   --conf=/etc/mha/app1.cnf （此时没有51）			

			修改主配置文件，添加主机51
[root@host57 ~]# vim /etc/mha/app1.cnf
[server1]
candidate_master=1
hostname=192.168.4.51
port=3306
:wq
			

			测试集群环境(检查主从同步)
[root@host57 ~]# masterha_check_repl  --conf=/etc/mha/app1.cnf
MySQL Replication Health is OK.

			重启管理服务
[root@host57 ~]# masterha_stop  --conf=/etc/mha/app1.cnf 
Stopped app1 successfully.
[root@host57 ~]# 
[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf  --ignore_last_failover (开新终端执行启动服务的命令)

			查看服务状态

[root@host57 ~]# masterha_check_status  --conf=/etc/mha/app1.cnf 
app1 (pid:5114) is running(0:PING_OK), master:192.168.4.52
[root@host57 ~]# 