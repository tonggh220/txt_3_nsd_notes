	一、PXC集群
	    1 软件介绍
	    2 软件特点
	    3 实验拓扑 （pxc）
	    4 配置pxc集群,具体步骤如下：
			4.1 在3台主机分别安装软件
cd pxc/

ls

yum -y  install libev-4.15-1.el6.rf.x86_64.rpm 

yum -y install percona-xtrabackup-24-2.4.13-1.el7.x86_64.rpm 

yum -y install qpress-1.1-14.11.x86_64.rpm 

tar -xvf Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar 

ls Percona-XtraDB-Cluster-*.rpm

yum -y install  Percona-XtraDB-Cluster-*.rpm

]# ls /etc/percona-xtradb-cluster.conf.d/
mysqld.cnf  mysqld_safe.cnf  wsrep.cnf
[root@pxc71 pxc]#

			4.2 在3台主机分别修改配置文件
				1 修改MySQL服务配置文件(只需要修改server_id)
pxc71~]# mysqld.cnf
[mysqld]
server-id=71
:wq

pxc72~]# mysqld.cnf
[mysqld]
server-id=72
:wq

pxc73~]# mysqld.cnf
[mysqld]
server-id=73
:wq

				2 修改集群配置文件
pxc71~]# vim  wsrep.cnf
         8 wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73
	 25 wsrep_node_address=192.168.4.71
	 27 wsrep_cluster_name=pxc-cluster
	 30 wsrep_node_name=pxc-cluster-node-71
         39 wsrep_sst_auth="sstuser:123qqq...A"
:wq

pxc72~]# vim  wsrep.cnf
         8 wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73
	 25 wsrep_node_address=192.168.4.72
	 27 wsrep_cluster_name=pxc-cluster
	 30 wsrep_node_name=pxc-cluster-node-72
         39 wsrep_sst_auth="sstuser:123qqq...A"

pxc73~]# vim  wsrep.cnf
 	 8 wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73
	 25 wsrep_node_address=192.168.4.73
	 27 wsrep_cluster_name=pxc-cluster
	 30 wsrep_node_name=pxc-cluster-node-73
         39 wsrep_sst_auth="sstuser:123qqq...A"
:wq

				3 mysql进程的运行参数文件默认即可
				]# cat  mysqld_safe.cnf

4.3 在任意1台主机做集群初始化操作
[root@pxc71 ~]# ls /var/lib/mysql
[root@pxc71 ~]# 
[root@pxc71 ~]# systemctl  start  mysql@bootstrap.service
[root@pxc71 ~]# 
[root@pxc71 ~]# ls /var/lib/mysql
auto.cnf         grastate.dat    ibtmp1              private_key.pem   server-key.pem
ca-key.pem       gvwstate.dat    mysql               public_key.pem    sys
ca.pem           ib_buffer_pool  mysqld_safe.pid     pxc71-bin.000001  xb_doublewrite
client-cert.pem  ibdata1         mysql.sock          pxc71-bin.000002
client-key.pem   ib_logfile0     mysql.sock.lock     pxc71-bin.index
galera.cache     ib_logfile1     performance_schema  server-cert.pem
[root@pxc71 ~]# 
[root@pxc71 ~]# netstat  -utnlp  | grep  3306
tcp6       0      0 :::3306                 :::*                    LISTEN      15043/mysqld        
[root@pxc71 ~]# ls /var/log/mysqld.log 
/var/log/mysqld.log
[root@pxc71 ~]# 
[root@pxc71 ~]# grep password /var/log/mysqld.log 
2020-07-04T11:01:17.432587Z 1 [Note] A temporary password is generated for root@localhost: Bh_rrOVnU1uY
[root@pxc71 ~]# 
[root@pxc71 ~]# mysql -uroot -p'Bh_rrOVnU1uY'
mysql> show databases;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
mysql> 
mysql> alter user root@"localhost" identified by "123456";
Query OK, 0 rows affected (0.00 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> 
mysql> grant reload, lock tables,replication client,process on *.* to sstuser@"localhost" identified by  "123qqq...A"; 
Query OK, 0 rows affected, 1 warning (0.01 sec)

reload, lock tables,replication client,process
装载数据，锁表，查看MySQL服务状态，可以使用命令停止MySQL服务

mysql> select user from mysql.user where user="sstuser";
+---------+
| user    |
+---------+
| sstuser |
+---------+
1 row in set (0.00 sec)

mysql> exit
Bye
[root@pxc71 ~]# mysql -uroot -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database bbsdb;
Query OK, 1 row affected (0.01 sec)

mysql> create table bbsdb.t1(id int primary key auto_increment , name char(10));
Query OK, 0 rows affected (0.05 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> 

[root@pxc71 ~]# setenforce 0
[root@pxc71 ~]# systemctl  stop firewalld
[root@pxc71 ~]# netstat  -utnlp  | grep  4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      15043/mysqld        
[root@pxc71 ~]#

			4.4 在另外2台主机启动mysql服务
[root@pxc72 ~]# systemctl  stop firewalld
[root@pxc72 ~]# setenforce 0
[root@pxc72 ~]# ls /var/lib/mysql
[root@pxc72 ~]# ls /var/lib/mysql
[root@pxc72 ~]# 
[root@pxc72 ~]# systemctl  start mysql
[root@pxc72 ~]# 
[root@pxc72 ~]# ls /var/lib/mysql
auto.cnf         gvwstate.dat            mysql               server-cert.pem
bbsdb            ib_buffer_pool          mysql.sock          server-key.pem
ca-key.pem       ibdata1                 mysql.sock.lock     sys
ca.pem           ib_logfile0             performance_schema  xb_doublewrite
client-cert.pem  ib_logfile1             private_key.pem     xtrabackup_binlog_pos_innodb
client-key.pem   ibtmp1                  public_key.pem      xtrabackup_galera_info
galera.cache     innobackup.move.log     pxc72-bin.000001    xtrabackup_info
grastate.dat     innobackup.prepare.log  pxc72-bin.index     xtrabackup_master_key_id
[root@pxc72 ~]# 
[root@pxc72 ~]# netstat  -utnlp  | grep  3306
tcp6       0      0 :::3306                 :::*                    LISTEN      13998/mysqld        
[root@pxc72 ~]# netstat  -utnlp  | grep  4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      13998/mysqld        
[root@pxc72 ~]# mysql -uroot -p123456 -e 'show databases'
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
[root@pxc72 ~]# mysql -uroot -p123456 -e 'select user from mysql.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+---------------+
| user          |
+---------------+
| mysql.session |
| mysql.sys     |
| root          |
| sstuser       |
+---------------+
[root@pxc72 ~]# 







[root@pxc73 ~]# setenforce 0
[root@pxc73 ~]# systemctl  stop firewalld
[root@pxc73 ~]# ls /var/lib/mysql
[root@pxc73 ~]#
[root@pxc73 ~]# ls /var/lib/mysql
[root@pxc73 ~]# 
[root@pxc73 ~]# systemctl  start mysql
[root@pxc73 ~]# 
[root@pxc73 ~]# ls /var/lib/mysql
auto.cnf         gvwstate.dat            mysql               server-cert.pem
bbsdb            ib_buffer_pool          mysql.sock          server-key.pem
ca-key.pem       ibdata1                 mysql.sock.lock     sys
ca.pem           ib_logfile0             performance_schema  xb_doublewrite
client-cert.pem  ib_logfile1             private_key.pem     xtrabackup_binlog_pos_innodb
client-key.pem   ibtmp1                  public_key.pem      xtrabackup_galera_info
galera.cache     innobackup.move.log     pxc73-bin.000001    xtrabackup_info
grastate.dat     innobackup.prepare.log  pxc73-bin.index     xtrabackup_master_key_id
[root@pxc73 ~]# 
[root@pxc73 ~]# netstat  -utnlp  | grep 3306
tcp6       0      0 :::3306                 :::*                    LISTEN      11918/mysqld        
[root@pxc73 ~]# netstat  -utnlp  | grep 4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      11918/mysqld        
[root@pxc73 ~]# 
[root@pxc73 ~]# mysql -uroot -p123456
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.07 sec)

mysql> select user from mysql.user;
+---------------+
| user          |
+---------------+
| mysql.session |
| mysql.sys     |
| root          |
| sstuser       |
+---------------+
4 rows in set (0.00 sec)

mysql> 

##################################################################################
 	    5 测试集群
			1 连接集群存取数据（要求表中必须有主键）
客户端连接集群中的任意1台服务器都可以存取数据，另外2台服务器会自动同步数据到本机

				1.1 在集群中的任意1台服务器添加客户端连接的用户
				mysql> grant select , insert  on bbsdb.*  to  plj@"%" identified by "123456";

				1.2 客户端访问数据库服务

host50~]# mysql  -h集群中的任意1台服务器 -u用户名 -p密码

[root@host50 ~]# mysql -h192.168.4.71 -uplj -p123456
MySQL [(none)]> show grants;
+------------------------------------------------+
| Grants for plj@%                               |
+------------------------------------------------+
| GRANT USAGE ON *.* TO 'plj'@'%'                |
| GRANT SELECT, INSERT ON `bbsdb`.* TO 'plj'@'%' |
+------------------------------------------------+
2 rows in set (0.00 sec)

MySQL [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
+--------------------+
2 rows in set (0.00 sec)

MySQL [(none)]> use bbsdb;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MySQL [bbsdb]> show tables;
+-----------------+
| Tables_in_bbsdb |
+-----------------+
| t1              |
+-----------------+
1 row in set (0.00 sec)

MySQL [bbsdb]> desc t1;
+-------+----------+------+-----+---------+----------------+
| Field | Type     | Null | Key | Default | Extra          |
+-------+----------+------+-----+---------+----------------+
| id    | int(11)  | NO   | PRI | NULL    | auto_increment |
| name  | char(10) | YES  |     | NULL    |                |
+-------+----------+------+-----+---------+----------------+
2 rows in set (0.01 sec)

MySQL [bbsdb]> 
MySQL [bbsdb]> insert into  bbsdb.t1(name) values("a");
Query OK, 1 row affected (0.00 sec)

MySQL [bbsdb]> insert into  bbsdb.t1(name) values("aa");
Query OK, 1 row affected (0.07 sec)

MySQL [bbsdb]> insert into  bbsdb.t1(name) values("aaa");
Query OK, 1 row affected (0.04 sec)

MySQL [bbsdb]> select @@hostname;
+------------+
| @@hostname |
+------------+
| pxc71      |
+------------+
1 row in set (0.00 sec)

MySQL [bbsdb]> select  * from  bbsdb.t1;
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
+----+------+
3 rows in set (0.00 sec)

MySQL [bbsdb]>exit
 [root@host50 ~]# mysql -h192.168.4.72 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
+----+------+
[root@host50 ~]# mysql -h192.168.4.73 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
+----+------+
[root@host50 ~]#

[root@host50 ~]# mysql -h192.168.4.72 -uplj -p123456 -e 'insert into bbsdb.t1(name) values("b"),("bb"),("bbb")'
[root@host50 ~]# mysql -h192.168.4.72 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
|  8 | b    |
| 11 | bb   |
| 14 | bbb  |
+----+------+
[root@host50 ~]# mysql -h192.168.4.73 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
|  8 | b    |
| 11 | bb   |
| 14 | bbb  |
+----+------+
[root@host50 ~]#            



			2 测试高可用
集群中的任意1台服务器宕机 ，都不影响另外2台服务器提供服务，（如果3台同时都宕机了集群就坏了。）
			查看集群状态信息
			]# mysql -uroot -p123456 -e 'show status like "%wsrep%";'

[root@pxc71 ~]# systemctl  stop  mysql@bootstrap.service  (如果停止72 和 73 的服务 执行 systemctl stop mysql)
[root@pxc71 ~]# 

[root@host50 ~]# mysql -h192.168.4.71 -uplj -p123456 -e 'select * from bbsdb.t1'
ERROR 2003 (HY000): Can't connect to MySQL server on '192.168.4.71' (111)

[root@host50 ~]# mysql -h192.168.4.72 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
|  8 | b    |
| 11 | bb   |
| 14 | bbb  |
+----+------+
[root@host50 ~]# mysql -h192.168.4.73 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
|  8 | b    |
| 11 | bb   |
| 14 | bbb  |
+----+------+
[root@host50 ~]# 


[root@host50 ~]# mysql -h192.168.4.72 -uplj -p123456 -e 'insert into bbsdb.t1(name) values("c"),("cc"),("ccc")'
[root@host50 ~]# mysql -h192.168.4.72 -uplj -p123456 -e 'insert into bbsdb.t1(name) values("c"),("cc"),("ccc")'
[root@host50 ~]# 

[root@host50 ~]# mysql -h192.168.4.73 -uplj -p123456 -e 'select * from bbsdb.t1'
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
|  8 | b    |
| 11 | bb   |
| 14 | bbb  |
| 17 | c    |
| 19 | cc   |
| 21 | ccc  |
| 23 | c    |
| 25 | cc   |
| 27 | ccc  |
+----+------+
[root@host50 ~]# 

			3 测试主机的自动恢复
[root@pxc71 ~]# systemctl  start  mysql
[root@pxc71 ~]# mysql -uroot -p123456 -e 'show status like "%wsrep%"'
[root@pxc71 ~]# mysql -uroot -p123456 -e 'select  * from bbsdb.t1'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+------+
| id | name |
+----+------+
|  1 | a    |
|  4 | aa   |
|  7 | aaa  |
|  8 | b    |
| 11 | bb   |
| 14 | bbb  |
| 17 | c    |
| 19 | cc   |
| 21 | ccc  |
| 23 | c    |
| 25 | cc   |
| 27 | ccc  |
+----+------+
[root@pxc71 ~]#
		 

	    6 工作过程	
#####################################################################################3
        	二、MySQL存储引擎（纯理论： 难点概念和专业术语的理解）             
		2.1存储引擎介绍（什么是存储引擎）
			MySQL服务软件自带功能程序。不同的存储引擎有不同数据存储方式和功能。存储引擎是表的处理器。
			MySQL服务的体系结构(MySQL服务工作过程)
   连接池 ：检查数据库服务是否有进程响应连接，检查是否有硬件资源分配给进程使用，检查访问权限

	管理工具：安装mysql服务软件后，提供的管理命令 (mysqldump mysqladmin mysqlbinlog)


        SQL接口 把命令传递给mysqld 进程处理
        mysql>  select  insert  update create    
	
        分析器： 检查执行sql命令是否有语法错误，和访问权限

  	优化器： 优化执行的sql命令，目的是让命令可以已最节省系统硬件的方式去处理


       查询缓存：存储客户访问数据库服务器，曾经查找过的数据
		 存储空间是从系统的物理内存划分出来的。查询缓存MySQL服务默认没有开启。



        存储引擎 :表的处理器，不同存储引擎 有数据存储方式和功能。

	文件系统：存储数据硬盘(/var/lib/mysql/)         
		




 MySQL服务处理查询请求的过程
			接收的客户端的查询请求 (select) 服务会先从查询缓存里查找数据，如果有数据就直接回复给客户端。如果内存没有，到访问的表里查找数据(就是到数据库目录下的文件里查找  /var/lib/mysql/库名/表文件)，从硬盘找数据执行，会把先把数据存储到内存 再回复给客户端。           
		    
		2.2 存储引擎的使用
			查看数据库服务器已有表使用的存储引擎
			show create table 库.表 \G

mysql> show create table db10.t1 \G
*************************** 1. row ***************************
       Table: t1
Create Table: CREATE TABLE `t1` (
  `id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1
1 row in set (0.01 sec)

mysql> 
			
			查看数据库服务支持的存储引擎

			]# mysql -uroot -p密码 -e 'show  engines' 



			修改数据库服务默认使用的存储引擎  5分钟 15:59
]# vim /etc/my.cnf
	[mysqld]
	default_storage_engine="myisam"
:wq

]# systemctl restart mysqld

]# mysql -uroot -p密码 -e 'show  engines'
myisam   default

			

			建表时指定表使用的存储引擎
			create table 库名.表名（字段名列表）engine=存储引擎名；

			修改表使用的存储引擎
			alter table  库名.表名 engine=存储引擎名；

mysql> use db10;
Database changed
mysql> 
mysql> create table  db10.t3(name char(10))engine=memory;
Query OK, 0 rows affected (0.00 sec)

mysql> create table  db10.t4(name char(10))engine=innodb;
Query OK, 0 rows affected (0.02 sec)

mysql> create table  db10.t5(name char(10));
Query OK, 0 rows affected (0.00 sec)

mysql> 

mysql> system  ls /var/lib/mysql/db10/t3.*
/var/lib/mysql/db10/t3.frm
mysql> 
mysql> system  ls /var/lib/mysql/db10/t4.*
/var/lib/mysql/db10/t4.frm  /var/lib/mysql/db10/t4.ibd
mysql> 
mysql> system  ls /var/lib/mysql/db10/t5.*
/var/lib/mysql/db10/t5.frm  /var/lib/mysql/db10/t5.MYD	/var/lib/mysql/db10/t5.MYI
mysql>

mysql> insert into db10.t3 values("bbb");
Query OK, 1 row affected (0.00 sec)

mysql> insert into db10.t4 values("bbb");
Query OK, 1 row affected (0.00 sec)

mysql> insert into db10.t5 values("bbb");
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db10.t3;
+------+
| name |
+------+
| bbb  |
+------+
1 row in set (0.00 sec)

mysql> select  * from db10.t4;
+------+
| name |
+------+
| bbb  |
+------+
1 row in set (0.00 sec)

mysql> select  * from db10.t5;
+------+
| name |
+------+
| bbb  |
+------+
1 row in set (0.00 sec)

mysql>exit

[root@host50 ~]# systemctl  restart mysqld
[root@host50 ~]# mysql -uroot -p123qqq...A -e 'select  * from  db10.t3'
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@host50 ~]# mysql -uroot -p123qqq...A -e 'desc  db10.t3'
mysql: [Warning] Using a password on the command line interface can be insecure.
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| name  | char(10) | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
[root@host50 ~]# 
[root@host50 ~]# mysql -uroot -p123qqq...A -e 'select  * from  db10.t4'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| name |
+------+
| bbb  |
+------+
[root@host50 ~]# mysql -uroot -p123qqq...A -e 'select  * from  db10.t5'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| name |
+------+
| bbb  |
+------+
[root@host50 ~]#   
mysql> alter table db10.t3 engine=myisam;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0


mysql> 
mysql> system ls /var/lib/mysql/db10/t3.*
/var/lib/mysql/db10/t3.frm  /var/lib/mysql/db10/t3.MYD	/var/lib/mysql/db10/t3.MYI
mysql>  


	 	2.3 常用存储引擎介绍
			myisam存储引擎特点
				支持表级锁
				不支持事务、事务回滚、外键
				对应的表文件（3个表文件） 
					表名.frm 表结构 (desc 表名)
					表名.MYI 索引   (show index from 表名 ）
					表名.MYD	 数据   (select  * from 表名)	
		
			innodb存储引擎特点
				支持行级锁定
				支持事务、事务回滚、外键
				对应的表文件（2个表文件）
					表名.frm 表结构 (desc 表名)
					表名.ibd (索引+数据)

		   相关概念：
		    	事务？ 建立连接--->执行一系列的SQL命令--->断开连接

			       这个过程被称为事务。

			事务回滚？建立连接后，在执行一系列的SQL命令时，可以把错误的操作结果，恢复到出错之前的正确状态。

			事务日志文件：记录对innodb存储引擎的表执行的sql操作
			cd /var/lib/mysql/
			ib_logfile0   ib_logfile1  ibdata1

			表级锁(myisam)：对表做查询数据（select）或写入数据(insert update delete )时，无论访问的是表的一行还多行，都把整张表锁上，锁上后就不允许其他客户端访问了。当前访问完成后会自动释放锁，其他客户端才可以访问。
如 select  * from t1 where id =1  ;
   update  t1 set age=19 where  id <=10 ;

 

			行级锁(innodb)对表做查询数据（select）或写入数据(insert update delete )时，仅仅对被访问的行分别加锁。没有被访问不加锁，其他客户端可以同时访问没有被加锁的行

如 select  * from t1 where id =1  ;  仅对第1行加锁
   update  t1 set age=19 where  id <=10 ;  仅对前10行分别加锁


			加锁的目的：解决并发访问的冲突文件
pc1  update  t1  set name ="bob" where id=1;
pc2  update  t1  set name ="tom" where id=2;  

			锁类型：
				读锁（select）共享锁（加了读锁，如果再有客户端访问执行的是select 可以同时查 如果是写访问会被拒绝）

				写锁 (insert update delete)  排它锁，（加了写锁后，再有客户端访问无论是查和写都会被禁止，只有释放写锁后才允许访问）

			事务的特点？ ACID
			原子性 隔离性 一致性 持久性
				
			事务特点演示：明天演示。

		2.4 工作中，建表时，如何决定表使用哪个存储引擎
查询（select）访问多的表，适合使用myisam存储引擎，可以节省系统硬件资源
写(insert update delete)访问多的表，适合使用innodb存储引擎，好处处理的并发访问量大。


#########################################事务特点演示

			涉及到的命令： 
				查看数据库服务是否开启了自动提交功能 默认是开启的
                                show variables like "autocommit";


				关闭自动提交功能
				set autocommit=off;

				手动提交  commit;
				回滚 rollback;

连接1 
	mysql> create  table db10.user(id int)engine=innodb;
        mysql> show variables like "autocommit";
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| autocommit    | OFF   |
+---------------+-------+
1 row in set (0.00 sec)

mysql> insert into db10.user values(888);
mysql> insert into db10.user values(888);
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db10.user;
+------+
| id   |
+------+
|  888 |
+------+
1 row in set (0.00 sec)

mysql> 


连接2 查看数据 看不数据
        mysql> select  * from db10.user;
Empty set (0.00 sec)


连接1  执行提交命令	
	mysql> commit 	


连接2 查看数据 可以看到数据
			
mysql> select  * from db10.user;
+------+
| id   |
+------+
|  888 |
+------+
1 row in set (0.00 sec)

mysql>


连接1 

	insert db10.user values(666);
	update db10.user set id =777 where id = 888;
	delete from db10.user;
	select  * from db10.user;

连接2 查数据，数据依然存在 select  * from db10.user;
mysql> select  * from db10.user;
+------+
| id   |
+------+
|  888 |
+------+

连接1 没有提交，可以执行回滚
      rollback;
      select  * from db10.user; 查看操作前的数据了 。
mysql> select  * from db10.user;
+------+
| id   |
+------+
|  888 |
+------+

       delete from db10.user;
       commit;  此时永久生效

连接2 
       select  * from db10.user; 查不到数据


连接1 rollback ;  回滚数据失败，因为已经提交



 

