###########DBA1_DAY02#################
一、 修改表结构
		2.1  字段（表头）约束条件，作用限制如何给表头赋值
			  查看表头的约束条件  desc  库.表； (后4列统称为约束条件)
			  desc mysql.user;
			  desc mysql.db;
			  desc db1.t1;
			  
		 Null  是否允许为空 默认允许  使用 not null 指定不允许
		 
		 Key  MySQL键值 （标签）每种都有各自的功能和约束条件 
		 
		 Default  定义表头的默认值，向表里添加新行时，如果不给表头赋值
                  使用默认值赋值。MySQL默认设置的默认值都是NULL
				  定义默认值 default  值   （值要与表头的类型匹配）
		 
		 Extra   额外设置 指的是 表头的值可以自增长  i++  
		 
例子
create table db1.t11(
name char(4) not  null ,
sex  enum("boy","girl") not null default  "boy", 
age  int   
);
desc  db1.t11;

insert into db1.t11(name,age) values ("jim",21);  sex表头使用默认值赋值
insert into db1.t11 values ("tom","girl",18); 不使用默认值赋值，自己给值
select  * from  db1.t11;
 
mysql> insert into db1.t11 values (null , null , null);
ERROR 1048 (23000): Column 'name' cannot be null
mysql> 
mysql> insert into db1.t11 values ("null" , null , null);
ERROR 1048 (23000): Column 'sex' cannot be null
mysql> 
mysql> insert into db1.t11 values ("null" , "boy" , null);
Query OK, 1 row affected (0.03 sec)

mysql> select  * from db1.t11

mysql> insert into db1.t11 values ("" , "boy" , 23);
Query OK, 1 row affected (0.03 sec)

mysql> insert into db1.t11 values (" " , "boy" , 29);
Query OK, 1 row affected (0.03 sec)

create table db1.t12(
name char(4) not  null  default "",   把默认值设置为0个字符
sex  enum("boy","girl") not null default  "boy", 
age  int   
);

		2.2  修改表结构 ：表结构指的使用  desc 库.表； 看到的信息
		
				 命令格式： alter  table   库.表  执行操作；
				 
				 对应的操作：
					添加表头 add  表头  类型  [约束条件];

alter table db1.t12  add  tel char(11) not null default "119";	
alter table db1.t12 add class char(7) default "nsd2012"  first ;	
alter table db1.t12 add mail varchar(15) after name;

select  * from db1.t12;
desc  db1.t12;		
					删除表头 drop  表头；
mysql> alter table db1.t6 drop pay;
select  * from  db1.t6;
					
mysql> alter table db1.t12 drop name , drop sex ;
select  * from  db1.t12;
					
					修改表头类型及约束条件 modify
						*修改的新类型和约束条件不能与已经存储的数据矛盾
						* 不 修改的要原样写上，不写就还原了 
select  * from db1.t12;
delete from  db1.t12;
alalter table db1.t12 modify mail varchar(15) not null default  "stu@tedu.cn";
alter table db1.t12 modify mail char(10) not null default  "stu@tedu.cn";				
						
					修改表头名 change  源表头名  新表头名 类型及约束条件； 
						
						类型及约束条件原样不变，是只改表头名，反之就是
						即改类型又改约束条件
mysql> desc db1.t12;
mysql> alter  table  db1.t12 
change email  xxx varchar(50) not null  default  "stu@163.com";
		
	
											
					修改表名 rename 

mysql> alter table db1.t10 rename db1.teacher;
>use db1;
>show  tables;
									 
			
	 休息到 16:05 
	 
二、 MySQL键值 （标签）每种都有各自的功能和约束条件
          种类： 普通索引index   全文索引fulltext  主键 primary key  
                 唯一索引unique  外键 foreign key 

3.1  普通索引  index
		 3.1.1 普通索引  类似于书的目录  
		                 给表头下存储的数据生成排队信息。目的是加快查询数据的
					     速度（优点）。
						 
				索引的缺点：1 索引会占用物理存储空间   
				            2 降低写数据的速度(update insert delete) 
			
    新华字典  5000页
	    1 ~ 300页
		目录 （给汉字生成排序信息） 汉字的解释改变  2 
		      拼音排序
		      部首排序
			  笔画排序   
		 
		 3.1.2  使用规则 （背诵）
		 3.1.3 使用索引
					1 创建索引
						  1.1 在已有表里添加索引
						      create index 名 on 库.表(列名);
							  
						      create index  yyy  on  db1.t1(sex);
							  create index  zzz  on  db1.t1(loves);
							  
						  1.2 创建表时设置索引
						  
					2 查看索引
						  2.1 查看是否有索引  desc  库.表 
						  
						  2.2 查看索引的详细信息show index from 库.表  \G
						      
							  show index from db1.t1 \G
							   Table: t1 表名
                               Column_name: sex	 表头名		 			   
                               Null: YES 允许空
							   Index_type: BTREE  算法
							   Key_name: zzz 索引名
						
                    支持3种算法 Btree（默认） B+tree 、hash	
							    二叉树
			        3 删除索引
					  drop index  名 on 库.表;
					  mysql> drop index zzz on db1.t1;
						     show index from db1.t1 \G

 explain  select命令；  explain命令验证索引的效果 
	
	3.2  主键      primary key  核心功能 不允许给表头存储重复的值和NULL值
				   各种证件信息 都不能重复的值和NULL值
	               （身份证号  考试编号    学历证书编号）
		 
		 主键的使用规则（背诵）
		 
		1  1个表头做主键
			   建表时创建主键
			   create table 库.表（字段名列表 ， primary key(字段名) ）；
create table db1.t16( name  char(10) , age int , stu_num  int , 
primary key(stu_num) );			   
			   
mysql> insert into db1.t16 values("x",19,null);
ERROR 1048 (23000): Column 'stu_num' cannot be null

mysql> insert into db1.t16 values("y",21,7);


mysql> insert into db1.t16 values("y",21,7);
ERROR 1062 (23000): Duplicate entry '7' for key 'PRIMARY'

mysql> insert into db1.t16 values("y",21,5);
		
			删除主键
			alter table  库.表 drop  primary key ;
mysql> alter table db1.t16 drop primary key;
mysql> desc db1.t16 ;
mysql> insert into db1.t16 values("y",21,7);

mysql> insert into db1.t16 values("y",21,null);
ERROR 1048 (23000): Column 'stu_num' cannot be null

2 复合主键（多个表头一起做主键）复合主键的值不同时相同即可
		    PRI        PRI
		客户端地址   服务端口号   访问状态
		  cip         port        status
		  1.1.1.1     22           deny 
		  1.1.1.1     80           allow
		  2.1.1.1     80           deny
create table db1.t17(
cip char(15) , port smallint , status enum("deny","allow"),
primary key(cip,port)  );
 
desc  db1.t17;
insert into db1.t17 values ("1.1.1.1",22,"deny");
insert into db1.t17 values ("1.1.1.1",80,"allow");
insert into db1.t17 values ("2.1.1.1",80,"deny");
select  * from db1.t17;
insert into db1.t17 values ("2.1.1.1",80,"allow"); 报错
		
            在已有表添加主键（被设置为主键表头下的数据
			不能违反主键的使用规则）		
			命令 ： alter  table  库.表 add  primary key(表头名);
			
			delete  from db1.t16;
			select  * from db1.t16;
			desc  db1.t16;
			alter table  db1.t16 add primary key (stu_num);
			desc  db1.t16;
			
		
		3  主键与auto_increment 连用
	             让表头通过自加1的计算结果赋值
   id 	name  age  sex  class
   1	bob    19   boy  nsd2012
   2	bob    19   boy  nsd2012
   3	bob    19   boy  nsd2012
   4    bob    19   boy  nsd2012

select  * from  student where 行号>=2 ；

create  table db1.t18(
id  int primary key  auto_increment , 
name char(10)  , age tinyint unsigned ,sex enum("m","w") ,
class char(7) );

desc  db1.t18;

insert into db1.t18(name,age,sex,class)values("tom",19,"m","nsd2012");
insert into db1.t18(name,age,sex,class)values("tom",19,"m","nsd2012");
insert into db1.t18(name,age,sex,class)values("tom",19,"m","nsd2012");

 select  * from db1.t18;
 select  * from db1.t18 where  id = 1 ; 
 select  * from db1.t18 where  id = 2 ;
  
 insert into db1.t18 values(11,"tom",19,"m","nsd2012");

select  * from db1.t18;
insert into db1.t18(name,age,sex,class)values("jonh",19,"m","nsd2012");

select  * from db1.t18;
