	总结 配置MHA集群 必须做的配置：
		 客户端连接数据库服务必须连接vip地址
		 数据库服务器之间必须是一主多从结构
		 必须配置ssh免密登录
		 故障主机必须人为恢复，人为同步宕机期间的数据
	
	注意：
		 要手动启动管理服务才能监视新的master服务器
		 当集群中没有slave 角色的数据库服务器时，管理服务无法启动
		 
RDBMS2_DAY05
一 配置PXC集群 （使用pxc软件配置mysql 高可用集群）
	1.1 PXC介绍 （见ppt）
	1.2 准备做pxc集群的3台新虚拟机 
	    配置IP  71/72/73
		配置yum   关闭 selinux   firewalld
		
		PXC软件包下载
链接：https://pan.baidu.com/s/1vIbXTF1pvea0kmyuyU_5vQ 
提取码：2012 
		
	1.3  3台服务器分别安装PXC 软件
]# cd pxc
]# rpm -ivh libev-4.15-1.el6.rf.x86_64.rpm    	//安装依赖
]# yum  -y  install  percona-xtrabackup-24-2.4.13-1.el7.x86_64.rpm
]# rpm -ivh qpress-1.1-14.11.x86_64.rpm    		 //安装依赖
]# tar -xvf  Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar
]# yum -y  install  Percona-XtraDB-Cluster-*.rpm
	
    1.4  修改配置文件（3台数据库服务器都要修改）
		 ]# ls /etc/percona-xtradb-cluster.conf.d/  安装列表
         mysqld.cnf（MySQL服务配置文件）  
		 mysqld_safe.cnf（无需修改）  
		 wsrep.cnf（集群 配置文件）
 
host71]# vim  mysqld.cnf
		 [mysqld]
		 server_id=71
		 :wq
host71]# ls /var/lib/mysql/	 没有数据

host72]# vim  mysqld.cnf
		 [mysqld]
		 server_id=73
		 :wq		 
host72]# ls /var/lib/mysql/	 没有数据
		 
host73]# vim  mysqld.cnf
		 [mysqld]
		 server_id=73
		 :wq		
host73]# ls /var/lib/mysql/	 没有数据	


host71]# vim  wsrep.cnf
#集群成员列表 3台机器必须一致
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73

#集群名称3台机器 必须一致
wsrep_cluster_name=pxc-cluster

#全量同步服务连接服务用户3台机器 必须一致
wsrep_sst_auth="sstuser:123qqq...A"

#本机IP地址
wsrep_node_address=192.168.4.71

#本机主机名
wsrep_node_name=pxc-cluster-node-71


host72]# vim  wsrep.cnf
#集群成员列表 3台机器必须一致
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73

#集群名称3台机器 必须一致
wsrep_cluster_name=pxc-cluster

#全量同步服务连接服务用户3台机器 必须一致
wsrep_sst_auth="sstuser:123qqq...A"

#本机IP地址
wsrep_node_address=192.168.4.72

#本机主机名
wsrep_node_name=pxc-cluster-node-72



host73]# vim  wsrep.cnf

#集群成员列表 3台机器必须一致
wsrep_cluster_address=gcomm://192.168.4.71,192.168.4.72,192.168.4.73

#集群名称3台机器 必须一致
wsrep_cluster_name=pxc-cluster

#全量同步服务连接服务用户3台机器 必须一致
wsrep_sst_auth="sstuser:123qqq...A"

#本机IP地址
wsrep_node_address=192.168.4.73

#本机主机名
wsrep_node_name=pxc-cluster-node-73


1.5数据库服务初始化（在任何1台数据库服务器都可以执行，但只需要执行一次）
		   统一在71主机执行初始化操作
[root@node71 ~]# systemctl  start mysql@bootstrap.service
[root@node71 ~]# ls /var/lib/mysql
auto.cnf         ibdata1            node71-bin.000002
ca-key.pem       ib_logfile0        node71-bin.index
ca.pem           ib_logfile1        performance_schema
client-cert.pem  ibtmp1             private_key.pem
client-key.pem   mysql              public_key.pem
galera.cache     mysqld_safe.pid    server-cert.pem
grastate.dat     mysql.sock         server-key.pem
gvwstate.dat     mysql.sock.lock    sys
ib_buffer_pool   node71-bin.000001  xb_doublewrite
[root@node71 ~]# 
[root@node71 ~]# netstat  -utnlp  | grep 3306
tcp6       0      0 :::3306                 :::*                    LISTEN      5944/mysqld         
[root@node71 ~]# 
[root@node71 ~]# netstat  -utnlp  | grep 4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      5944/mysqld         
[root@node71 ~]# 	

[root@node71 ~]# grep password /var/log/mysqld.log  查看日志找随机密码
2021-04-27T01:16:45.433065Z 1 [Note] A temporary password is generated for root@localhost: Ukrgyq2-V.,q
[root@node71 ~]# 	

[root@node71 ~]# mysql -uroot -p'Ukrgyq2-V.,q' 使用随机密码登录
mysql> show databases;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
mysql> 
mysql> alter user root@"localhost" identified by "123456"; 强制修改密码，没有策略要求
Query OK, 0 rows affected (0.10 sec)

mysql> show databases; 查看数据 
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> grant  all on  *.*  to  sstuser@"localhost" identified by "123qqq...A"; 
添加配置文件中定义的sstuser 用户
mysql>exit
]# mysql  -uroot  -p123456 #使用修改的密码登录
mysql>create database game;
mysql>show databases;

	在71 执行初始化失败的统一
     1 pkill -9 mysqld (多执行几遍)
	 2 rm  -rf  /var/lib/mysql/*
	 3 检查修改的 mysqld.cnf   和  wsrep.cnf  文件
     4 再次执行初始化数据库服务的操作
	 

		
	1.6 分别启动 72 he  73 主机的mysql服务（2台主机服务启动顺序无所谓）
								服务名称没有d 就叫 mysql
								
	72 73 同步数据失败
      1 pkill -9 mysqld (多执行几遍)
	  2 rm  -rf  /var/lib/mysql/*	
	  3 再次执行 systemctl  start mysql
	  
	***确保71/72/73  三台主机的firewalld  selinux 都是关闭
	第1次启动数据库服务会自动到集群中的其他主做首次的全量同步数据
[root@node72 ~]# ls /var/lib/mysql
[root@node72 ~]# systemctl  start mysql
[root@node72 ~]# ls /var/lib/mysql
auto.cnf                mysql
ca-key.pem              mysql.sock
ca.pem                  mysql.sock.lock
client-cert.pem         node72-bin.000001
client-key.pem          node72-bin.index
galera.cache            performance_schema
game                    private_key.pem
grastate.dat            public_key.pem
gvwstate.dat            server-cert.pem
ib_buffer_pool          server-key.pem
ibdata1                 sys
ib_logfile0             xb_doublewrite
ib_logfile1             xtrabackup_binlog_pos_innodb
ibtmp1                  xtrabackup_galera_info
innobackup.move.log     xtrabackup_info
innobackup.prepare.log  xtrabackup_master_key_id
[root@node72 ~]#  
[root@node72 ~]# netstat -utnlp  | grep  3306
tcp6       0      0 :::3306                 :::*                    LISTEN      2083/mysqld         
[root@node72 ~]# netstat -utnlp  | grep  4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      2083/mysqld         
[root@node72 ~]# 	
[root@node72 ~]# mysql -uroot -p123456 -e 'show databases'
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
| Database           |
+--------------------+
| information_schema |
| game               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
[root@node72 ~]# mysql -uroot -p123456 -e 'create database bbsdb'
[root@node71 ~]# mysql -uroot -p123456 -e 'show databases'
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| game               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
[root@node71 ~]# 

[root@node73 ~]# ls /var/lib/mysql
[root@node73 ~]# systemctl  start mysql
[root@node73 ~]# ls /var/lib/mysql
auto.cnf                mysql
bbsdb                   mysql.sock
ca-key.pem              mysql.sock.lock
ca.pem                  node73-bin.000001
client-cert.pem         node73-bin.index
client-key.pem          performance_schema
galera.cache            private_key.pem
game                    public_key.pem
grastate.dat            server-cert.pem
gvwstate.dat            server-key.pem
ib_buffer_pool          sys
ibdata1                 xb_doublewrite
ib_logfile0             xtrabackup_binlog_pos_innodb
ib_logfile1             xtrabackup_galera_info
ibtmp1                  xtrabackup_info
innobackup.move.log     xtrabackup_master_key_id
innobackup.prepare.log
[root@node73 ~]# 
[root@node73 ~]# netstat  -utnlp  | grep 3306
tcp6       0      0 :::3306                 :::*                    LISTEN      2086/mysqld         
[root@node73 ~]# netstat  -utnlp  | grep 4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      2086/mysqld         
[root@node73 ~]#
[root@node73 ~]# mysql -uroot -p123456  -e 'show databases'
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| game               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
[root@node73 ~]# 
[root@node73 ~]# mysql -uroot -p123456  -e 'create database buydb'

[root@node71 ~]# mysql -uroot -p123456 -e 'show databases'
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| buydb              |
| game               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
[root@node71 ~]# 
[root@node72 ~]# mysql -uroot -p123456 -e 'show databases'
mysql: [Warning] Using a password on the command line interface can be insecure.
+--------------------+
| Database           |
+--------------------+
| information_schema |
| bbsdb              |
| buydb              |
| game               |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
[root@node72 ~]# 	

在集群中的任意1台上都可以查看集群的状态信息
[root@node73 ~]# mysql -uroot -p123456  -e 'show status like "%wsrep%"'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----------------------------------+-------------------------------------------------------+
|Variable_name                    | Value                                                 |
|wsrep_incoming_addresses          | 192.168.4.71:3306,192.168.4.72:3306,192.168.4.73:3306 |	
|wsrep_cluster_status               | Primary                                               |
| wsrep_connected                  | ON       

客户端连接集群中的任意1台服务器都可以读写数据，并且会互相同步彼此的数据
[root@node73 ~]# mysql -uroot -p123456  
-e 'grant all on game.* to yaya@"%" identified by "123qqq...A"'

[root@host50 ~]# mysql -h192.168.4.71 -uyaya -p123qqq...A
mysql> create table  game.user( id int primary key auto_increment,name char(10));
mysql> exit;

[root@host50 ~]# mysql -h192.168.4.72 -uyaya -p123qqq...A -e 'insert into game.user(name)values("a"),("b")'
mysql: [Warning] Using a password on the command line interface can be insecure.

[root@host50 ~]# mysql -h192.168.4.73 -uyaya -p123qqq...A -e 'select * from game.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+------+
| id | name |
+----+------+
|  2 | a    |
|  5 | b    |
+----+------+
[root@host50 ~]#

测试任何1台坏掉都不影响另外2台 ，坏掉的集群会自动加入集群，并自动同步宕机期间的数据
[root@node71 ~]# systemctl  stop mysql@bootstrap.service

[root@node73 ~]# mysql -uroot -p123456  -e 'show status like "%wsrep%"'
wsrep_incoming_addresses         | 192.168.4.72:3306,192.168.4.73:3306  |

[root@host50 ~]# mysql -h192.168.4.72 -uyaya -p123qqq...A -e 'insert into game.user(name)values("aaa"),("bbbb")'

[root@host50 ~]# mysql -h192.168.4.72 -uyaya -p123qqq...A -e 'insert into game.user(name)values("cccc"),("ccc")'


[root@node71 ~]# systemctl  start mysql
[root@node71 ~]# systemctl  start mysql
[root@node71 ~]# netstat  -utnlp  | grep 4567
tcp        0      0 0.0.0.0:4567            0.0.0.0:*               LISTEN      7514/mysqld         
[root@node71 ~]# netstat  -utnlp  | grep 3306
tcp6       0      0 :::3306                 :::*                    LISTEN      7514/mysqld         
[root@node71 ~]# 
[root@node71 ~]# mysql -uroot -p123456 -e 'select  * from game.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+------+
| id | name |
+----+------+
|  2 | a    |
|  5 | b    |
|  9 | aaa  |
| 11 | bbbb |
| 13 | cccc |
| 15 | ccc  |
+----+------+
[root@node71 ~]#



	存储结构回顾：
		1 数据自动备份  mysql 主从同步
		2 数据读写分离  maxscale+mysql 主从同步
	    3 数据分库分表  MyCAT 
		4 高可用集群    MHA / PXC
		
二 mysql 存储引擎  (在192.168.4.50)
   理论>操作 着重在于理解
   2.1 存储引擎介绍: mysql 存储数据的功能分类。
					 功能组件之一 ，
					 是服务自带的功能程序，安装软件后自动就有
					 每种存储引擎有各自的功能和数据存储方式
					 
   mysql服务功能组件？
   连接池
   管理工具
   sql接口
   分析器
   优化器
   查询缓存
   存储引擎
   文件系统

查已有的表使用的存储引擎？
mysql> show create table mysql.db \G
) ENGINE=MyISAM  

数据库服务支持的存储引擎有那些？
show engines;

建表默认使用的存储引擎？
InnoDB             | DEFAULT 

定义数据库服务默认调用的存储引擎
]# vim /etc/my.cnf
[mysqld]
default-storage-engine="myisam"
：wq

]# systemctl restart mysqld
[root@host50 ~]# mysql -uroot -p789...qqqA -e 'show engines'
| MyISAM             | DEFAULT 


#不指定存储引擎，使用默认定义的
mysql> create table db4.t9(name char(10));
mysql> show create table db4.t9 \G
*************************** 1. row ***************************
       Table: t9
Create Table: CREATE TABLE `t9` (
  `name` char(10) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1

#指定表使用的存储引擎
mysql> create table db4.t8( name char(5) )engine=innodb;
mysql> create table db4.t7( name char(5) )engine=memory;
#存储引擎不用数据存储也不一样
[root@host50 ~]# ls /var/lib/mysql/db4/t9*
/var/lib/mysql/db4/t9.frm  /var/lib/mysql/db4/t9.MYI
/var/lib/mysql/db4/t9.MYD
[root@host50 ~]# 
[root@host50 ~]# ls /var/lib/mysql/db4/t8*
/var/lib/mysql/db4/t8.frm  /var/lib/mysql/db4/t8.ibd
[root@host50 ~]# 
[root@host50 ~]# ls /var/lib/mysql/db4/t7*
/var/lib/mysql/db4/t7.frm
[root@host50 ~]#

	常用存储引擎特点介绍
		myisam存储引擎特点：
			每张有3个文件：
			      表名.frm  desc 表名; 
				 
				  表名.MYI  存放index信息 
				  
				  表名.MYD  select * from 表名
			 
			 支持表级锁：无论访问的是表里1行还是多行都会把1张表锁上
			 
			 不支持事务、事务回滚、外键foreigin key
			 
		innodb存储引擎特点：
			每张有3个文件： 
			     表名.frm  desc 表名; 
				 表名.ibd  index+select
				 
			支持行级锁：仅仅对被访问的行分别加锁 
			
			支持事务、事务回滚、外键foreigin key

		锁：解决并发访问数据库写操作的冲突问题
		
		14：11
		client1   ----> 50  update  db3.user set name="bob" id=1;
							
		client2   ----> 50  update  db3.user set name="tom" id=1;

		加上锁后，锁没有释放期间不允许对表做访问。当前访问完成后，会
		自动释放锁。其他客户端的访问才被允许。
		
		
		锁类型：根据访问数据的操作类型加锁
		        操作类型：查询数据select  存储数据insert update  delete
		
		读锁(共享锁) 对表做查询访问时，给表的加的是读锁
			 select * from  db4.user where id <= 5 ; 
		     select * from  db4.user where id >= 3  ;
			 
		**加了读锁的表，只处理再来的访问里的查询访问。
		
		
		写锁（排它锁或互斥锁） 对表做写访问时，给表的加的是写锁
		     update  db4.user set  age=19 where id <=3；
		**加了写锁的表， 在写锁没有释放之前，不允许做任何访问
		
		****表使用的存储引擎决定了表加锁的范围。
		
		事务：连接服务器后         到断开连接之前，执行操作称为事务
		
		事务回滚 : 在事务没有完成的情况下可以回滚操作。
		
		innodb存储引擎的表有事务日志文件记录操作。所有可以做事务回滚。
		
		事务日志文件是首次启动mysqld的时候就自动创建的。ib_logfile0
														ib_logfile1
		
		事务特性：ACID

连接1  :
mysql -uroot -p密码
mysql> create table db4.t31(id int)engine=innodb;
mysql> set autocommit=0;
mysql> show variables like "autocommit"; 

连接2  :   
mysql -uroot -p密码
mysql> show variables like "autocommit"; 		
	
连接1  :	
insert into db4.t30 values(666);
insert into db4.t30 values(677);
select  * from db4.t30; 自己可以看到


连接2  : 	
select  * from db4.t30;		看不到

连接1  :
commit; 提交

连接2  : 	
select  * from db4.t30;		可以看到了


连接1  :
delete  from  db4.30 where id=666;
select  * from db4.t30;	  666的记录没有了 

连接2  : 	
select  * from db4.t30;		依然可以看到666记录

连接1  :
commit; 提交完成

连接2  : 	
select  * from db4.t30;		也看不到666记录了

连接1  :
mysql> delete from db4.t30;
mysql> insert into db4.t30 values(999);
mysql> update db4.t30 set id=0;
mysql> select  * from db4.t30;

连接2  : 	
select  * from db4.t30;	 没有影响，依然是原先的数据

连接1  :
rollback;  回滚 还原了所有的操作
select  * from db4.t30; 数据还原到 删除之前的状态



     思考：建表是如何决定表使用那种存储引擎。
	 select 查询访问多的表，适合使用myisam存储引擎?节省硬件资源
	 
	 insert/update/delete写访问多的表，适合使用innodb存储引擎? 并发访问量大


+++++++++++++++++++++++++++++++++++++++++
nosql_day01  

复习LNMP 并在主机51上部署LNMP环境
         访问可以显示 hello world
         http://192.168.4.51/test.php  
		   hello world 
++++++++++++++++++++++++++++++++++++++++++
第5阶段课程下载网址
所有 在家使用 windows 环境的学员环境准备文档
在学校使用 Linux 教学环境的学员无需准备	
链接：https://pan.baidu.com/s/1vIbXTF1pvea0kmyuyU_5vQ 
提取码：2012 	