###DBA1_DAY03
一、数据导入导出
	1.1 数据导入导出检索目录：（导入导出时存放数据的文件 保存的目录）
	    查看默认检索目录的位置
	mysql> show variables like  "secure_file_priv";
	[root@host50 ~]# ls -ld /var/lib/mysql-files/
drwxr-x--- 2 mysql mysql 6 11\u6708 29 2016 /var/lib/mysql-files/
         
	    修改检索目录的位置
[root@host50 ~]# systemctl  stop mysqld
[root@host50 ~]# vim /etc/my.cnf
[mysqld]
secure_file_priv="/myload"
:wq
	
]# mkdir /myload
]# chown mysql  /myload
]# setenforce  0

[root@host50 ~]# systemctl  start mysqld
[root@host50 ~]# mysql -uroot -p123qqq...A  -e 'show variables like "secure_file_priv"'	


1.2 数据导入： 把系统文件的内容存储到数据库的表里
	               具体操作
						1 创建存储数据库的库和表（要根据存储的数据创建表结构）
						2 把系统文件拷贝到检索目录下
						3 执行导入数据的命令
load  data  infile   "/目录名/文件名" into   table  库名.表名
fields terminated   by   "分隔符" lines  terminated  by   "\n";
 
						4 查看数据并做优化配置
					导入数据的注意事项（背诵）
					
	

例子 ：在db3库下 创建user表（自己设计表结构）存储 /etc/passwd文件里的用户信息。
mysql> create database db3; 
mysql> use db3;
mysql> show tables;
mysql> create table db3.user(
name char(50) , password char(1) , uid int , gid int,
comment  varchar(200) , homedir char(60) , shell char(50),
index(name) , primary key(uid)
);
mysql> desc db3.user;


]# cp  /etc/passwd   /myload/
]#  ls  /myload/passwd
 

mysql> system  wc -l  /myload/passwd

mysql> #执行导入数据的命令
mysql> load data infile "/myload/passwd" into table
       db3.user fields terminated by ":"  lines terminated by "\n" ;

       # 查看数据 
mysql> select  * from db3.user;

       优化配置(添加行号便于查找数据)
       alter table db3.user drop  primary key ;
	   
	   alter table  db3.user add   id  int auto_increment first, 
       add primary key(id,uid);
	   
	   desc  db3.user;
	   select  * from  db3.user;

补充: auto_increment 与primary key  关系 
      
	  auto_increment 依赖 主键  配置auto_increment 必须同时配置主键
	  
	  auto_increment设置存在时，不能删除主键，
	  
	  要先去掉auto_increment  主键才能删除。
 
		1.3 数据导出 : 把表记录存储到系统文件里
			命令格式 
			select查询命令  into   outfile  "/检索目录/文件名" 
			[ fields  terminated by "表头值的间隔符号"  
			lines terminated by "记录的间隔符号" ];
 
           导出数据的注意事项（背诵）
	        导出数据例子 ：			
mysql> select * from db3.user where id <= 2 
       into outfile  "/myload/a.txt"
 
mysql> select name , uid , shell from db3.user where id <= 2
    into outfile "/myload/b.txt" fields terminated by ":";

mysql> select name , uid , shell from db3.user where id <= 2 
    into outfile "/myload/c.txt" fields terminated by ":" 
	lines terminated by "!!!!";

mysql> system ls   /myload/*.txt		
mysql> system vim  /myload/a.txt

二、表记录的基本管理（记录就是表里的行）
     （增）添加新行 insert into (新行都追加在末尾)
		   
		  添加1条记录给所有列赋值
		   insert into  库.表   values (值列表);

insert into db3.user values 
(30,"bob","x",2000,2000,"test user","/home/bob","/bin/bash");


		  添加多条记录给所有列赋值
		  insert into  库.表   values (值列表),(值列表),(值列表)....;
insert into db3.user values
(40,"bob2","x",3000,2000,"test user","/home/bob","/bin/bash"),
(50,"bob3","x",3001,2000,"test user","/home/bob","/bin/bash");		  

          添加1条记录只给指定的列赋值
		  insert into  库.表(列名列表)   values (值列表);
insert  into  db3.user(name,uid,shell) values("tom",2001,"/sbin/nologin");
		   
insert  into  db3.user(name,password,uid,gid,comment,homedir,shell) 
values("a","x",4000,4000,"test","/a","xxx");

	 删除已有行 delete from  (以行为单位删除)
	 命令格式  delete from 库.表  where 条件； 只删除与条件匹配的行
	           delete from 库.表；删除表里所有行
	 
	 delete from db3.user  where id > 21 ;
	 	 
	 修改字段值（修改行里表头的值） update
	 update 库.表 set  表头名=值，表头名=值，表头名=值 where 条件； 
	 只修改与条件匹配行里表头的值
	 
	 update 库.表 set  表头名=值，表头名=值，表头名=值 ；批量修改
	 
	 update db3.user  set password="y" ;
	 mysql> select id , password from db3.user;

update db3.user  set password="x"  where id = 1 ;
	 
	 查询表的数据 (查看表的内容) select 
     select 表头名列表 from 库.表 where 条件；
	 select * from 库.表；查看整张表的内容
	 
	 select  name,uid from db3.user; 
     select  name,uid from db3.user where id <= 2 ;


四、MySQL图形管理工具的使用之phpmyadmin
     在数据库服务器安装图形软件，让用户访问图形软件，通过图形软件
	 对数据库服务器做管理和使用。
	 
	 诉求： 在数据库服务器50主机安装图形软件phpmyadmin 提供图形界面
让用户访问 管理数据库服务器。
			配置步骤如下：
				1 准备软件的运行环境：lamp或LNMP
  ]# yum  -y install httpd  php  php-mysql
  ]#  systemctl start httpd
  ]#  ss -utnlp  | grep  80
  
				2 安装图形软件phpmyadmin
  ]#  tar -zxvf phpMyAdmin-2.11.11-all-languages.tar.gz 
  ]#  mv phpMyAdmin-2.11.11-all-languages /var/www/html/
  ]#  cd /var/www/html/
  ]#  mv phpMyAdmin-2.11.11-all-languages/ admin
  ]#  ls /var/www/html/admin/index.php 			

				3 修改软件的主配置文件，定义连接的数据库服务器
					  #创建主配置文件
]# cd /var/www/html/admin/
]# cp config.sample.inc.php   config.inc.php 
 
					  
					   #在配置文件里指定管理的数据库服务器
					  ]# vim config.inc.php
	17 $cfg['blowfish_secret'] = 'plj123';				  
	31 $cfg['Servers'][$i]['host'] = 'localhost';
	                  :wq
					  
				4 客户端打开浏览器 ,在地址栏里输入访问网址
				   http://192.168.4.50/admin
				   输入连接的用户  root
				   输入连接密码  123qqq...A
				   
	            5 对数据做管理

###################################################
#######DBA1_DAY03#######
匹配条件 db3.user 做练习
		基本匹配条件 （适合 select  update  delete 的条件 ）
			数值比较  符号2边都得是数值
			        比较符号  >  >=  < <= = !=
					
			select  * from  db3.user where uid = 10;
			select  name,uid  from  db3.user where uid = 10;
			select  name,uid,gid  from  db3.user where uid = gid;
            select  name,uid,gid  from  db3.user where uid != gid;
			select  * from  db3.user where id <= 3;
			

			
			字符比较  符号2边都得是字符
					  比较符号  =   !=
			
select name from  db3.user where  shell="/sbin/nologin";
select name , shell from  db3.user where  shell="/sbin/nologin";
select name , shell from  db3.user where  shell!="/sbin/nologin";

select  name from db3.user where name="apache";
	

			范围内匹配
				   in 
				   not in 
				   between 数字1 and 数字2 
				   
select name from db3.user where  name in ("root","mysql","bin","apache");				   
select name,uid from db3.user where uid in (3,7,9,12);

select name from db3.user 
where shell not in ("/bin/bash","/sbin/nologin");

select name,shell from db3.user 
where shell not in ("/bin/bash","/sbin/nologin");

select * from  db3.user where id  between 1  and 10 ;

select name,uid from  db3.user where uid 	between 20  and 30 ;	
		   
			匹配空 is null
			非空   is not null
select id  from db3.user  where  uid is null ;			
select id  from db3.user  where  gid is null ;			
mysql> select id,uid,gid from db3.user;

select name , shell from db3.user where shell is not null ;

insert into db3.user(name,uid,id) 
values("",6001,51),("null",6002,53),(" ",6003,56),(null,6004,59);
mysql> select name,uid,id from db3.user where id>=51;
+------+------+----+
| name | uid  | id |
+------+------+----+
|      | 6001 | 51 |select name,uid,id from db3.user where name="";
| null | 6002 | 53 |select name,uid,id from db3.user where name="null";
|      | 6003 | 56 |select name,uid,id from db3.user where name="";
| NULL | 6004 | 59 |select name,uid,id from db3.user where name is null;  
+------+------+----+
思考 使用name 字段做查询条件 分别把每行单独查询出来
 
			
			
	    高级匹配条件
			模糊匹配  where 字段名  like  ‘表达式’ ;
				_ ：表示1个字符
                 %：表示0~n个字符
select name from  db3.user  where name like '_ _ _' ;
select name from  db3.user  where name like	'%a%';			                
select name from  db3.user  where name like	'a%';

select name from  db3.user  where name like '_%_' ;
select name from  db3.user  where name like '_ _ %_ _' ;

select id,name from  db3.user where name like '%';

alues("",6001,51),(" ",6003,56),(null,6004,59);

			正则匹配  where  字段名 regexp '正则表达式'
			        元字符 ^  $  .  |  []  
					* (匹配前边正则表达式出现的次数 0次或多次)
			
			insert into db3.user(name,uid)
			values("9yaya",6304),("yaya8",6305),("ya3ya",6302),("y5aya",6301);
			
			select  name  from  db3.user where  name regexp '[0-9]';
			select  name  from  db3.user where  name regexp '^[0-9]';                                   
			
			select  name  from  db3.user where  name regexp '[^0-9]';
			
			select  name  from  db3.user where  name regexp '^r|f$';
			
			select  name  from  db3.user where  name regexp '^r.*t$';
			
			select  name,uid from  db3.user where  uid regexp '...';
			
			select  name,uid from  db3.user where  uid regexp '^...$';
				
			数学计算  符号2边都得是数字
					  + - * / %    
					  () 提供执行的优先级
mysql> update db3.user set gid = gid + 1 where id <= 5;
mysql> update db3.user set gid = gid - 1 where id <= 5;					  
	
select  id  from  db3.user where  id % 2  = 0 ;
select  id  from  db3.user where  id % 2  != 0 ;	

select  name , uid , gid ,  uid+gid  zcj  , (uid+gid)/2 pjf  from 
db3.user  where name = "mysql" ;
       
alter table db3.user add age int  default 18 after name;
	
mysql> select name , age , 2021-age csnf from db3.user 
    -> where name = "root";	
	
		逻辑匹配（有多个判断条件）
		       and 或 &&   逻辑与   多个条件必须同时成立
	            or 或 ||   逻辑或   多个条件是某1个条件成立即可
                ！ 或 not  逻辑非   取反
 
性别 = 女   and  学历  = 本科  and  英语水平 >= 四级  and  颜值=高  (与)
性别 = 女   or  学历  = 本科  or  英语水平 >= 四级  or  颜值=高  （或）

select name from db3.user 
where   name="root" and uid=10 and  shell="/sbin/nologin";


mysql> select name from db3.user  
where   name="root" and uid=0 and  shell="/bin/bash";


select name,uid,shell from db3.user 
where   name="root" or uid=10 or  shell="/sbin/nologin";

select name , uid  from db3.user 
where name="root" or name="bin" and uid=1;


root 0
bin  1

select name , uid  from db3.user 
where (name="root" or name="bin") and uid=1;
bin  1

        操作查询结果 (对select命令查询出来的数据 ，再做处理)
			 聚集函数：MySQL服务自带的对数据做统计的命令
				sum(字段名 )
				avg(字段名 )
				max(字段名 )
				min(字段名 )
				count(字段名 )
select name from  db3.user where shell!="/bin/bash";
mysql> select count(name) from  db3.user where shell!				

mysql> select * from  db3.user ;
mysql> select count(*) from  db3.user ;		
select max(uid) zdz , min(uid) zxzhi , sum(uid) zonghe, avg(uid) pjf 
from db3.user;
	
			 排序  select 查询  order by 字段名 asc|desc 
select name , uid  from  db3.user where uid between 10 and 100;
			 
mysql> select name , uid  from  db3.user 
where uid between 10 and 100  order by  uid;

mysql> select name , uid  from  db3.user 
where uid between 10 and 100  order by  uid desc;


