####RDBMS2_DAY02
一、数据读写分离
	数据读写分离介绍？把客户端访问数据的查询请求select 和 写请求分别给
	不同的数据库服务器处理。
	        从数据库服务器的数据和主数据库服务器的数据是一样
	mysql -h主数据库服务器 192.168.4.51   30000并发
	MySQL> select  -----> 从数据库服务器   12000
	mysql> insert  -----> 主数据库服务器   18000
	
	
	如何实现数据的读写分离呢？
		1 通过程序实现
		   程序员在编写查询select 数据的脚本时固定连接slave服务器
	       程序员在编写 写insert update delete 数据的脚本时固定连接master服务器
	
	    2 搭建服务实现数据的读写分离
		     
		3 提供数据读写分离服务的软件（开源）	 
			mysql-proxy   MyCat  Maxscale
			
4 配置数据读写分离服务器
		
	      4.1 环境准备 (一主一从结构)
	          保证51(master)和52（slave）的一主一从结构能够正常同步数据
	
	      4.2 准备提供读写分离服务主机 57
              (把57 从主主结构摘出来。成为独立的数据库服务器)  
			  具体步骤如下：
			  1 安装软件
	[root@host57 ~]# yum -y install maxscale-2.1.2-1.rhel.7.x86_64.rpm 


              2 修改配置文件（根据环境修改配置）
			   vim /etc/maxscale.cnf
			   [maxscale]  服务启动后，开启线程的数据
               threads=auto

[server1]   定义第1台数据库服务器 
type=server
address=192.168.4.51
port=3306
protocol=MySQLBackend

[server2]  定义第2台数据库服务器
type=server
address=192.168.4.52
port=3306
protocol=MySQLBackend

[MySQL Monitor] 监视数据库服务器server1 server2 
type=monitor
module=mysqlmon
servers=server1,server2
user=mysqla  监控用户
passwd=123qqq...A 连接密码
monitor_interval=10000

#[Read-Only Service]  不提供只读服务（要提供的是读写分离服务）
#type=service
#router=readconnroute
#servers=server1
#user=myuser
#passwd=mypwd
#router_options=slave

[Read-Write Service]  定义读写分离服务
type=service
router=readwritesplit
servers=server1,server2  处理读写分离的服务器是server1  server2
user=mysqlb 路由用户
passwd=123qqq...A 密码
max_slave_connections=100%

[MaxAdmin Service]  管理服务 不用做任何修改
type=service
router=cli

#[Read-Only Listener]    不需要指定只读服务使用的端口号（因为没有启用只读服务）
#type=listener
#service=Read-Only Service
#protocol=MySQLClient
#port=4008

[Read-Write Listener]  定义读写分离服务使用的端口
type=listener
service=Read-Write Service
protocol=MySQLClient
port=4006  端口号

[MaxAdmin Listener] 定义管理服务使用的端口号
type=listener
service=MaxAdmin Service
protocol=maxscaled
socket=default
port=4016 端口号
:wq

			  3 配置数据库服务器52/51（根据配置文件设置配置数据库服务器）
					
					
					#添加mysqla 监控用户（监视server1和server2 连接 使用的用户）
					#添加mysqlb 路由用户（57检查server2/server1已有授权用户的连接账户）
					
只需要在主51服务器添加用户 从服务器52 会自动同步				
mysql> grant replication client , replication slave  
on  *.* to mysqla@"%" identified by "123qqq...A";

replication client  获取数据库服务mysqld的状态 （运行的 还是停止的 ）
replication slave   获取主从角色 （谁是master  谁是 slave）

mysql> grant select  on mysql.* to mysqlb@"%" identified by "123qqq...A";

#在52主机查看用户
mysql> select user from mysql.user where user in ("mysqla","mysqlb");
+--------+
| user   |
+--------+
| mysqla |
| mysqlb |
+--------+
2 rows in set (0.00 sec)

mysql> 
			
					
			  4 启动读写服务 (在57主机操作)
					4.1 测试数据库服务器添加的授权用户mysqla和mysqlb
[root@host57 ~]# which mysql || yum -y install mariadb					
[root@host57 ~]# mysql -h192.168.4.51 -umysqla -p123qqq...A
[root@host57 ~]# mysql -h192.168.4.52 -umysqla -p123qqq...A
[root@host57 ~]# mysql -h192.168.4.51 -umysqlb -p123qqq...A					
[root@host57 ~]# mysql -h192.168.4.52 -umysqlb -p123qqq...A	

					4.2 启动服务
						[root@host57 ~]# maxscale /etc/maxscale.cnf

						#日志文件，如果服务没启动可以查看日志内容获取报错信息
						[root@host57 ~]# vim /var/log/maxscale/
						maxscale.log
						
			  5 查看服务信息
					#查看进程
					[root@host57 ~]# ps -C maxscale
  PID TTY          TIME CMD
 1150 ?        00:00:00 maxscale
[root@host57 ~]# 
					#查看服务端口
[root@host57 ~]# netstat -utnlp  | grep maxscale
tcp6       0      0 :::4006                 :::*                    LISTEN      1150/maxscale       
tcp6       0      0 :::4016                 :::*                    LISTEN      1150/maxscale       
[root@host57 ~]# 

                    5 测试配置
			5.1 在57本机访问管理服务查看监控状态
[root@host57 ~]# maxadmin -uadmin -pmariadb -P4016
MaxScale> list servers
MaxScale> list servers
Servers.
-------------------+-----------------+-------+-------------+--------------------
Server             | Address         | Port  | Connections | Status              
-------------------+-----------------+-------+-------------+--------------------
server1            | 192.168.4.51    |  3306 |           0 | Master, Running
server2            | 192.168.4.52    |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+--------------------
MaxScale> exit  退出连接

			5.2  测试配置（验证57主机是否能实现数据的读写分离）
			     5.2.1 在数据库服务器添加用户，给客户端连接使用）	
				       #在master 51 添加
mysql> grant select,insert on db5.*
    -> to plj@"%" identified by "123qqq...A";
mysql> create database db5;
mysql> create table db5.a(id int);
mysql> select  * from db5.a;
					 
					  #在 slave 52 查看是否同步
mysql> desc db5.a;
+-------+---------+------+-----+---------+-------+
| Field | Type    | Null | Key | Default | Extra |
+-------+---------+------+-----+---------+-------+
| id    | int(11) | YES  |     | NULL    |       |
+-------+---------+------+-----+---------+-------+
1 row in set (0.00 sec)

mysql> select user from mysql.user where user="plj";
+------+
| user |
+------+
| plj  |
+------+
1 row in set (0.00 sec)

mysql> 				   
		    
			#连接57主机访问数据
			host50]# mysql -h192.168.4.57 -P4006  -uplj  -p123qqq...A
mysql> insert into db5.a values(666); 能存储数据
mysql> select  * from db5.a ； 能查询数据

            # 测试是否实现了读写分离

			在从服务器本机添加1条记录 
			mysql> insert into db5.a values(999)
 
[root@host50 ~]# mysql -h192.168.4.57 -P4006 -uplj -p123qqq...A
mysql> select  * from db5.a;
+------+
| id   |
+------+
|  666 |
|  777 |
+------+
2 rows in set (0.00 sec)

mysql> 	insert into db5.a vaules(999); (记录被存储在51主机 52 才会同步)   

mysql> insert into db5.a values(999);
mysql> select  * from db5.a; 可以查看都999的记录
+------+
| id   |
+------+
|  666 |
|  777 |
|  999 |
+------+
3 rows in set (0.00 sec)

mysql>
	   6 统一排查



