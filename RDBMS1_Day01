学习任务列表

学习任务：
   1 构建MySQL服务
	1.1 相关概念
		数据库介绍 ： 是存储数据的服务（存储数据的仓库）
		专业术语：DB     DBMS    DBS
		mysql的发展历史
		MySQL的特点
		应用场景
	1.2 搭建mysql数据库服务器 ，步骤如下：
		1.2.1 安装软件
		1.2.2 启动服务
		1.2.3 管理员root登录
		1.2.4 修改登录密码 并退出登录
		1.2.5 使用新密码登录
		1.2.6 相关参数和文件

   12  ls /var/ftp/upload/mysql-5.7.17.tar 
   13  tar -xvf /var/ftp/upload/mysql-5.7.17.tar 
   14  ls
   15  yum -y install mysql-community-*.rpm
   16  rpm -qa  | grep -i mysql
   17  ls
   
     									10:55讲课
   20  systemctl start mysqld

   21  systemctl status mysqld

   22  ls /var/lib/mysql   查看数据目录文件列表

   23  systemctl enable mysqld
   24  netstat -utnlp | grep 3306  查看端口
   25  ps -C mysqld       查看进程

[root@mysql50 ~]# grep  password /var/log/mysqld.log  #查看初始登录密码
2020-05-13T10:31:03.144952Z 1 [Note] A temporary password is generated for root@localhost: (GNhIipcY7V4

 
[root@mysql50 ~]# mysql -uroot -p'(GNhIipcY7V4' 使用初始密码登录


[root@mysql50 ~]# mysql -uroot -p123qqq...A

mysql> alter user  root@"localhost" identified  by  "123qqq...A";  #修改登录密码
mysql> exit
Bye

[root@mysql50 ~]# mysql -uroot -p123qqq...A  使用修改的密码登录
mysql>
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.04 sec)

		修改密码策略 练习10分钟到 11:48
			命令行设置好处 不用重启 马上有效
mysql> show variables like "%password%";
mysql> set global validate_password_policy=0 ;
mysql> set global validate_password_length=6 ;
mysql> show variables like "%password%";
mysql> alter user root@"localhost" identified by "abc123";
mysql> exit

[root@mysql50 ~]# mysql -uroot  -pabc123
mysql>
			配置永久有效
			vim /etc/my.cnf
			[mysqld]
			validate_password_policy=0
			validate_password_length=6	 
			:wq


   2 数据库基本管理
	2.1 连接数据库的连接方式
	2.2 把数据存储到数据库服务器上 过程
	2.3 SQL（结构化查询语言）命令的使用规则
	    SQL命令的分类
	2.4 库的管理命令 及 库名命名规则

	2.5 表的管理命令  3分钟 到 15:05  休息到 15:20
 mysql> create database db1;
 mysql> create table  db1.stuinfo( name char(3) , home char(10) , tel char(11) );
 mysql> use db1;
 mysql> show  tables;
 mysql> desc stuinfo;

	2.6 表记录管理命令：select | insert into  |  update  |  delete from
练习5分钟到 15:40

一起插入2行记录
mysql> insert into stuinfo values("bob","usa","119"),("tom","boy","usa");
mysql> select  * from db1.stuinfo; 查看所有表记录
mysql> select  name from db1.stuinfo; 只查看name列的记录
mysql> update db1.stuinfo set home="china"; 修改所有行home列的值
mysql> delete from db1.stuinfo; 删除表里的所有行

使用中文字符集 可以存储汉字 时间到 15:56 
mysql> create table db1.stuinfo2(name char(3) , home char(15) )default charset=utf8;

mysql> show create table db1.stuinfo2；

mysql> insert into stuinfo2 values ("张三疯","武当山") ;
Query OK, 1 row affected (0.00 sec)

 mysql> select  * from stuinfo2 ;
+-----------+-----------+
| name      | home      |
+-----------+-----------+
| 张三疯    | 武当山    |
+-----------+-----------+
1 row in set (0.00 sec)


休息10分钟到 16:10 
   3 MySQL数据类型
	字符类型 char  varchar   blob|text

mysql> create table db1.t2 (name char(2) , email varchar(15) );
Query OK, 0 rows affected (0.01 sec)

mysql> desc db1.t2;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| name  | char(2)     | YES  |     | NULL    |       |
| email | varchar(15) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> insert into db1.t2 values ("jim"  , "jim@163.com");
ERROR 1406 (22001): Data too long for column 'name' at row 1
mysql> 
mysql> insert into db1.t2 values ("ab"  , "jim@163.com");
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db1.t2;
+------+-------------+
| name | email       |
+------+-------------+
| ab   | jim@163.com |
+------+-------------+
1 row in set (0.00 sec)

mysql> 

 
	数值类型
	  整数类型 
	  浮点型
mysql> create table db1.t3 (name  char(3) , level  tinyint unsigned , money  int);
mysql> desc db1.t3;
mysql> insert into db1.t3 values ("jim", -1 , 290000 );
ERROR 1264 (22003): Out of range value for column 'level' at row 1
mysql> 
mysql> insert into db1.t3 values ("jim", 256 , 290000 );
ERROR 1264 (22003): Out of range value for column 'level' at row 1
mysql> 
mysql> insert into db1.t3 values ("jim", 25 , 290000 );
Query OK, 1 row affected (0.02 sec)

mysql> select  * from db1.t3;
+------+-------+--------+
| name | level | money  |
+------+-------+--------+
| jim  |    25 | 290000 |
+------+-------+--------+
1 row in set (0.00 sec)

mysql> insert into db1.t3 values ("tom", 36 , -1000000 );
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db1.t3;
+------+-------+----------+
| name | level | money    |
+------+-------+----------+
| jim  |    25 |   290000 |
| tom  |    36 | -1000000 |
+------+-------+----------+
2 rows in set (0.00 sec)

mysql> insert into db1.t3 values ("bob", 19.23 , -1000000.54 );
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db1.t3;
+------+-------+----------+
| name | level | money    |
+------+-------+----------+
| jim  |    25 |   290000 |
| tom  |    36 | -1000000 |
| bob  |    19 | -1000001 |
+------+-------+----------+
3 rows in set (0.00 sec)

mysql> 	

	休息一下到 17:20
	

	整数.小数 总位数
	xxx.xx    5
        999.99
         -999.99
	pay double
	pay double 

mysql> create table  t4 (pay float(5,2));
Query OK, 0 rows affected (0.02 sec)

mysql> desc t4;
+-------+------------+------+-----+---------+-------+
| Field | Type       | Null | Key | Default | Extra |
+-------+------------+------+-----+---------+-------+
| pay   | float(5,2) | YES  |     | NULL    |       |
+-------+------------+------+-----+---------+-------+
1 row in set (0.00 sec)

mysql> insert into t4 values (1000);
ERROR 1264 (22003): Out of range value for column 'pay' at row 1
mysql> 
mysql> insert into t4 values (999);
Query OK, 1 row affected (0.00 sec)

mysql> select  * from t4;
+--------+
| pay    |
+--------+
| 999.00 |
+--------+
1 row in set (0.00 sec)

mysql> insert into t4 values (1.23);
Query OK, 1 row affected (0.01 sec)

mysql> select  * from t4;
+--------+
| pay    |
+--------+
| 999.00 |
|   1.23 |
+--------+
2 rows in set (0.00 sec)

mysql> 
mysql> insert into t4 values (1.2356);
Query OK, 1 row affected (0.00 sec)

mysql> select  * from t4;
+--------+
| pay    |
+--------+
| 999.00 |
|   1.23 |
|   1.24 |
+--------+
3 rows in set (0.00 sec)

mysql> create table  db1.t5 (pay double );
Query OK, 0 rows affected (0.01 sec)

mysql> desc db1.t5;
+-------+--------+------+-----+---------+-------+
| Field | Type   | Null | Key | Default | Extra |
+-------+--------+------+-----+---------+-------+
| pay   | double | YES  |     | NULL    |       |
+-------+--------+------+-----+---------+-------+
1 row in set (0.00 sec)

mysql> insert into  db1.t5 values (11.2789);
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db1.t5;
+---------+
| pay     |
+---------+
| 11.2789 |
+---------+
1 row in set (0.00 sec)

mysql> 

 

	

	枚举类型 字段的值只能在类型列举的范围里选择
		enum（"","",""）  单选
		set（"" , "" ,""）   多选
 
 mysql> create table t5 (name char(3) , sex enum("man","woman","no") , likes set("eat","sleep","game","money") );
Query OK, 0 rows affected (0.13 sec)

mysql> desc t5;
+-------+-----------------------------------+------+-----+---------+-------+
| Field | Type                              | Null | Key | Default | Extra |
+-------+-----------------------------------+------+-----+---------+-------+
| name  | char(3)                           | YES  |     | NULL    |       |
| sex   | enum('man','woman','no')          | YES  |     | NULL    |       |
| likes | set('eat','sleep','game','money') | YES  |     | NULL    |       |
+-------+-----------------------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> insert into t5 values ("bob","girl","a,b");
ERROR 1265 (01000): Data truncated for column 'sex' at row 1
mysql> 
mysql> insert into t5 values ("bob","no","a,b");
ERROR 1265 (01000): Data truncated for column 'likes' at row 1
mysql> 
mysql> insert into t5 values ("bob","no","eat,sleep,money");
Query OK, 1 row affected (0.01 sec)

mysql> select  * from t5;
+------+------+-----------------+
| name | sex  | likes           |
+------+------+-----------------+
| bob  | no   | eat,sleep,money |
+------+------+-----------------+
1 row in set (0.00 sec)

mysql>

	日期时间类型
		年    year   YYYY  2020  1990 
		时间  time   HHMMSS    091428    211428
		日期  date   YYYYMMDD  20200515
		日期时间  datetime/timestamp  YYYYMMDDHHMMSS
					      20200515190000



mysql> create table  t6 (name char(10) , csnf  year  , birthday date , upclass time , party datetime );
Query OK, 0 rows affected (0.02 sec)

mysql> desc t6;
+----------+----------+------+-----+---------+-------+
| Field    | Type     | Null | Key | Default | Extra |
+----------+----------+------+-----+---------+-------+
| name     | char(10) | YES  |     | NULL    |       |
| csnf     | year(4)  | YES  |     | NULL    |       |
| birthday | date     | YES  |     | NULL    |       |
| upclass  | time     | YES  |     | NULL    |       |
| party    | datetime | YES  |     | NULL    |       |
+----------+----------+------+-----+---------+-------+
5 rows in set (0.00 sec)

mysql> insert into t6 values ("bob" , 1990 , 20201120 , 090000 , 20200618203000) ;
Query OK, 1 row affected (0.01 sec)

mysql> select  * from t6;
+------+------+------------+----------+---------------------+
| name | csnf | birthday   | upclass  | party               |
+------+------+------------+----------+---------------------+
| bob  | 1990 | 2020-11-20 | 09:00:00 | 2020-06-18 20:30:00 |
+------+------+------------+----------+---------------------+
1 row in set (0.00 sec)

mysql> 

日期时间类型 datetime 与timestamp的区别

mysql> create table db1.t7(meetting  datetime  ,  party  timestamp);
Query OK, 0 rows affected (0.12 sec)

mysql> insert into db1.t7 values (20211224093000,20211225223000);
Query OK, 1 row affected (0.00 sec)

mysql> select  * from db1.t7;
+---------------------+---------------------+
| meetting            | party               |
+---------------------+---------------------+
| 2021-12-24 09:30:00 | 2021-12-25 22:30:00 |
+---------------------+---------------------+
1 row in set (0.00 sec)

mysql> insert into db1.t7(meetting) values (19901023180000);
Query OK, 1 row affected (0.01 sec)

mysql> select  * from db1.t7;
+---------------------+---------------------+
| meetting            | party               |
+---------------------+---------------------+
| 2021-12-24 09:30:00 | 2021-12-25 22:30:00 |
| 1990-10-23 18:00:00 | 2020-05-15 17:40:55 |
+---------------------+---------------------+
2 rows in set (0.00 sec)

mysql> system  date
2020年 05月 15日 星期五 17:41:48 CST
mysql> 
mysql> insert into db1.t7(party) values (20231125070000);
Query OK, 1 row affected (0.01 sec)

mysql> select  * from db1.t7;
+---------------------+---------------------+
| meetting            | party               |
+---------------------+---------------------+
| 2021-12-24 09:30:00 | 2021-12-25 22:30:00 |
| 1990-10-23 18:00:00 | 2020-05-15 17:40:55 |
| NULL                | 2023-11-25 07:00:00 |
+---------------------+---------------------+
3 rows in set (0.00 sec)

mysql> 