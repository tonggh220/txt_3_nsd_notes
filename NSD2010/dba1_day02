###########DBA1_DAY02
一 、表结构
	1.1  约束条件
		作用：限制给表头赋值
                如何查看 表头的约束条件  desc  库.表；
                包括哪些？ Null | Key | Default | Extra

mysql> create table t7(
    -> name char(10) not null ,
    -> age tinyint unsigned default 19,
    -> class char(7) not null default "nsd2010",
    -> pay  float(7,2) default 28000,
    -> mail  char(30)
    -> );

mysql> insert into t7(name,mail)values("bob","bob@163.com");
mysql> insert into t7(name,mail,class)values("bob","bob@163.com","nsd2011");

不允许赋null值 验证
mysql> insert into t7 values (null,null,null,null,null);
ERROR 1048 (23000): Column 'name' cannot be null

mysql> insert into t7 values ("tom",null,null,null,null);
ERROR 1048 (23000): Column 'class' cannot be null

mysql> insert into t7 values ("tom",null,"nsd2009",null,null);

这样赋值的时候不是null （无）
mysql> insert into t7 values ("null",null,"",null,null);

select  *  from  t7;


	1.2  修改表结构 (对已经创建完成的表做修改)

	     

             命令格式  alter table 库.表  操作动作；

        可以改表名rename、字段名change、类型modify 约束条件modify 添加新字段名add
删除表中已有字段名drop

mysql> alter table db1.t15 rename stuinfo;

mysql> alter table  stuinfo drop sex , drop likes  ;

mysql> alter table stuinfo  add age  int  default 19 ;

添加新列 first的使用

mysql> alter table stuinfo add stu_num  int first;

添加新列 after 的使用

mysql> alter table  stuinfo  add sex enum("boy","girl") default "girl" after name;

select  * from stuinfo;


    modify 可以 修改字段类型 、约束条件 位置

    注意修改字段类型和约束条件时，与表头下已经存储的数据冲突时，不允许修改

mysql> alter table stuinfo modify stu_num int not null ;
ERROR 1138 (22004): Invalid use of NULL value


mysql> alter table stuinfo modify age tinyint  default 21;

mysql> alter table  stuinfo modify age tinyint default 21 after name ;


    change  可以 修改字段名 及 类型和约束条件
           注意当把类型和约束条件原样写的时候就是只修改字段名

 mysql> alter table stuinfo change name  user char(10) null  default null;

 mysql> alter table stuinfo change stu_num xuehao smallint null default null;

   

	休息到 16:10 

二、MySQL键值 个给表中的字段设置标签，每种标签有不同的功能
	 标签： index  unique  primary key  foreign key    fulltext
	
        2.1 普通索引index 的使用 :作用 给表头下的数据排队
				  排队的目的 是为加快查找数据的速度  

	    相关概念 ？
			索引介绍 
			优/缺点

新华字典 1--200  
	目录 （给所有的汉字排队）
            笔画
            部首
            拼音  
      
 
            使用：
		使用规则
		查看索引 ：   基本查看 desc  stuinfo;

   		             查看详细信息  mysql> show index from stuinfo;
				Btree  二叉树


		创建索引 :
			  建表时创建索引 index(列名)
mysql> create table t15 (
    -> name char(10),class char(7),sex enum("b","g"),age int ,
    -> index(name) , index(class),index(sex)
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql> desc t15;
+-------+---------------+------+-----+---------+-------+
| Field | Type          | Null | Key | Default | Extra |
+-------+---------------+------+-----+---------+-------+
| name  | char(10)      | YES  | MUL | NULL    |       |
| class | char(7)       | YES  | MUL | NULL    |       |
| sex   | enum('b','g') | YES  | MUL | NULL    |       |
| age   | int(11)       | YES  |     | NULL    |       |
+-------+---------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> 
mysql> show index from t15 \G


			  给已有表添加索引
mysql> create index  yyy on  stuinfo(sex);
mysql> create index  xxx on  stuinfo(user);


		删除索引
mysql> drop index yyy on stuinfo;

	
	select  * from stuinfo where  class="nsd2010";


	2.2 主键primary key 的使用
		作用：不允许给表头存储空null值  值不能重复

                使用规则？

		创建主键：
			建表时创建主键
mysql> create table t16(
    -> stu_num  char(9) , name char(10) , age int,
    -> primary key(stu_num)
    -> );

mysql> create table t17( 
stu_num  char(9) primary key , name char(10) , age int );
			
		
		删除主键
mysql> alter table t17 drop primary key ;

                        已有表里添加主键
mysql> alter table t17  add primary key(stu_num);

	
添加行
mysql> insert into t16 values("nsd201009","lucy",29);
mysql> insert into t16 values("nsd201009","lucy",29);报错
mysql> insert into t16 values("nsd201019","lucy",29);
mysql> insert into t16 values(null,"lucy",29);报错



！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！


复合主键 ：表中的多个表头一起做主键
                        当给做主键的表头赋值时，多行的值不同时相同即可。反之不可以。
                        复合主键 必须一起创建

主键             主键
客户端ip地址    服务的端口号   访问状态                        
cip              port          status
1.1.1.1          22            yes
1.1.1.1          80            no

创建并验证复合主键  练习到 09:31
mysql> create table t18( cip  varchar(15) , port  smallint , stauts enum("yes","no"), primary key(cip,port) );


mysql> desc t18;
+--------+------------------+------+-----+---------+-------+
| Field  | Type             | Null | Key | Default | Extra |
+--------+------------------+------+-----+---------+-------+
| cip    | varchar(15)      | NO   | PRI | NULL    |       |
| port   | smallint(6)      | NO   | PRI | NULL    |       |
| stauts | enum('yes','no') | YES  |     | NULL    |       |
+--------+------------------+------+-----+---------+-------+


mysql> insert into t18 values("1.1.1.1",22,"yes");
Query OK, 1 row affected (0.01 sec)

mysql> insert into t18 values("1.1.1.1",22,"no");
ERROR 1062 (23000): Duplicate entry '1.1.1.1-22' for key 'PRIMARY'
mysql> 
mysql> insert into t18 values("1.1.1.1",80,"no");
Query OK, 1 row affected (0.01 sec)

mysql> insert into t18 values("2.1.1.1",80,"yes");
Query OK, 1 row affected (0.00 sec)

mysql> select  * from t18;
+---------+------+--------+
| cip     | port | stauts |
+---------+------+--------+
| 1.1.1.1 |   22 | yes    |
| 1.1.1.1 |   80 | no     |
| 2.1.1.1 |   80 | yes    |
+---------+------+--------+
3 rows in set (0.00 sec)

mysql> 

		删除复合主键
mysql> alter table t18  drop primary key;
mysql> desc db1.t18;
+--------+------------------+------+-----+---------+-------+
| Field  | Type             | Null | Key | Default | Extra |
+--------+------------------+------+-----+---------+-------+
| cip    | varchar(15)      | NO   |     | NULL    |       |
| port   | smallint(6)      | NO   |     | NULL    |       |
| stauts | enum('yes','no') | YES  |     | NULL    |       |
+--------+------------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

		
		在已有表添加复合主键
mysql> alter table  t18 add primary key(cip,port);
mysql> desc t18;
+--------+------------------+------+-----+---------+-------+
| Field  | Type             | Null | Key | Default | Extra |
+--------+------------------+------+-----+---------+-------+
| cip    | varchar(15)      | NO   | PRI | NULL    |       |
| port   | smallint(6)      | NO   | PRI | NULL    |       |
| stauts | enum('yes','no') | YES  |     | NULL    |       |
+--------+------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

                primary key 与auto_increment连用

		auto_increment 让表头通过自增长的方式赋值 
			       自增长 用+1的计算结果赋值
				添加新行时，不给自增长字段赋值时 ，通过+1的计算结果赋值。
 
行号  姓名  年龄  班级
id    name  age  class
练习 + 休息 共计 15分钟 到  10:15 
create table  t19 (id int  primary key  auto_increment , name char(10) , age tinyint ,  class char(7));

mysql> desc t19;
+-------+------------+------+-----+---------+----------------+
| Field | Type       | Null | Key | Default | Extra          |
+-------+------------+------+-----+---------+----------------+
| id    | int(11)    | NO   | PRI | NULL    | auto_increment |
| name  | char(10)   | YES  |     | NULL    |                |
| age   | tinyint(4) | YES  |     | NULL    |                |
| class | char(7)    | YES  |     | NULL    |                |
+-------+------------+------+-----+---------+----------------+
4 rows in set (0.00 sec)

mysql> insert into t19(name,age,class)values("bob",19,"nsd2010");
mysql> insert into t19(name,age,class)values("tom",29,"nsd2010");
mysql> insert into t19(name,age,class)values("jim",29,"nsd2010");
mysql> insert into t19  values(6,"lucy",29,"nsd2010");
mysql> insert into t19(name,age,class)values("jerry",29,"nsd2010");
mysql> select  * from t19;
+----+-------+------+---------+
| id | name  | age  | class   |
+----+-------+------+---------+
|  1 | bob   |   19 | nsd2010 |
|  2 | tom   |   29 | nsd2010 |
|  3 | jim   |   29 | nsd2010 |
|  6 | lucy  |   29 | nsd2010 |
|  7 | jerry |   29 | nsd2010 |
+----+-------+------+---------+
5 rows in set (0.00 sec)


	2.3 外键foreign key 的使用
		给表里的外键表头添加数据时，数据必须在参考的表中的列下边的值里选择

                外键的使用规则？
		
		创建外键的命令格式

		create table 库.表(字段名列表, foreign key(列名)  references 表名（列名） on  update cascade  on delete cascade  )engine=innodb;


工资表gztab                  员工信息表ygtab

   gz_id  pay                    PRI
                                yg_id     name   
   编号   工资                   编号     名字                     
    9                             9    大锤
    2                             2    大锤
                        

创建外键并验证功能

被参考的表要先创建
use  db1;

create table ygtab(yg_id  int  primary key auto_increment,name char(10) )engine=innodb;


insert into ygtab(name)values("dachui"),("tiechui"),("xxchui");

select  * from ygtab;


创建有外键的表

create table  gztab( gz_id int ,pay float(7,2), foreign key(gz_id) references ygtab(yg_id) on update cascade on delete cascade )engine=innodb;

查看表里是否有外键
mysql> show create table  gztab \G
*************************** 1. row ***************************
       Table: gztab
Create Table: CREATE TABLE `gztab` (
  `gz_id` int(11) DEFAULT NULL,
  `pay` float(7,2) DEFAULT NULL,
  KEY `gz_id` (`gz_id`),
  CONSTRAINT `gztab_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `ygtab` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1
1 row in set (0.10 sec)

mysql> 

删除外键 
mysql> alter table  gztab drop foreign key gztab_ibfk_1;


添加外键
alter table  gztab  add  foreign key(gz_id) references ygtab(yg_id) on update cascade on delete cascade ;

          练习+休息到  11:21 
验证外键功能
       1  约束功能

mysql> insert into gztab values(4,50000);
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`db1`.`gztab`, CONSTRAINT `gztab_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `ygtab` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE)
mysql> 

mysql> insert into gztab values(1,10000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into gztab values(2,10000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into gztab values(3,20000);
Query OK, 1 row affected (0.00 sec)

mysql> select  * from gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 10000.00 |
|     2 | 10000.00 |
|     3 | 20000.00 |
+-------+----------+
3 rows in set (0.00 sec)

mysql> 

	2 同步更新

mysql> update ygtab set yg_id=6 where name="xxchui";
Query OK, 1 row affected (0.11 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select  * from gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 10000.00 |
|     2 | 10000.00 |
|     6 | 20000.00 |
+-------+----------+
3 rows in set (0.00 sec)

      3 同步删除
mysql> delete from ygtab where yg_id=6;
Query OK, 1 row affected (0.05 sec)

mysql> select  * from gztab;
+-------+----------+
| gz_id | pay      |
+-------+----------+
|     1 | 10000.00 |
|     2 | 10000.00 |
+-------+----------+
2 rows in set (0.00 sec)

mysql> 

	
      4 优化配置
mysql> insert into gztab values(null,50000);
mysql> insert into gztab values(1,10000);
mysql> insert into gztab values(2,10000);

mysql> delete from gztab;
mysql> alter table gztab add primary key(gz_id);
mysql> desc gztab;
+-------+------------+------+-----+---------+-------+
| Field | Type       | Null | Key | Default | Extra |
+-------+------------+------+-----+---------+-------+
| gz_id | int(11)    | NO   | PRI | NULL    |       |
| pay   | float(7,2) | YES  |     | NULL    |       |
+-------+------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> 优化后的效果
mysql> insert into gztab values(null,50000);
mysql> insert into gztab values(1,10000);
mysql> insert into gztab values(2,10000);
mysql> insert into gztab values(1,10000);
mysql> insert into gztab values(3,10000);
