####DBA2_DAY01 （搭建MySQL主从同步结构存储数据） 

一 MySQL主从同步 
	1.1 主从同步结构介绍  
	1.2 工作原理
	1.3 配置主从同步
		环境准备： 51 和 52  都只保留初始的4个数据库。


		1.3.1 配置master服务器 51
			启用binlog日志  用户授权  查看日志信息

例子：把数据库服务器51配置为 master服务器  到11:35 

]# vim /etc/my.cnf
[mysqld]
server_id=51
log_bin=master51
:wq

]# systemctl restart  mysqld
]# systemctl  stop firewalld

mysql> grant  replication slave on  *.*  to  repluser@"%"  identified by "123qqq...A";

mysql> show master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> 



MASTER binlog  SQL ---------> slave 

		1.3.2 配置slave服务器  52
                         1 启动server_id  重启数据库服务
			 2 指定master数据库服务器的信息
			 3 启动slave进程
			 4 查看进程状态(必须是yes)

例子：把52为slave 服务器
]# vim /etc/my.cnf
  [mysqld]
  server_id=52
:wq

]# systemctl restart mysqld
]# systemctl  stop  firewalld

mysql> change master to  master_host="192.168.4.51" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=441;

mysql> start slave;

mysql> show slave status \G
	slave_IO_running: YES
	slave_SQL_running: YES


	1.4 测试配置
		客户端连接master服务器访问数据

		在slave 服务本机可以看到同样的数据

	
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	1.5 统一排错时间

		查看报错信息排错

		 Last_IO_Error: 查看IO线程报错 
                 Last_SQL_Error: 查看SQL线程报错 

Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.

 uuid的错误
		在slave服务器本机执行如下操作：
		]# vim /var/lib/mysql/auto.cnf 修改某位数
		]# systemctl restart mysqld


Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: 'Could not find first log file name in binary log index file'

              找不到binlog日志文件名
	      MySQL> stop slave;  在从服务器执行

              show master status; 在主服务器查看日志
	      

	      在服务器重新指定日志信息
		MySQL> change master to  master_log_file="日志名",master_log_pos=偏移量；
		mysql>  start slave;
		mysql>  show slave status \G
		


                slave_IO_running: 错误

		MySQL> stop slave;
		mysql> 再执行一遍 change master to 的设置；
		mysql> start slave;
                mysql> show slave status \G 

            
		
		mysql> show slave status \G

            把slave服务器还原 重新配置
	     cd  /var/lib/mysql/
	     rm -rf  master.info
	     rm -rf  relay-log.info
	     rm -rf   *bin.*
             systemctl restart mysqld

            mysql> change master to  重新指定主服务器的信息
            mysql> start slave ;
	    mysql> show slave status \G
 

    	     
error connecting to master 'repl           user@192.168.4.52:3306' - retry-time: 60  retries: 1
          从服务器使用授权用户repluser连接不上主数据库服务器

	  检查主从服务器的防火墙服务是否关闭
	  在从服务器测试授权用户repluser
           若连接失败 在主服务器再添加一遍repluser 
           若能连接说明从服务器的change master to 指定有问题
	要从新指定 stop slave ;
        change master to  master_user="repluser",master_password="123qqq...A";
               start slave ;
              show slave status \G


	从数据库目录下的相关文件
	master.info 	relay-log.info  host52-relay-bin.index
        host52-relay-bin.000001

删除以上文件，重启数据库服务，可把主机恢复为独立的数据库服务器


二 MySQL主从同步模式
	2.1 主从同步结构模式
             2.2.1 主从同步结构模式
                   一主一从  一主多从 主从从  主主结构
           休息到 16:05 

	    2.1.2 配置一主多从同步结构存储数据
		  诉求 ：把 53 也配置为51 的从数据库服务器

		  从服务器53的配置
			 1 运行mysqld服务 并关闭防火墙

			 2 确保与主数据库服务器数据一致
host51]# mysqldump -uroot -p123456  db1  > /root/db1.sql
host51]# scp /root/db1.sql  root@192.168.4.53:/opt/

host53]#
mysql> create database db1;
]# mysql -uroot -p密码  db1  < /opt/db1.sql
mysql> select  * from db1.a;

			 3  指定server_id 并重启mysqld服务
[root@host53 ~]# vim /etc/my.cnf
[mysqld]
server_id=53
:wq

[root@host53 ~]# systemctl  restart mysqld


			 4  测试主服务器的授权用户repluser
[root@host53 ~]# mysql -h192.168.4.51 -urepluser -p123qqq...A
			 
			 5  指定主服务器信息
show master status ; #在主服务器查看使用的日志名和偏移量

mysql> change master to master_host="192.168.4.51",master_user="repluser" , master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=1294;

			 6 启动slave进程mysql> start slave;

			 7 查看状态 show  slave status \G
			 Slave_IO_Running: Yes
                         Slave_SQL_Running: Yes

                         8 测试配置
		  	#客户端连接主数据库服务器存储数据 52 和 53 上都有同样的数据 ， 就对了
host50]# mysql -h192.168.4.51 -u99yaya -p123qqq...A -e 'insert into db1.a values(114),(119),(1230)'


[root@host53 ~]# mysql -uroot -p123qqq...A -e 'select  * from db1.a'

  
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'select  * from db1.a'


              

！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！



            2.1.3 配置主从从同步结构存储数据

                    主   从    从
                    53   54     55

		   把53 恢复为独立数据库服务器 做主从从结构中的主数据库服务器
   16  cd /var/lib/mysql
   17  rm -rf master.info 
   18  rm -rf relay-log.info 
   20  rm -rf *-relay-bin.*
   22  systemctl  restart mysqld
   23  mysql -uroot -p密码 
MySQL> drop database db1'
mysql> show slave status \G
Empty set (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.05 sec)

mysql> 
               配置主数据库服务器53

			启用binglog日志文件
			用户授权
			查看日志信息

]# vim  /etc/my.cnf
[mysqld]
server_id=53
log_bin=master53
:wq

]# systemctl restart mysqld
]# systemctl stop firewalld
]# mysql -uroot -p密码
mysql> grant replication slave on  *.* to  repluser@"%" identified by "123qqq...A";
mysql> show  master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master53.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> 

                配置既做从数据库服务器又做主数据库服务器的54 主机

		  
[root@host54 ~]# vim /etc/my.cnf
[mysqld]
server_id=54
log_bin=master54
log_slave_updates
:wq

[root@host54 ~]# systemctl  restart mysqld
[root@host54 ~]# mysql -uroot -p123qqq...A

mysql> grant replication slave on  *.* to  repluser@"%" identified by "123qqq...A";
Query OK, 0 rows affected, 1 warning (0.16 sec)

mysql> show master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master54.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> 
mysql> change master to master_host="192.168.4.53",master_user="repluser",master_password="123qqq...A",master_log_file="master53.000001",master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.08 sec)

mysql> start slave ;
mysql> show slave status \G
            Slave_IO_Running: Yes
            Slave_SQL_Running: Yes


			配置54的从数据库服务器 55主机

				测试54的授权用户
[root@host55 ~]# mysql -h192.168.4.54 -urepluser -p123qqq...A
mysql> exit

				指定server_id 并重启数据库服务

[mysqld]
server_id=55
:wq

]# systemctl restart mysqld
]# systemctl stop firewalld

			        管理员root登录 指定主服务器信息
在54主机查看日志信息
mysql> show master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master54.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

[root@host55 ~]# mysql -uroot -p123qqq...A
mysql> change master to master_host="192.168.4.54",master_user="repluser" , master_password="123qqq...A" , master_log_file="master54.000001" , master_log_pos=441;

				启动slave进程
mysql> start slave ;
Query OK, 0 rows affected (0.01 sec)




				查看进程状态
mysql> show slave status \G			
            Slave_IO_Running: Yes
            Slave_SQL_Running: Yes


				测试配置
					 在主服务器53 建库 建表 插入记录

[root@host53 ~]# mysql -uroot -p123qqq...A -e 'create database gamedb'
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'create table gamedb.user(name char(10))'

[root@host53 ~]# mysql -uroot -p123qqq...A -e 'insert into gamedb.user values("yaya")'
					 在服务器 54 和 55 主机都能看到同样的数据

[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select * from gamedb.user'

[root@host54 ~]# mysql -uroot -p123qqq...A -e 'select * from gamedb.user'
              
！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
	2.2 主从同步复制模式：从服务器与主服务器做数据同步是复制的方式
			1 异步复制（默认）？
			2 半同步复制

	    注意：如果准备让一台服务器既做主又做从服务器2种模块都要安装都要启用。

	    启用半同步复制模式
			查看服务是否运行命令行安装模块
mysql> show  variables  like  'have_dynamic_loading';
+----------------------+-------+
| Variable_name        | Value |
+----------------------+-------+
| have_dynamic_loading | YES   |
+----------------------+-------+
1 row in set (0.06 sec)

			查看服务器是否已经安装了模块
> select  plugin_name, plugin_status from  information_schema.plugins  where plugin_name like '%semi%';  

			
			查看服务器是否已经启用了模块
mysql> show  variables  like  "rpl_semi_sync_%_enabled";

			

			主数据库服务器的配置
				安装master模块
命令行配置（马上生效 不需要重启服务 但重启服务后会失效）
	install  plugin  rpl_semi_sync_master   SONAME   "semisync_master.so"; 		

永久配置（编辑配置文件 即使服务重启也依然有效）
vim /etc/my.cnf
[mysqld]
 
plugin-load=rpl_semi_sync_master=semisync_master.so#安装模块
:wq



				启用master模块

命令行配置（马上生效 不需要重启服务 但重启服务后会失效）
		set  global rpl_semi_sync_master_enabled=1;

永久配置（编辑配置文件 即使服务重启也依然有效）
vim /etc/my.cnf
[mysqld]
 
rpl_semi_sync_master_enabled=1 #启动模块
:wq


			从数据库服务器的配置
				安装slave模块
命令行配置（马上生效 不需要重启服务 但重启服务后会失效）
mysql> install  plugin  rpl_semi_sync_slave   SONAME   "semisync_slave.so";


永久配置（编辑配置文件 即使服务重启也依然有效）

vim /etc/my.cnf
[mysqld]
 
plugin-load=rpl_semi_sync_slave=semisync_master.so#安装模块

:wq

				启用slave模块

命令行配置（马上生效 不需要重启服务 但重启服务后会失效）
			set  global rpl_semi_sync_slave_enabled=1;  
永久配置（编辑配置文件 即使服务重启也依然有效）
vim /etc/my.cnf
[mysqld]
 
rpl_semi_sync_master_slave=1 #启动模块
:wq			



例子 ： 在  50 主机配置

命令行配置 

mysql> install  plugin  rpl_semi_sync_slave   SONAME   "semisync_slave.so";
mysql> install  plugin  rpl_semi_sync_master   SONAME   "semisync_master.so";
mysql> set  global rpl_semi_sync_master_enabled=1;
mysql> set  global rpl_semi_sync_slave_enabled=1;

命令行查看
mysql> select  plugin_name, plugin_status from  information_schema.plugins  where plugin_name like '%semi%';
+----------------------+---------------+
| plugin_name          | plugin_status |
+----------------------+---------------+
| rpl_semi_sync_slave  | ACTIVE        |
| rpl_semi_sync_master | ACTIVE        |
+----------------------+---------------+
2 rows in set (0.16 sec)

mysql> show  variables  like  "rpl_semi_sync_%_enabled";
+------------------------------+-------+
| Variable_name                | Value |
+------------------------------+-------+
| rpl_semi_sync_master_enabled | ON    |
| rpl_semi_sync_slave_enabled  | ON    |
+------------------------------+-------+
2 rows in set (1.52 sec)

mysql> 

永久配置 
]# vim /etc/my.cnf
  [mysqld]
plugin-load ="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1
:wq