#####DBA2_DAY04   部署mysql高可用集群
			集群知识回顾：
					集群的定义： 多台主机提供相同       
                    集群的类型： 负载均衡集群LB  (怎么工作的： 多台服务器平均分摊客户端的访问)   
					                     高可用集群HA  （怎么工作的： 2台机器 分为主 备 2中角色 当主坏了
备用服务自动顶替主的提供服务）
                    
					实现LB集群的软件： LVS  haproxy  Nginx  
					实现HA集群的软件：Keepalived 

                    使用MHA软件 部署mysql服务高可用集群
					       环境准备：
					              1 配置 一主多从
											配置51 为master数据库服务器
													  启用binlog日志 用户授权   查看日志
													
											配置slave 服务器 52
												 
											配置slave 服务器 53
								
								  2 配置ssh免密登录
											2.1 管理主机57 可以ssh免密登录3台数据库服务器 51 、52   53 
											2.2 3台数据库服务器彼此之间ssh免密登录
											
								  3 安装MHA软件依赖包
								           把真机的MHA目录的所有软件拷贝到 57  51 52 53  机器里
										    3.1 安装yum里没有的依赖软件
											3.2  剩下的依赖根据安装MHA软件时提示安装
                                        


                                						   二、部署高可用集群
								  2.1 配置管理主机  192.168.4.57
													安装软件MHA
															MHA软件介绍
															安装MHA软件 
															
													创建主配置文件并编辑
													创建故障切换脚本
													
								  2.2 配置数据库服务器192.168.4.51~53
													2.2.1 把vip地址192.168.4.100 配置在当前主从同步结构
													         中的主数据库服务器 192.168.4.51

													2.2.2  数据库服务器192.168.4.51~53安装mha_node软件
													
													2.2.3  在数据库服务器添加用户 （做用户授权）
													           2.2.3.1  在数据库服务器192.168.4.51~53添加监控用户root 
															   2.2.3.2 在 数据库服务器192.168.4.52~53检查是否有repluser用户
															                没有手动添加
									
								  2.3 优化数据库服务器192.168.4.51~53
													2.3.1  所有数据库启用半同步复制模式（安装模块启用模块）
													2.3.2  在数据库服务器192.168.4.51~53 禁止自动删除本机
																		的中继日志文件
													2.3.3 在 数据库服务器192.168.4.52~53启用binlog日志 
															              并重启数据库服务  并查看本机slave 状态
		                   三 、测试配置  在 192.168.4.57
									3.1  测试ssh的配置
		[root@host57 ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf	
		
									3.2  测试主从同步配置
		[root@host57 ~]# masterha_check_repl --conf=/etc/mha/app1.cnf		
		
									3.3  统一排错时间
												ssh检查报错：
															命令行ssh 连接对方  能否不输密码登录
															把 57  51  52  53  防火墙 关闭  然后命令行再 ssh连接
															检查 app1.cnf 配置 
				
											  主从检查失败：
													执行 masterha_check_repl --conf=/etc/mha/app1.cnf
													查看 输出中[error] 后边的报错信息 
													
										            保证你的主从结构必须是一主多从结构
													验证app1.cnf文件中 [server_default]下的配置项都对吗？
													检查51 52  53 的binlog日志是否启用了 
												    检查一所有主机是不是 安装的 mha_node 
													
 四 、启动管理服务
[root@host57 ~]# masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover
Wed Dec 30 20:29:01 2020 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.
Wed Dec 30 20:29:01 2020 - [info] Reading application default configuration from /etc/mha/app1.cnf..
Wed Dec 30 20:29:01 2020 - [info] Reading server configuration from /etc/mha/app1.cnf..
							
							
[root@host57 ~]# masterha_check_status  --conf=/etc/mha/app1.cnf 
app1 (pid:20643) is running(0:PING_OK), master:192.168.4.51
[root@host57 ~]# 	

[root@host57 ~]# masterha_stop  --conf=/etc/mha/app1.cnf 停止服务的命令 
						
							五、测试高可用功能
									5.1 访问 集群存取数据
										  在 51添加用户给客户端连接使用
											 mysql> create database db1;
									         mysql> grant all on db1.* to   jing@"%" identified by "123qqq...A";
										  
										  在50 连接vip地址 访问数据库服务
										  ping  -c 2  192.168.4.100
										  mysql  -h192.168.4.100  -ujing   -p123qqq...A
mysql> create table db1.t1(id int);
mysql> insert into db1.t1 values(101);
mysql> insert into db1.t1 values(102);
mysql> select  * from db1.t1;   在2台备用的从数据库服务器上也可以查看到数据

										  
										  
									5.2 测试高可用
											  1 停止当前拥有vip地址 主机的数据库服务器 
											 
						
							管理服务会自动停止   然后调用app1.cnf文件里定义故障切换脚本 把vip地址部署在
							新的主数据库服务器上，  另外一台备用自动配置为新的主服务器的从库
							
							客户端依然可以连接VIP地址访问数据库服务
							
							在app1.cnf文件里会自动删除 宕机主服务器的配置 
							
							要再启动管理服务 ，会监视当前的主数据库服务
							
							
							
							六、把宕机的数据库服务器再添加到集群里
									6.1  把宕机的服务器配置为  当前master服务器  从库
											      1  启动数据库服务
												  2  确保与当前的主数据库服务器数据一致
												  3  配置为当前主数据库服务器的从库 
									
									6.2 把宕机的服务器添加到集群里 
									        vim /etc/mha/app1.cnf
[server1]
candidate_master=1
hostname=192.168.4.51
port=3306
:wq
										[root@host57 ~]# masterha_check_ssh   --conf=/etc/mha/app1.cnf
										[root@host57 ~]# masterha_check_repl  --conf=/etc/mha/app1.cnf

[root@host57 ~]# masterha_stop  --conf=/etc/mha/app1.cnf
[root@host57 ~]# masterha_manager    --conf=/etc/mha/app1.cnf     --remove_dead_master_conf --ignore_last_failover
										  
[root@host57 ~]# masterha_check_status  --conf=/etc/mha/app1.cnf 
app1 (pid:70771) is running(0:PING_OK), master:192.168.4.52
									
					MHA集群配置总结：
								做集群的数据库服务器必须是一主多从
								客户端访问数据库服务器必须连接vip地址
								宕机的数据库服务器需要手动添加到集群里，并需要人为同步宕机期间的数据
								管理服务监视到当前的主服务宕机后 管理服务会停止。需要人为启动管理服务
								才能监视新的主数据库服务器。


                                