一、数据导入导出 （批量处理数据）
		1.1  检索目录： mysql服务在执行数据导入导出时会在要求的目录里查找文件
						查看默认使用的目录
						mysql> show variables like "%file%";
						mysql> show variables like "secure_file_priv";
						
						修改检索目录 ？
		
		1.2 数据导入 ： 把系统文件的内容保存数据的表里
		                 数据导入命令？load  data 
						 
						数据导入步骤？
								1 创建存储数据的库和表
									create  database  db3;
									create  table  db3.user(字段段名列表);
								2 把系统文件拷贝到检索目录下
								cp   /etc/passwd    /myload/
								3 执行数据导入命令
mysql> load  data  infile "/myload/passwd" into table db3.user 
fields terminated by ":"   lines  terminated by "\n";								
								
								4 查看数据
alter table  db3.user  add  id  int  primary key  auto_increment  first;

mysql> select  * from  db3.user;
mysql> select  * from  db3.user  where  id <= 3 ;
mysql> select  * from  db3.user  where  id = 5 ;
				休息到 11:25 

						
					
		
		1.3 数据导出 ： 把表记录保存到系统文件
								命令格式1
mysql> select name,uid,home  from db3.user where id <= 3	;							
mysql> select name,uid,home  from db3.user where id <= 3  into outfile "/myload/b.txt";
mysql>  system  cat /myload/b.txt


								命令格式2
mysql> select name,uid,home  from db3.user where id <= 3  into outfile "/myload/c.txt"
fields  terminated by "#";
								
								命令格式3
	
mysql> select name,uid,home  from db3.user where id <= 3  into outfile "/myload/d.txt"
fields  terminated by "#"   lines  terminated by "!!!";					
		
二、管理表记录 （对表里的行做管理）db3.user;
		2.1  查看 select  
				     格式 ？  条件控制显示行   字段名列表控制显示那些列
					 
					 select   字段名列表  from  库.表  where  条件；
					 
		         select   *  from    db3.user;    查看表里的所有记录
					 
				 select   name,home,uid   from  db3.user; 
		
				select   name,home,uid   from  db3.user  where  id  <= 3 ; 
					 
		
		2.2  添加新行, （新添加的行会添加在末尾）命令格式如下：
					添加1行给所有列赋值
 insert into user   values (21 ,"bob","x",2000,2000,"test user","/home/bob","/bin/bash");
					
					添加多行给所有列赋值
 insert into user   values 
 (23 ,"bob","x",2000,2000,"test user","/home/bob","/bin/bash")，
 (29 ,"tom","x",3000,2000,"test user","/home/bob","/bin/bash")；
					
					添加1行给指定的列赋值 （没有赋值的列，使用默认值或自增长结果赋值）
mysql> insert into user(name , uid ) values ("john",3001);
					
					添加多行给指定的列赋值（没有赋值的列，使用默认值或自增长结果赋值）
mysql> insert into user(name , uid ) values ("john",3001),("alices",2888);

					
		2.3  修改行里列  update 
				命令格式 
							update   库.表  set   列名=值，列名=值  where 条件；
							
							
							不加条件修改的是 表里的所有行
							mysql> update  user set  password="a" , comment="teacher" ;
							
							只修改符合条件的行
   	mysql> update user set  password="x" , comment="root" where name="root" ;	

	
		2.4 删除行 
		            命令格式    delete from  库.表 where  条件 ；
		
		              不加条件执行删除命令删除表里的所有行
					   delete  from  user;
					   
					只删除与条件匹配的行
					 delete  from  user  where  id > 20 ; 
	mysql> select  *  from  user where id > 20 ;				
    mysql> delete from  user where id > 20 ;


  三、 匹配条件    where 
		3.1  基本条件（适用于update   select  delete）
						1   数值比较   >   >=   <   <=  =  !=
	mysql> select  * from user where uid =  0;
	mysql> select name,uid,gid from user where  uid = gid ;
	mysql> select name,uid,gid from user where  uid != gid ;
	
						2 字符比较  =  !=
	mysql> select name  from user where name = "httpd";
    Empty set (0.00 sec)
	
    
	
						3 空  非空 
mysql> select  name , uid from user where  uid is null ;
Empty set (0.00 sec)


                        逻辑非     !   not       取反 
mysql> select name,shell from user where shell !=  "/bin/bash" ;  
mysql> select  name , uid from user where  uid is not null ;
						
					  4 逻辑比较(多个判断条件)
						  逻辑与    and   多个判断条件必须都成立
						  逻辑或    or     多个判断条件某1个条件都成立即可
						 
			
  select  name  , uid   from   user  where  name="sync"  and  uid=10 ;			
  mysql> select  id , name  , uid   from   user  where id>=3 and id<=10 ;			  
	
  mysql> select name from user where  name="mysql" or  name="bin" ;
	
	
						5 范围匹配
mysql> select  name , uid  from user where  uid  in  (3 , 6 , 9 , 7 ) ;

mysql> select name , shell from user  where shell not in ("/bin/bash" , "/sbin/nologin");
						
mysql> select  * from user where  uid  between 10 and 20 ;

						休息到 15:20 
		3.2  高级条件  
					1   模糊匹配 like  ( 适用于 select   update   delete)  
					     _    表示任意  1个 字符
					 
					    %    表示 0-N个字符
					 
mysql> select name from user where  name like  '_ _ _' ;
							
mysql> select name from user where  name like  '_ _ _ _' ;

mysql> select name from user where  name like  '%a%' ;	
	
mysql> select name from user where  name like  '_%_' ;

mysql> select name from user where  name like  '%_%' ;

mysql> select name from user where  name like  'a%' ;
	                  2   正则匹配  regexp   （把有共性特征的数据过滤出来）
					        ^ $  .  |   []  *					
		select  name  from  user   where    name  regexp  '^a' ;
 		
		select  name  from  user   where    name  regexp  't$' ;
		
		select  name  from  user   where    name  regexp  '^a|t$' ;
		
		select  name  from  user   where    name  regexp  '^a.*t$' ;
		
		select  name  from  user   where    name  regexp  '^at$' ;
	
  	
		select  name  from  user   where    name  regexp  '[0-9]' ;
		
		select  name  from  user   where    name  regexp  '^[0-9]' ;
		
		select  name  from  user   where    uid  regexp  '...' ;
		
		select  name  from  user   where    uid regexp  '^...$' ;
		
					四则计算   + - *  /  %
		select name  , uid  from  user  where       uid   %  2   =    0 ;
		select name  , uid  from  user  where       uid   %  2   !=    0 ;
			
		select  id  ,  name  ,uid   from user  where  id <= 5; 
		
		mysql> update  user  set uid = uid + 1 where id <= 5 ;
		
		mysql> update  user  set uid = uid - 1 where  id  <= 5 ;
		
mysql> select name , uid , gid ,  (uid + gid)/2  pjf  from  user  where id = 10 ;	

mysql> alter table  user  add  age  tinyint unsigned default 19 after name ;

mysql> select name , age from user;
	
mysql> select name , age ,  2020 -  age   csnf  from user  where name="root";
	
				休息到 16:30 
		
		3.3  操作查询结果（对查询出来的数据，再做一遍处理）
				    1  排序  order by   (按照查询结果的数据类型类型的列排序)
	mysql> select name , uid  from   user 
	where  uid >=10 and  uid <= 100 ;
	
	mysql> select name , uid  from   user
	where  uid >=10 and  uid <= 100  order by uid ;
	
	mysql> select name , uid  from   user 
	where  uid >=10 and  uid <= 100  order by uid  desc;	
	
					2  分组  group by 
	mysql> select  shell from  user where id <= 15  group by shell ;	

    select   部门  from  员工信息表  
	where   性别="女"  and  婚姻="否"  and  工资=20000  group by  部门 ；
	
					去重显示 :  distinct  列的查询数据重复出现时，只显示第1次出现的。
					mysql> select  gid  from user;
					mysql> select distinct gid  from user;
					
				    3  聚集函数  : 对数据做统计的命令 

mysql> select max(uid) , min(uid) , avg(uid) , sum(uid)  from user;
			
mysql> select  count(*) from user;	
	
mysql> select count(name)  from user where  shell="/sbin/nologin";

mysql> select max(工资) from 工资表 where  性别="女";
		
					4  对查找出来的数据做过滤 having 
mysql> select  name from  user where  id <=10 and shell="/bin/bash"  
having  name="mysql";

mysql> select  name from  user where  id <=10 and shell="/bin/bash"  
having  name="root";
								
					5 限制查询结果 显示行数  limit     【默认会显示所有查询结果】
	
					   只显示查询结果的前几行    select 查询命令  limit   数字；                   
mysql> select name ,uid , shell  from user where  id  <=10 ;
mysql> select name ,uid , shell  from user where  id  <=10   limit  1;
mysql> select name ,uid , shell  from user where  id  <=10   limit  3;		
			   
					   显示查询结果指定范围内的行
					select 查询命令  limit   数字1 ，数字2 ；
		             数字1  从查询结果的第几行开始显示
					 数字2   显示的总行数
mysql> select name ,uid , shell  from user where  id  <=10  limit 0 , 5 ;					 
mysql> select name ,uid , shell  from user where  id  <=10  limit 3 , 3 ;					 
mysql> select name ,uid , shell  from user where  id  <=10  limit 2 , 3 ;					 

四、安装图形管理工具
			连接数据库服务的连接方式： 命令行连接    访问图形工具 连接数据服务器   编写脚本连接
            可以管理数据库服务图形软件有哪些？
			安装phpmyadmin软件
			客户端访问软件管理数据库服务
            