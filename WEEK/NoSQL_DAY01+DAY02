7月11 号 上午 完成 mha 的配置	
7月11 号 下午  Nosql_day01 + day02(redis环境准备)

			   NoSQL  一类数据库服务软件的统称(非关系型数据库)
			   非关系型数据库的特点：不用建表  数据通过key  values方式存储
									 大多数软件是把数据存储在内存里
									 
			  非关系型数据库服务软件有哪些?					 
			  Memcached  Redis(学这个)  MogoDB

			  Redis  实现数据分布式存储的内存存储服务，同时能够实现数据的永久存储
					 也支持主从同步结构 也有集群结构 支持各种数据类型
						
搭建redis服务器 （在主机 192.168.4.51 上运行redis服务）
	具体步骤：
		1 安装软件
[root@host51 ~]# rpm -q gcc
未安装软件包 gcc 
[root@host51 ~]# yum  -y install gcc	
[root@host51 ~]# tar -zxvf redis-4.0.8.tar.gz 
[root@host51 ~]# cd redis-4.0.8
[root@host51 ~]# make
[root@host51 ~]# make install
	
		2 初始化配置
[root@host51 redis-4.0.8]# ./utils/install_server.sh   #执行shell 脚本
Welcome to the redis service installer
This script will help you easily set up a running redis server

Please select the redis port for this instance: [6379] 确认服务使用的端口
Selecting default: 6379
Please select the redis config file name [/etc/redis/6379.conf] 主配置文件
Selected default - /etc/redis/6379.conf
Please select the redis log file name [/var/log/redis_6379.log]  日志文件
Selected default - /var/log/redis_6379.log
Please select the data directory for this instance [/var/lib/redis/6379] 数据库目录
Selected default - /var/lib/redis/6379
Please select the redis executable path [/usr/local/bin/redis-server] 服务程序
Selected config: 输出确认的统计信息
Port           : 6379
Config file    : /etc/redis/6379.conf
Log file       : /var/log/redis_6379.log
Data dir       : /var/lib/redis/6379
Executable     : /usr/local/bin/redis-server
Cli Executable : /usr/local/bin/redis-cli   客户端连接命令
Is this ok? Then press ENTER to go on or Ctrl-C to abort.
Copied /tmp/6379.conf => /etc/init.d/redis_6379
Installing service...
Successfully added to chkconfig!
Successfully added to runlevels 345!  并设置了开机运行
Starting Redis server...  启动服务 
Installation successful!

              3  查看服务状态
				
[root@host51 redis-4.0.8]# ss -utnlp  | grep 6379  查看服务端口
tcp    LISTEN     0      128    127.0.0.1:6379                  *:*                   users:(("redis-server",pid=10453,fd=6))
[root@host51 redis-4.0.8]# 
		
		
		4 连接服务
[root@host51 ~]# redis-cli 
127.0.0.1:6379> 
 		
		5  存/读数据
127.0.0.1:6379> set school tarena   #存
OK
127.0.0.1:6379> keys *  #查看已经存储变量
1) "school"
127.0.0.1:6379> get school #获取变量值
"tarena"
127.0.0.1:6379> 
		
		6 断开连接
127.0.0.1:6379> exit

管理redis服务 
	停止服务
[root@host51 ~]# /etc/init.d/redis_6379 stop
Stopping ...
Redis stopped
[root@host51 ~]# /etc/init.d/redis_6379 status   #查看服务状态
cat: /var/run/redis_6379.pid: 没有那个文件或目录
Redis is running ()
[root@host51 ~]# 
[root@host51 ~]# /etc/init.d/redis_6379 start  启动服务
Starting Redis server...
[root@host51 ~]# /etc/init.d/redis_6379 status  #再查看状态
Redis is running (10479)
[root@host51 ~]# 
	
	  常用命令的使用（对已经存储的变量做管理）
	  set / get  
	  
	  mset / mget
[root@host51 ~]# redis-cli 
127.0.0.1:6379> keys *
1) "school"
127.0.0.1:6379> 
127.0.0.1:6379> mset  name bob  age 19  gender man
OK
127.0.0.1:6379> keys *
1) "name"
2) "gender"
3) "age"
4) "school"
127.0.0.1:6379> mget name  age  school
1) "bob"
2) "19"
3) "tarena"
127.0.0.1:6379> 
	
127.0.0.1:6379[1]> select 2  切换到2号库里
OK
127.0.0.1:6379[2]> keys *
(empty list or set)
127.0.0.1:6379[2]> mset a  1  b 2  c 3
OK
127.0.0.1:6379[2]> keys *
1) "a"
2) "c"
3) "b"
127.0.0.1:6379[2]>	
127.0.0.1:6379[2]> keys *
1) "a"
2) "c"
3) "b"
127.0.0.1:6379[2]> del a   删除变量a 
(integer) 1
127.0.0.1:6379[2]> keys *
1) "c"
2) "b"
127.0.0.1:6379[2]> 

127.0.0.1:6379[2]> MOVE c 0  把变量c移动到0号库里

127.0.0.1:6379> EXPIRE name 20  设置name变量的过期时间是20秒


127.0.0.1:6379> ttl name 
(integer) -2  #变量已经过期被删除

127.0.0.1:6379> ttl age
(integer) -1   表示变量没有设置过期时间
127.0.0.1:6379>
LNP+Redis (1台提供存储服务)

127.0.0.1:6379> FLUSHDB  清空所在库的所有数据
 
127.0.0.1:6379> FLUSHALL  清空内存里的所有数据


		修改服务使用的ip地址(默认是lo网卡的地址)
		注意修改了服务的ip地址 端口号 和 连接密码 中的任意一项配置后 ，都不能
		使用脚本停止服务，要写还有脚本停止服务需要修改脚本的代码不然就得使用命令
		停止服务
		
[root@host51 ~]# /etc/init.d/redis_6379 stop
[root@host51 ~]# vim /etc/redis/6379.conf		
port 6351  端口号
bind 192.168.4.51  服务使用ip地址
requirepass 123456  服务的连接密码
:wq

[root@host51 ~]# /etc/init.d/redis_6379 start
[root@host51 ~]# ss -utnlp | grep 6351
tcp    LISTEN     0      128    192.168.4.51:6351   *:*    users:(("redis-server",pid=10525,fd=6))
[root@host51 ~]# 
					
			修改配置之后的连接 
[root@host51 ~]# redis-cli -h 192.168.4.51  -p 6351 -a 123456
192.168.4.51:6351> keys *
(empty list or set)
192.168.4.51:6351>exit 

[root@host51 ~]# redis-cli -h 192.168.4.51  -p 6351 -a 123456   shutdown  使用命令停止服务

在脚本里调用停止服务的命令，就可以用脚本停止服务了 
[root@host51 ~]# vim  /etc/init.d/redis_6379
 43     $CLIEXEC -h 192.168.4.51 -p 6351 -a 123456  shutdown
:wq

/etc/init.d/redis_6379  start
/etc/init.d/redis_6379  stop   #可以使用脚本停止服务了 

二  LNP  +  redis服务    
（把网站的数据存储在内存服务器里）

	2.1  部署LNP （192.168.4.58）
			#  安装源码的nginx软件
  486  yum -y install gcc  pcre-devel  zlib-devel
  487  tar -zxvf nginx-1.12.2.tar.gz 
  488  cd nginx-1.12.2/
  489  ./configure 
  492  make 
  493  make install			
[root@host58 nginx-1.12.2]# ls /usr/local/nginx/
conf  html  logs  sbin
			
			#  安装php
[root@host58 ~]# yum -y install  php  php-fpm  php-devel

			#  启动服务
[root@host58 ~]# vim +65 /usr/local/nginx/conf/nginx.conf			
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000; #把访问php网页的请求给本机的9000端口
            fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi.conf;
        }
:wq

[root@host58 ~]# /usr/local/nginx/sbin/nginx  
[root@host58 ~]# netstat  -utnlp  | grep  80
tcp        0      0 0.0.0.0:80              0.0.0.0:*   LISTEN      17107/nginx: master
		
[root@host58 ~]# netstat  -utnlp  | grep  9000
tcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      17055/php-fpm: mast 
[root@host58 ~]# 			
			#  编写php脚本
[root@host58 ~]# vim /usr/local/nginx/html/test.php
<?php
echo  "hello world!!!";
?>
:wq
			
			#  访问网站php脚本
[root@host58 ~]# curl  http://localhost/test.php
hello world!!!


2.2 把数据存储在redis服务器里 ，具体配置如下：
		# 在网站服务器安装连接redis服务的模块
[root@host58 ~]# rpm -q gcc  || yum -y install gcc
gcc-4.8.5-28.el7.x86_64
[root@host58 ~]# 
[root@host58 ~]# tar -zxvf redis-cluster-4.3.0.tgz
[root@host58 ~]# cd redis-4.3.0/
[root@host58 redis-4.3.0]# phpize 
Configuring for:
PHP Api Version:         20100412
Zend Module Api No:      20100525
Zend Extension Api No:   220100525
[root@host58 redis-4.3.0]# 
[root@host58 redis-4.3.0]# ./configure --with-php-config=/usr/bin/php-config
[root@host58 redis-4.3.0]# make
	
[root@host58 redis-4.3.0]# make install
Installing shared extensions:     /usr/lib64/php/modules/  模块的安装位置
[root@host58 redis-4.3.0]# 
[root@host58 redis-4.3.0]# ls /usr/lib64/php/modules/ 查看模块文件redis.so
curl.so  fileinfo.so  json.so  phar.so  redis.so  zip.so
[root@host58 redis-4.3.0]# 

		# 配置php进程调用模块
		
]# vim +728  /etc/php.ini		
extension_dir = "/usr/lib64/php/modules/"  #模块的存放目录
extension = "redis.so"   #模块名
:wq

[root@host58 redis-4.3.0]# systemctl  restart php-fpm
[root@host58 redis-4.3.0]# 
[root@host58 redis-4.3.0]# php  -m   | grep redis   查看支持的模块
redis
[root@host58 redis-4.3.0]#

		# 编写存储数据的php脚本 ，并访问脚本
		
vim  /usr/local/nginx/html/set.php
<?php
$redis = new redis(); //定义连接命令

$redis->connect("192.168.4.51","6351"); #连接redis服务器

$redis->auth("123456"); #连接密码

$redis->set("address","beijing"); #存储数据
$redis->set("mail","plj@tedu.cn");#存储数据

echo  "save ok"; #提示信息
?>   
:wq

~]# curl http://192.168.4.58/set.php
save ok 
		
		# 在redis服务器本机，命令行登录，查看数据（看到php脚本存储的数据为成功）
		
[root@host51 ~]# redis-cli  -h 192.168.4.51 -p 6351 -a 123456
192.168.4.51:6351> keys *
1) "address"
2) "mail"
192.168.4.51:6351> mget address mail
1) "beijing"
2) "plj@tedu.cn"
192.168.4.51:6351> 
		





