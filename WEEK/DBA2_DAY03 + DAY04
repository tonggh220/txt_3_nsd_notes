数据分片（也称为分库分表）

网上购物的账号 
				14亿人口   （排除老人 小孩   不会上网的人 ） 还能剩下 7亿网民
购物网站；  会使用1台数据库服务器的1张表存储所有的注册账号吗 ？
京东
天猫
拼多多

分库分表： 把存储在1台数据库服务器的里的数据 分别存储到多台数据库服务器的表里，
来解决单台数据库服务器的访问压力和存储空间不足的问题。

分库分表分割方式：
			水平分割： 把1张表的的记录分别存储到不同服务器的表里
			垂直分割： 把不同业务类型的数据，放到不同的数据库服务器存储
			

mysql 中间件 MyCat 软件提供分库分表服务：软件开发者 写好10种分配规则	


分库分表存储结构的拓扑
		50 客户端端
		58 分库分表服务器 （之前 实验 maxscale  停止即可）
		53、54、55  数据库服务器  （要是独立的数据库服务器  彼此之间没有主从关系）
		
MYCAT 服务的工作原理？

		具体配置步骤如下：
				1 配置读写分离服务器58
						1.1  安装软件mycat
[root@host58 ~]# tar -zxvf Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz
[root@host58 ~]# mv mycat  /usr/local/
[root@host58 ~]# ls /usr/local/mycat/
bin  catlet  conf  lib  logs  version.txt
[root@host58 ~]# 

[root@host58 mycat]# echo  "host58" > /etc/hostname
[root@host58 mycat]# vim /etc/hosts
127.0.0.1  host58 .....
:wq

[root@host58 mycat]# yum -y install  java-1.8.0-openjdk-1.8.0.161-2.b14.el7.x86_64

					
						1.2  修改配置文件
							  1.2.1  配置连接Mycat服务使用的用户名和密码及权限和虚拟库名
							  
xml  扩张标记语言		配置项要成对出现 且要有开始和对应的闭合
注释符号  <!--        -->
					  
[root@host58 mycat]# vim /usr/local/mycat/conf/server.xml 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mycat:server SYSTEM "server.dtd">
<mycat:server xmlns:mycat="http://io.mycat/">
        <user name="root"> 用户名
                <property name="password">123456</property> 密码
                <property name="schemas">TESTDB</property> 虚拟库名
        </user>
        
        <user name="user">
                <property name="password">user</property>
                <property name="schemas">TESTDB</property>
                <property name="readOnly">true</property> 只读(select)
        </user> 
</mycat:server>
						1.2.2 指定对哪些表的数据做分片存储
						
[root@host58 mycat]# cp  /usr/local/mycat/conf/schema.xml  /root/	
[root@host58 mycat]# sed  -i  '56,77d' /usr/local/mycat/conf/schema.xml
					
[root@host58 mycat]# vim /usr/local/mycat/conf/schema.xml						
<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">
<mycat:schema xmlns:mycat="http://io.mycat/">
	
	#定义分片存储数据的表名
	<schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100">
			#<table>....</table> 指定表信息的标签（双标签）
			#<table ....  />指定表信息的标签（单标签）
			
            <table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile" />
            
			<table name="goods" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />

            <table name="customer" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile">
		
	</schema>

	#指定数据库服务器的主机名及用来存储数据的库名
	
        <dataNode name="dn1" dataHost="mysqla" database="db1" />
        <dataNode name="dn2" dataHost="mysqlb" database="db2" />
        <dataNode name="dn3" dataHost="mysqlc" database="db3" />

	
	#指定主机名对应的数据库服务器的ip地址
 <dataHost name="mysqla" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM1" url="192.168.4.53:3306" user="adminplj" password="123qqq...A">
                </writeHost>
       </dataHost>

       <dataHost name="mysqlb" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM2" url="192.168.4.54:3306" user="adminplj" password="123qqq...A">
                </writeHost>
       </dataHost>	
	   
	    <dataHost name="mysqlc" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM3" url="192.168.4.55:3306" user="adminplj" password="123qqq...A">
                </writeHost>
       </dataHost>
	
</mycat:schema>
:wq
				
				2  配置数据库服务器 53 、54 、55
						2.1 创建存储数据的库并 添加授权用户
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'create database db1'
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.*  to adminplj@"%" identified by "123qqq...A"'

[root@host54 mysql]# mysql -uroot -p123qqq...A -e 'create database db2'
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.*  to adminplj@"%" identified by "123qqq...A"'

[root@host55 ~]# mysql -uroot -p123qqq...A -e 'create database db3'
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.*  to adminplj@"%" identified by "123qqq...A"'
						
3  启动58主机的mycat服务    
[root@host58 mycat]# /usr/local/mycat/bin/mycat start				
[root@host58 ~]# netstat  -utnlp  | grep  8066
tcp6       0      0 :::8066                 :::*                    LISTEN      1533/java           
[root@host58 ~]#				
	
查看错误信息 [root@host58 ~]# vim /usr/local/mycat/logs/wrapper.log

	
				4   客户端连接 58  查看库和表 
host50]#  mysql   -h192.168.4.58  -u用户   -p密码
]# mysql -h192.168.4.58 -P8066  -uroot -p123456
mysql> show databases;  #看到了虚拟库
+----------+
| DATABASE |
+----------+
| TESTDB   |
+----------+
1 row in set (0.00 sec)

mysql> use  TESTDB;
mysql> show tables;  #看到了虚拟表
+------------------+
| Tables in TESTDB |
+------------------+
| company          |
| customer         |
| customer_addr    |
| employee         |
| goods            |
| hotnews          |
| orders           |
| order_items      |
| travelrecord     |
+------------------+
9 rows in set (0.00 sec)

mysql> 

				
	
				5   分片规则的使用（常用的水平分割 分片规则的使用）
					5.1  sharding-by-intfile 枚举分片规则
					     计算规则：表中分片字段的值 必须在指定配置文件的内容里选择

					5.2  mod-long  求模分片规则
						计算规则： 把表中分片字段的值与指定的数字做取余计算，根据计算结果存储数据
					
					查看那张表使用分片规则  vim  schema.xml
<table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3"   rule="sharding-by-intfile" />
                          

<table name="hotnews"  dataNode="dn1,dn2,dn3"  rule="mod-long" />
                           
						   
					
					查看分片规则要求表必须创建的字段名  rule.xml
		<tableRule name="sharding-by-intfile">   分片规则名
                <rule>
                        <columns>sharding_id</columns>  分片字段名
                        <algorithm>hash-int</algorithm> 计算规则（算法）
                </rule>
        </tableRule>
		
		

		<tableRule name="mod-long"> 分片规则名
                <rule>
                        <columns>id</columns>  分片字段名
                        <algorithm>mod-long</algorithm>  计算规则（算法）
                </rule>
        </tableRule>	


		
					查看分片规则使用的算法
					
<function name="hash-int"  #hash-int算法
                class="io.mycat.route.function.PartitionByFileMap"> 算法调用的java程序
                <property name="mapFile">partition-hash-int.txt</property> 分pain规则配置文件
        </function>

[root@host58 ~]# vim  /usr/local/mycat/conf/partition-hash-int.txt  （修改文件内容 要重启服务）
10000=0   #0代表 dn1
10010=1    # 1 代表dn2
10020=2   #2  代表 dn3   （自己手动添加）
:wq										

[root@host58 ~]# /usr/local/mycat/bin/mycat  restart
Stopping Mycat-server...
Stopped Mycat-server.
Starting Mycat-server...
[root@host58 ~]#

 <function name="mod-long" class="io.mycat.route.function.PartitionByMod">  算法调用的程序
                <!-- how many data nodes -->
                <property name="count">3</property> 指定取余的数字
        </function>

					
					
					
					根据分配规则建表存储数据
[root@host54 ~]# mysql -h192.168.4.58 -P8066  -uroot -p123456
mysql> use TESTDB;
mysql> create table employee(ID  int primary key auto_increment,sharding_id  int ,
    -> name char(10),sex  enum("m","w"));
Query OK, 0 rows affected (0.85 sec)

mysql> desc employee;
+-------------+---------------+------+-----+---------+----------------+
| Field       | Type          | Null | Key | Default | Extra          |
+-------------+---------------+------+-----+---------+----------------+
| ID          | int(11)       | NO   | PRI | NULL    | auto_increment |
| sharding_id | int(11)       | YES  |     | NULL    |                |
| name        | char(10)      | YES  |     | NULL    |                |
| sex         | enum('m','w') | YES  |     | NULL    |                |
+-------------+---------------+------+-----+---------+----------------+
4 rows in set (0.01 sec)

mysql> 
mysql> insert into employee(sharding_id,name,sex)values(10030,"bob","m");
ERROR 1064 (HY000): can't find any valid datanode :EMPLOYEE -> SHARDING_ID -> 10030
mysql> 
mysql> insert into employee(sharding_id,name,sex)values(10000,"bob","m");
Query OK, 1 row affected (0.03 sec)

mysql> insert into employee(sharding_id,name,sex)values(10010,"bobA","m");
Query OK, 1 row affected (0.03 sec)

mysql> insert into employee(sharding_id,name,sex)values(10020,"bobc","m");
Query OK, 1 row affected (0.04 sec)

mysql> select  * from employee;
+----+-------------+------+------+
| ID | sharding_id | name | sex  |
+----+-------------+------+------+
|  1 |       10000 | bob  | m    |
|  1 |       10010 | bobA | m    |
|  1 |       10020 | bobc | m    |
+----+-------------+------+------+
3 rows in set (0.05 sec)

mysql> 

[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select  * from db3.employee'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------+------+------+
| ID | sharding_id | name | sex  |
+----+-------------+------+------+
|  1 |       10020 | bobc | m    |
+----+-------------+------+------+
[root@host55 ~]# 
[root@host54 ~]# mysql -uroot -p123qqq...A  -e 'select  * from db2.employee'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------+------+------+
| ID | sharding_id | name | sex  |
+----+-------------+------+------+
|  1 |       10010 | bobA | m    |
+----+-------------+------+------+
[root@host54 ~]# 
[root@host53 ~]# mysql -uroot -p123qqq...A  -e 'select  * from db1.employee'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------+------+------+
| ID | sharding_id | name | sex  |
+----+-------------+------+------+
|  1 |       10000 | bobA | m    |
+----+-------------+------+------+
[root@host54 ~]# 

]# mysql -h192.168.4.58 -P8066  -uroot -p123456					
mysql> use  TESTDB;
MySQL> 				
mysql> create table  hotnews(
    -> id  int  , title char(20) , worker  char(10) , comment varchar(200));
Query OK, 0 rows affected (0.66 sec)

mysql> insert into hotnews(id , title , worker , comment)
    -> values
    -> (7,"aa","aa","aaaaa"),(8,"bb","bb","bbbbb"),(9,"cc","ccc","ccccc");
Query OK, 3 rows affected (0.15 sec)

mysql> insert into hotnews(id , title , worker , comment) values (11,"dd","dd","dddd");
Query OK, 1 row affected (0.04 sec)

mysql> insert into hotnews(id , title , worker , comment) values (11,"dd","dd","dddd");
Query OK, 1 row affected (0.03 sec)

mysql> insert into hotnews(id , title , worker , comment) values (11,"dd","dd","dddd");

[root@host53 ~]# mysql -uroot -p123qqq...A -e 'select  * from db1.hotnews'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+-------+--------+---------+
| id   | title | worker | comment |
+------+-------+--------+---------+
|    9 | cc    | ccc    | ccccc   |
+------+-------+--------+---------+
[root@host53 ~]# 
[root@host54 ~]# mysql -uroot -p123qqq...A  -e 'select  * from db2.hotnews'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+-------+--------+---------+
| id   | title | worker | comment |
+------+-------+--------+---------+
|    7 | aa    | aa     | aaaaa   |
+------+-------+--------+---------+
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select  * from db3.hotnews'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+-------+--------+---------+
| id   | title | worker | comment |
+------+-------+--------+---------+
|    8 | bb    | bb     | bbbbb   |
|   11 | dd    | dd     | dddd    |
|   11 | dd    | dd     | dddd    |
|   11 | dd    | dd     | dddd    |
|   11 | dd    | dd     | dddd    |
+------+-------+--------+---------+
[root@host55 ~]# 
				
6    添加新库新表
						6.1 添加新库
[root@host58 ~]# vim /usr/local/mycat/conf/server.xml
        <user name="root">
                <property name="password">123456</property>
                <property name="schemas">TESTDB,BUYDB</property>
        </user>

        <user name="user">
                <property name="password">user</property>
                <property name="schemas">TESTDB,BUYDB</property>
                <property name="readOnly">true</property>
        </user>
:wq
						
						6.2 添加新表 
[root@host58 ~]# vim /usr/local/mycat/conf/schema.xml
.....
<mycat:schema xmlns:mycat="http://io.mycat/">

        <schema name="BUYDB" checkSQLschema="false" sqlMaxLimit="100">
                <table name="user" dataNode="dn1,dn2,dn3" rule="auto-sharding-long" />
                <table name="reg" dataNode="dn1,dn2,dn3" type="global" />
        </schema>

        <schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100">
        .....
:wq
						6.3  重启mycat服务
[root@host58 ~]# /usr/local/mycat/bin/mycat  restart
Stopping Mycat-server...
Stopped Mycat-server.
Starting Mycat-server...
[root@host58 ~]# 						
						6.4  客户端连接mycat服务
~]# mysql -h192.168.4.58 -P8066  -uroot -p123456
mysql> show databases;
+----------+
| DATABASE |
+----------+
| BUYDB    |
| TESTDB   |
+----------+
2 rows in set (0.01 sec)

mysql> use BUYDB
mysql> show tables;
+-----------------+
| Tables in BUYDB |
+-----------------+
| reg             |
| user            |
+-----------------+
2 rows in set (0.00 sec)

mysql> 
6.5  向新表里存储数据
							#根据分片规则建表 以 type='global'为例
mysql> create table  reg(mame  char(10) , pass  char(6));
Query OK, 0 rows affected (0.76 sec)
								#存储数据
mysql> insert into reg (mame,pass)values("bob","123456"),("tom","654321");
Query OK, 2 rows affected (0.09 sec)
						
						6.6  在数据库服务器本机查看数据
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'select  * from db1.reg'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+--------+
| mame | pass   |
+------+--------+
| bob  | 123456 |
| tom  | 654321 |
+------+--------+
[root@host53 ~]#					
[root@host54 ~]# mysql -uroot -p123qqq...A  -e 'select  * from db2.reg'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+--------+
| mame | pass   |
+------+--------+
| bob  | 123456 |
| tom  | 654321 |
+------+--------+
[root@host54 ~]# 
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select  * from db3.reg'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+--------+
| mame | pass   |
+------+--------+
| bob  | 123456 |
| tom  | 654321 |
+------+--------+
[root@host55 ~]#				






mha集群	
	
7月4 号  Nosql_day01 + day02 