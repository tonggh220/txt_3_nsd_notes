dba2_day01
	mysql主从同步结构的配置
		 1 mysql主从同步介绍
				是对数据做存储的服务架构，由2种角色的mysql服务器组成分别是：
				
				主（master）数据库服务器 ： 接受客户端连接的服务器
				从（slave）数据库服务器：   自动同步主服务器数据的服务器
				
				
		主从同步的工作原理（背诵）
				
		
		 2 主从同步结构模式： 一主一从  一主多从    主从从  主主结构 
			
		
		 3 配置主从同步的步骤：
				主服务器必须要做的配置： 必须启用binlog日志    必须做用户授权    查看binlog日志信息
				
				从服务器必须要做的配置： 没有成为从服务器之前必须和主服务完全数据一致 
										 指定server_id 
										 指定主服务器的信息（数据库管理员root用户有权限指定）
										 启动slave进程
										 查看SQL线程 和 IO线程的状态（要同时是YES状态 才是配置成功） 
										 
		 3 配置MySQL主从同步结构
				3.1 一主一从结构 ***  例子1 
									   把数据库服务器 192.168.4.52 配置为 数据库服务器 192.168.4.51 的从服务器
									   具体配置如下：
									   
				主数据库服务器 192.168.4.51 的配置
					1 必须启用binlog日志    
[root@host51 ~]# vim /etc/my.cnf
[mysqld]
server_id=51
log_bin=master51
:wq

[root@host51 ~]# 
[root@host51 ~]# systemctl  restart mysqld
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'show master status'
mysql: [Warning] Using a password on the command line interface can be insecure.
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      154 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
[root@host51 ~]# 
[root@host51 ~]# ls /var/lib/mysql/master51.*
/var/lib/mysql/master51.000001  /var/lib/mysql/master51.index
[root@host51 ~]#					
					2 必须做用户授权 
[root@host51 ~]# mysql -uroot -p123qqq...A
mysql> grant  replication slave  on *.*  to repluser@"%"  identified by "123qqq...A";

					
					3  查看binlog日志信息
mysql> show master status;
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |      441 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> 
					
				
				从数据库服务器192.168.4.52 的配置
										 1 没有成为从服务器之前必须和主服务完全数据一致
											如果主服务器的数据比从的数据多
											在主服务器对数据做完全备份，把备份文件拷贝给从服务器
											从服务器使用备份文件恢复数据即可
											

]# vim /etc/my.cnf										 2指定server_id 
[mysqld]
server_id=52
:wq 		 
[root@host52 ~]# systemctl  restart mysqld
										 
										 3指定主服务器的信息（数据库管理员root用户有权限指定）
[root@host52 ~]# mysql -uroot -p123qqq...A 
mysql> change master to  master_host="192.168.4.51" , master_user="repluser" ,  master_password="123qqq...A" , master_log_file="master51.000001" , master_log_pos=441 ;
Query OK, 0 rows affected, 2 warnings (0.33 sec)

										 4启动slave进程
										 mysql> start slave ;

										 5查看SQL线程 和 IO线程的状态（要同时是YES状态 才是配置成功）
			mysql> show  slave status \G
			Slave_IO_Running: Yes
            Slave_SQL_Running: Yes

										 
		 测试主从同步的配置
				1 在主数据库服务器 建库 建表 插入记录
				[root@host51 ~]# mysql -uroot -p123qqq...A
mysql> create database  db1;
mysql> create table db1.a(id int);
mysql> insert into db1.a values(101)；
mysql> insert into db1.a values(102);
mysql> select  * from db1.a;
+------+
| id   |
+------+
|  101 |
|  102 |
+------+
				
				2 在从服务器本机可以查看到同样的库表和记录
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'select * from db1.a'
+------+
| id   |
+------+
|  101 |
|  102 |
+------+
				
##############################################################################							   
									   
				3.2 一主多从结构 ***
把数据库服务器53 也配置为 51 的  从数据库服务器192
				具体配置：
						1 53 主机启动mysqld 服务  并且管理员能本机登录服务
						2 53 主机 查看没有成为从服务器之前 要与主数据库服务器数据一致
						   如果 53 比 51 的数据少的话，在主服务器对数据做备份，然后把
						备份文件拷贝给 从服务器53  然后53 使用备份文件恢复数据
						
						[root@host51 ~]# mysqldump -uroot -p123qqq...A  -B game  > /root/game.sql
						[root@host51 ~]# scp /root/game.sql 192.168.4.53:/root/

[root@host53 ~]# ls /root/*.sql
/root/game.sql
[root@host53 ~]# mysql -uroot -p123qqq...A < /root/game.sql
mysql: [Warning] Using a password on the command line interface can be insecure.
[root@host53 ~]# 

[root@host53 ~]# mysql -uroot -p123qqq...A				
mysql> select  * from game.user;

					  修改配置文件指定server_id


					vim /etc/my.cnf
					[mysqld]
					 server_id=53
					:wq
					
				  ]# systemctll restart  mysqld
				  
					 3  53 主机管理员登录指定主服务器信息
							首先在51 主机查看binlog日志文件名和偏移量
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'show master status'
mysql: [Warning] Using a password on the command line interface can be insecure.
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master51.000001 |     2811 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
[root@host51 ~]# 							
							 再使用change master to  命令指定主服务器信息
[root@host53 ~]# mysql -uroot -p123qqq...A
mysql> change master to master_host="192.168.4.51" , 
master_user="repluser",
master_password="123qqq...A",
master_log_file="master51.000001",
master_log_pos=2811;
mysq> start slave;
mysql> show slave status \G
	        Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
		

 ###########################################################################################   
				3.3 主从从结构

				     结构   53 （主）  ----- 54（从） -----  55 （从）
					 
					 55主机是 54 的从服务器 
					 
					 54主机是 53 的从服务器
					 
					 53主机是 54 的主服务器
			
				第1个知识点：如何把从服务器 恢复为独立的数据库服务器？
				诉求 ： 把一主多从结构里的 53 主机恢复为独立的数据库服务器，
			然后使用53 主机和 54 55 做主从从 结构实验
			
			在53主机做如下操作：
[root@host53 ~]# cd /var/lib/mysql     查看与从(slave)角色相关的文件
[root@host53 mysql]# ls master.info   #记录主(master)服务器的信息
master.info
[root@host53 mysql]# cat master.info  #存储的是change master to 命令的执行结果



[root@host53 mysql]# hostname
host53
[root@host53 mysql]# ls host53*    #查看本机中继日志文件
host53-relay-bin.000001  host53-relay-bin.000002  host53-relay-bin.index


[root@host53 mysql]# cat host53-relay-bin.index 
./host53-relay-bin.000001
./host53-relay-bin.000002
[root@host53 mysql]#   			
[root@host53 mysql]# mysqlbinlog host53-relay-bin.000002	
		
[root@host53 mysql]# ls relay-log.info  #记录中继日志信息
relay-log.info					 
				
[root@host53 mysql]# cat relay-log.info	

[root@host53 mysql]# rm -rf  master.info  relay-log.info  host53-relay-bin.*
[root@host53 mysql]# systemctl  restart mysqld
[root@host53 mysql]# mysql -uroot -p123qqq...A 
mysql> show slave status \G    #没有从的配置了 
Empty set (0.00 sec)
mysql>  drop   database  game ; #快速实现数据一致 (53  54 55)

  
				
				准备新的数据库服务器（确保主机54 和 55  运行mysqld服务  管理员root能够登录)
				
				环境准备完毕
			
				主从从结构配置如下：
						1 配置主数据库服务器53 
							#启用binlog日志
							host53]#  vim /etc/my.cnf	
							[mysqld]
							server_id=53
							lob_bin=master53
							:wq
							]#systemctl  restart  mysqld
							
							
							#用户授权
							]# mysql  -uroot   -p密码
							mysql>  grant  replication slave  on  *.*
									to   repluser@"%" identified by "123qqq...A";
							
							
							#查看日志信息
							mysql> show  master status  #给从服务器使用



						2 配置主数据库服务器54

						2 配置主数据库服务器54
							  2.1 修改配置文件并重启mysqld服务
							   ]# vim /etc/my.cnf
[mysqld]
server_id=54
log_bin=master54
:wq
]# systemctl restart mysqld					
							 2.2 54 做主数据库服务器的配置
[root@host54 ~]# mysql -uroot -p123qqq...A	
mysql> grant  replication  slave on  *.*  to   
repluser1@"%" identified by "123qqq...A";						 

mysql>  show  master status ;   #给从服务器 55 使用的 
+-----------------+----------+--------------+------------------+-------------------+
| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-----------------+----------+--------------+------------------+-------------------+
| master54.000001 |      442 |              |                  |                   |
+-----------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> 
							  
							  2.3 54 做从数据库服务器的配置
mysql>  change master to master_host="192.168.4.53" ,  master_user="repluser" , 
master_password="123qqq...A" , master_log_file="master51.000001",master_log_pos=441;
Query OK, 0 rows affected, 2 warnings (0.26 sec)

mysql> start slave;
Query OK, 0 rows affected (0.02 sec)

mysql> show slave status \G
      Slave_IO_Running: Yes
            Slave_SQL_Running: Yes

						 			  
											
						3 配置从数据库服务器55	
								3.1  指定server_id并重启mysqld服务
]# vim /etc/my.cnf						
[mysqld]
server_id=55
:wq

]# systemctl restart mysqld

							
								3.2  管理员root 登录指定主服务器信息
[root@host55 ~]# mysql -uroot -p123qqq...A
mysql> change master to  master_host="192.168.4.54" , 
master_user="repluser1" , master_password="123qqq...A",
master_log_file="master54.000001",master_log_pos=442;
Query OK, 0 rows affected, 2 warnings (0.27 sec)
								
								3.3  启动slave进程
mysql> start slave;
Query OK, 0 rows affected (0.01 sec)
								
								3.4  查看状态信息
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'show slave status \G'| grep  -i 'yes'
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host55 ~]# 
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'show slave status \G'| grep  -i '192.168.4.54'
mysql: [Warning] Using a password on the command line interface can be insecure.
                  Master_Host: 192.168.4.54
[root@host55 ~]# 								
					

				测试配置 ：

[root@host53 ~]# mysql -uroot -p123qqq...A    # 在主服务器 53 创建新库新表插入记录
mysql> create database bbs;
mysql> create table bbs.a(id int)；
mysql> insert into bbs.a values(101);
mysql> insert into bbs.a values(102);
mysql> select * from bbs.a;
+------+
| id   |
+------+
|  101 |
|  102 |
+------+

# 在53的从服务器可以查看到 一样的数据
[root@host54 ~]# mysql -uroot -p123qqq...A -e 'select  * from bbs.a'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|  101 |
|  102 |
+------+
[root@host54 ~]#

# 在54的从服务器 55上 也能够查看到一的数据。
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select  * from bbs.a'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| id   |
+------+
|  101 |
|  102 |
+------+



	3.4 主主结构
					需求  把主机  56 配置为 57主  ，再把56配置为57的从
					课后练习 自己完成
					
					验证的结果：
					56  57 都启用了binlog日志
					56  57 都能查看到 slave进程的状态(IO线程和SQL线程都是YES 状态)
		
                主从同步复制模式（自己看视屏）

				
###########################################################################
MySQL多实例 
			在一台物理服务器上运行多个数据库服务。
			
			目的：提高硬件的利用率；节约运维成本 。

	
	准备工作：克隆1台新的虚拟机IP192.168.4.58   不需要安装任何版本的MySQL服务软件
	把软件 mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz 拷贝虚拟机  并解压
	  
	 
		安装提高多实例服务的mysql源码软件
[root@host58 ~]# tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz
[root@host58 ~]# mv mysql-5.7.20-linux-glibc2.12-x86_64 /usr/local/mysql
[root@host58 ~]# ls /usr/local/mysql/
bin  COPYING  docs  include  lib  man  README  share  support-files
[root@host58 ~]# 
	
		把源码包提高的数据库管理命令的路径添加到系统环境PATH变量里，便于我们对命令的使用
]# vim /etc/bashrc 		
export PATH=/usr/local/mysql/bin:$PATH  #在文件末尾添加
:wq

[root@host58 ~]# source /etc/bashrc 
[root@host58 ~]# echo $PATH
/usr/local/mysql/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
[root@host58 ~]# 
[root@host58 ~]# mysql 按2次tab键盘  可以补全所有mysql开头的命令

	配置在58主机运行2个mysqld服务
	需要自己创建配置文件并编辑内容
	
	[root@host58 ~]# ls /etc/my.cnf
ls: 无法访问/etc/my.cnf: 没有那个文件或目录
[root@host58 ~]# 
[root@host58 ~]# vim /etc/my.cnf
#多实例服务的运行配置
[mysqld_multi]
user = root 
mysqld = /usr/local/mysql/bin/mysqld_safe
mysqladmin=/usr/local/mysql/bin/mysqladmin



#socket文件  在数据库服务连接数据库服务时，通过socket建立连接
[mysqld1] #定义编号为1 的实例服务
datadir = /dir1
port = 3308
pid-file =  /dir1/mysqld1.pid
log-error = /dir1/mysqld1.err
socket = /dir1/mysqld1.sock

[mysqld2] # 定义编号为2 的实例服务
socket = /dir2/mysqld2.sock    
datadir = /dir2
port = 3309
pid-file = /dir2/mysqld2.pid
log-error = /dir2/mysqld2.err
:wq

#####################################################
启动实例的准备工作
				[root@host58 ~]# rpm -q libaio ||  yum -y install libaio   #安装依赖
		
				[root@host58 ~]# id mysql || useradd mysql  #检查都没有mysql用户自动添加
id: mysql: no such user
[root@host58 ~]# grep  mysql /etc/passwd
mysql:x:1000:1000::/home/mysql:/bin/bash
[root@host58 ~]# 

		启动实例1 数据库服务  （就是配置文件/etc/my.cnf  的 [mysqld1]  ）
		
[root@host58 ~]# mysqld_multi start 1      


Installing new database in /dir1

2021-06-27T08:07:56.601797Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2021-06-27T08:07:58.663520Z 0 [Warning] InnoDB: New log files created, LSN=45790
2021-06-27T08:07:59.044010Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
2021-06-27T08:07:59.231987Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: c95e3f0f-d71e-11eb-afe4-5254007a8499.
2021-06-27T08:07:59.288050Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
2021-06-27T08:07:59.289369Z 1 [Note] A temporary password is generated for root@localhost: wRr4DM#c5ll7
[root@host58 ~]# 
[root@host58 ~]# ls /dir1
auto.cnf        ibdata1      ib_logfile1  mysql        mysqld1.pid   mysqld1.sock.lock   sys
ib_buffer_pool  ib_logfile0  ibtmp1       mysqld1.err  mysqld1.sock  performance_schema
[root@host58 ~]# 
[root@host58 ~]# ss  -utnlp  | grep  :3308
tcp    LISTEN     0      80       :::3308                 :::*                   users:(("mysqld",pid=1337,fd=20))
[root@host58 ~]# 

			#使用随机创建的密码  连接本机实例1服务
			]# mysql  -uroot  -p'wRr4DM#c5ll7'  -S /dir1/mysqld1.sock
mysql> alter user root@"localhost" identified by "123456"; 休息密码
Query OK, 0 rows affected (0.00 sec)

mysql> SHOW  databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database db1;  创建新库
Query OK, 1 row affected (0.00 sec)

mysql> exit 断开连接
Bye
[root@host58 ~]# ls /dir1  查看到数据库db1的目录
auto.cnf  ib_buffer_pool  ib_logfile0  ibtmp1  mysqld1.err  mysqld1.sock       performance_schema
db1       ibdata1         ib_logfile1  mysql   mysqld1.pid  mysqld1.sock.lock  sys
[root@host58 ~]#
[root@host58 ~]# mysql  -uroot  -p123456  -S /dir1/mysqld1.sock  使用新密码登录	


			启动实例2 数据库服务  （就是配置文件/etc/my.cnf  的 [mysqld2]  ）
[root@host58 ~]# mysqld_multi  start 2


Installing new database in /dir2

2021-06-27T08:16:02.085080Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2021-06-27T08:16:04.517265Z 0 [Warning] InnoDB: New log files created, LSN=45790
2021-06-27T08:16:04.823685Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
2021-06-27T08:16:04.887444Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: ead7637a-d71f-11eb-8218-5254007a8499.
2021-06-27T08:16:04.900484Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
2021-06-27T08:16:04.901137Z 1 [Note] A temporary password is generated for root@localhost: fez(jhtxX8j<
[root@host58 ~]# 
[root@host58 ~]# mysql -uroot -p'fez(jhtxX8j<'
mysql> alter user root@"localhost"  identified by "654321";
mysql> create database db2;
mysql> exit
Bye
[root@host58 ~]# 		

		现在58主机有2个mysqld进程
[root@host58 ~]# ps -C  mysqld
  PID TTY          TIME CMD
 1337 pts/0    00:00:00 mysqld
 1538 pts/0    00:00:00 mysqld
[root@host58 ~]# 		

[root@host58 ~]# netstat  -utnlp  | grep 3308
tcp6       0      0 :::3308                 :::*                    LISTEN      1337/mysqld         
[root@host58 ~]# 
[root@host58 ~]# netstat  -utnlp  | grep 3309
tcp6       0      0 :::3309                 :::*                    LISTEN      1538/mysqld         
[root@host58 ~]#

		停止本机的实例服务
[root@host58 ~]# mysqld_multi  --user=root --password=123456  stop 1
[root@host58 ~]# netstat  -utnlp  | grep 3308
[root@host58 ~]# netstat  -utnlp  | grep 3309
tcp6       0      0 :::3309                 :::*                    LISTEN      1538/mysqld         
[root@host58 ~]# 
[root@host58 ~]# mysqld_multi  --user=root --password=654321  stop 2
[root@host58 ~]# netstat  -utnlp  | grep 3309
[root@host58 ~]# 		

				
									   
	MySQL数据读写分离 
			定义：把对数据库服务的查询访问select 和存储数据的访问insert 分别
			给不同的数据库服务器处理
			
			
			
			数据读写分离的目的是什么？减轻服务的并发访问压力 
			
			如何实现： 
					1 通常程序员写代码实现 （指定类型访问 连接固定的数据库器 ）
					2 安装第3软件提供的读写分离服务实现（程序在脚本存储设查数据连接）
					的不是数据库服务器本机，而是配置的数据读写分离服务器）
					
			MySQL中间件（架设在客户端和数据库直接的软件，能够提高不通的服务功能）
					实现数据读写分离的软件: mysql-proxy   maxscale   mycat 
					
			配置MySQL数据读写分离：
				一、配置存储数据的一主一从同步结构
				      1 配置51 主数据库服务器
					  
					  2 配置52 从数据库服务器
	
				检查之前51 和 52 的主从配置是否正常
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'show slave status \G' | grep -i 'yes'
mysql: [Warning] Using a password on the command line interface can be insecure.
             Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
[root@host52 ~]# 
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'show slave status \G' | grep -i 'master_host'
mysql: [Warning] Using a password on the command line interface can be insecure.
                  Master_Host: 192.168.4.51
[root@host52 ~]#				
	
	
				二、在58 主机配置读写分离服务，具体步骤如下：
					注 用58做个多实例的实验，把多实例服务全都停止就可以了
				
					1 安装软件
[root@host58 ~]# ls maxscale-2.1.2-1.rhel.7.x86_64.rpm 
maxscale-2.1.2-1.rhel.7.x86_64.rpm
[root@host58 ~]# yum -y install maxscale-2.1.2-1.rhel.7.x86_64.rpm 					
	
					2 根据拓扑结构修改配置文件
					[root@host58 ~]# vim /etc/maxscale.cnf
[maxscale]  #指定maxscale服务启动后线程的数量
threads=auto					
					
[server1]   #指定第1台数据库服务器的ip地址和名称
type=server
address=192.168.4.51
port=3306
protocol=MySQLBackend

[server2]  #指定第2台数据库服务器的ip地址和名称
type=server
address=192.168.4.52
port=3306
protocol=MySQLBackend

[MySQL Monitor]  
type=monitor
module=mysqlmon
servers=server1,server2  #监视数据库服务器server 和server2
user=mysqla  #(监控用户)监视数据库服务器时连接数据库服务的用户名
passwd=123qqq...A  #连接密码
monitor_interval=10000

#[Read-Only Service]
#type=service
#router=readconnroute
#servers=server1
#user=myuser
#passwd=mypwd
#router_options=slave


[Read-Write Service]  #定义读写分离服务
type=service
router=readwritesplit
servers=server1,server2   #指定读写分离服务在server1和server2 之间进行
user=mysqlb  #（路由用户） 检查数据库服务器是否创建了客户端连接数据库服务时使用的用户
passwd=123qqq...A  #密码
max_slave_connections=100%

[MaxAdmin Service]  定义管理服务
type=service
router=cli

#[Read-Only Listener]  #因为只读服务没有定义  所有不需要指定指定服务监听的端口号
#type=listener
#service=Read-Only Service
#protocol=MySQLClient
#port=4008

[Read-Write Listener]   #定义读写分离服务使用的端口号
type=listener
service=Read-Write Service
protocol=MySQLClient
port=4006    #使用默认配置的端口  4006

[MaxAdmin Listener]   #定义管理服务使用的端口
type=listener
service=MaxAdmin Service
protocol=maxscaled
socket=default
port=4016   #定义端口  没有使用默认的






根据maxscle.cnf文件的配置 在数据库服务器创建对应的用户
注 在主数据库服务器51 添加  从服务器52 会自动同步用户
mysqla 监控用户   123qqq...A
mysqlb 路由用户   123qqq...A

mysql> grant  replication slave , replication client  on  *.*  to  mysqla@"%" identified by "123qqq...A";

mysql> grant select on  mysql.* to  mysqlb@"%" identified by "123qqq...A";

在从服务器查看用户 
mysql> select user from mysql.user ;
+-----------+
| user      |
+-----------+
| mysqla    |
| mysqlb    |
| mysql.sys |
| root      |
+-----------+

启动服务 
[root@host58 ~]# maxscale /etc/maxscale.cnf  启动maxscale服务
    #停止服务的命令     pkill -9  maxscale 
[root@host58 ~]# 
[root@host58 ~]# netstat  -utnlp  | grep 4006    # 查看配置文件定义的读写分离服务使用的端口
tcp6       0      0 :::4006                 :::*                    LISTEN      5752/maxscale       
[root@host58 ~]# 
[root@host58 ~]# netstat  -utnlp  | grep 4016  #查看配置文件中 管理服务使用的端口
tcp6       0      0 :::4016                 :::*                    LISTEN      5752/maxscale       
[root@host58 ~]# 
[root@host58 ~]# ls /var/log/maxscale/  日志文件存放的目录
maxscale.log
[root@host58 ~]# grep  "error" /var/log/maxscale/maxscale.log   #如果没有查看到端口 说明服务没有启动， 通过查看日志内容 看报错信息排错
[root@host58 ~]# 

  
验证配置
		1 查看监控信息
[root@host58 ~]# maxadmin  -uadmin -pmariadb -P4016
MaxScale> list servers
Servers.
-------------------+-----------------+-------+-------------+--------------------
Server             | Address         | Port  | Connections | Status              
-------------------+-----------------+-------+-------------+--------------------
server1            | 192.168.4.51    |  3306 |           0 | Master, Running
server2            | 192.168.4.52    |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+--------------------
MaxScale> exit                                                                
[root@host58 ~]# 


2 在主数据库创建存储数据库的库和表 并添加客户端连接数据库服务使用的用户
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'create database buydb'
 
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'create table buydb.user(age  int)'

[root@host51 ~]# mysql -uroot -p123qqq...A -e 'grant select ,insert on  buydb.* to yaya@"%" identified by "123qqq...A"'

	 3 在客户端连接读写分离服务器访问数据库服务可以执行查询数据和存储数据的操作
[root@host50 ~]# mysql -h192.168.4.58 -P4006 -uyaya -p123qqq...A 	 
mysql> select  * from buydb.user;
Empty set (0.00 sec)

mysql> insert into  buydb.user values(19);
Query OK, 1 row affected (0.06 sec)

mysql> select  * from buydb.user;
+------+
| age  |
+------+
|   19 |
+------+
1 row in set (0.00 sec)

mysql> 

		4 验证读写分离服务器 是否把客户端的查和写请求分别给了不通服务器处理
			4.1  在从服务器本机 向表里添加1条记录（主服务器不会同步从的数据）
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'insert into buydb.user values(888)'
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'select  * from  buydb.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| age  |
+------+
|   19 |
|  888 |
+------+
[root@host52 ~]# 		

	      4.2 客户端连接读写分离服务器58 执行查询操作
[root@host50 ~]# mysql -h192.168.4.58 -P4006 -uyaya -p123qqq...A -e 'select * from buydb.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| age  |
+------+
|   19 |
|  888 |
+------+
[root@host50 ~]# 

		4.3客户端连接读写分离服务器58 执行存储操作
[root@host50 ~]# mysql -h192.168.4.58 -P4006 -uyaya -p123qqq...A -e 'insert into buydb.user values(666)'	
	
		4.4 在主服务器本机查看数据 能够看到写入得数据
[root@host51 ~]# mysql -uroot -p123qqq...A -e 'select  * from  buydb.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| age  |
+------+
|   19 |
|  666 |
+------+
[root@host51 ~]# 

	 4.5 客户端连接读写分离服务器58 执行查看操作 可以查看到 新写入得数据
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'select  * from  buydb.user'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+
| age  |
+------+
|   19 |
|  888 |
|  666 |
+------+
[root@host52 ~]# 





2021/06/27 上课内容  
DBA2_DAY03 + DAY04 
数据分片     mha集群	
	
7月4 号  Nosql_day01 + day02   

