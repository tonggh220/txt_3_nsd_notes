binlog日志介绍：
						数据库服务日志文件的一种，用来记录在服务器上执行的
						对数据做写操作的sql命令。
						默认没有启用。要是有得自己启用才可以
						
						是 搭建MySQL主从结构的必要条件
						启用binlog日志文件后能够实现对数据的自动备份
						可以执行binlog日志文件记录的sql命令恢复数据
			binlog日志管理：
						查看是否启用binlog日志
						mysql> show master status;
						Empty set (0.00 sec)
						
						启用日志文件
		]# vim /etc/my.cnf
			[mysqld]
			server_id=50
			log_bin			
			:wq 
		]# systemctl restart mysqld
mysql> show master status;
+-------------------+----------+--------------+------------------+-------------------+
| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+-------------------+----------+--------------+------------------+-------------------+
| host50-bin.000001 |      154 |              |                  |                   |
+-------------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql>  exit

[root@host50 ~]# ls /var/lib/mysql/host50-bin.*
/var/lib/mysql/host50-bin.000001  /var/lib/mysql/host50-bin.index
[root@host50 ~]# 
[root@host50 ~]# cat /var/lib/mysql/host50-bin.index 
./host50-bin.000001
[root@host50 ~]# 
		
		自定义日志文件存放的目录和日志文件名
	f		]# vim /etc/my.cnf
[mysqld]

server_id=50
log_bin=/mylog/plj	
:wq

		[root@host50 ~]# mkdir /mylog
[root@host50 ~]# chown mysql /mylog
[root@host50 ~]# ls -ld /mylog
drwxr-xr-x 2 mysql root 6    6 16:25 /mylog
[root@host50 ~]# 
[root@host50 ~]# setenforce 0
]# systemctl  restart mysqld
]# mysql -uroot  -p密码
mysql> show master status;
+------------+----------+--------------+------------------+-------------------+
| File       | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------+----------+--------------+------------------+-------------------+
| plj.000001 |      154 |              |                  |                   |
+------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)

mysql> exit

]# ls /mylog/plj*
plj.000001  plj.index
		
						查看日志文件内容
						]# mysqlbinlog  /mylog/plj.000001
									
						创建新的日志文件
						#重启数据库服务会无条件创建新的日志文件
						systemctl  restart  mysqld 
						mysql> flush logs;

						#对数据做备份后创建新的日志文件
[root@host50 mylog]# mysqldump -uroot -p123456 --flush-logs  db3 > /db3.sql
						
						删除已有日志文件
						
								使用系统命令删除（不会同步索引文件）
								 rm -rf  /mylog/plj.000007
								 cat  /mylog/plj.index
								 
								使用数据库命令删除（同步索引文件）
								 #删除指定编号之前的所有日志文件
mysql> purge master logs to "plj.000004";
Query OK, 0 rows affected (0.05 sec)

mysql> system ls /mylog
plj.000004  plj.000005	plj.000006  plj.index
mysql> 
mysql> system cat /mylog/plj.index
/mylog/plj.000004
/mylog/plj.000005
/mylog/plj.000006
/mylog/plj.000007
mysql> 																	休息到  17:10  
								 
								 
								 #删除当前所有日志重新创建新日志文件
								mysql> reset master;
Query OK, 0 rows affected, 1 warning (0.09 sec)

mysql> system ls /mylog
plj.000001  plj.index
mysql> system cat /mylog/plj.index
/mylog/plj.000001
mysql> 

								
								 
	
数据的备份与恢复：
			数据备份方式： 物理备份  和 逻辑备份
			
			物理备份和恢复演示
  431  cp -r /var/lib/mysql  /opt/mysql.bak
  433  ls /opt/mysql.bak/
  434  rm -rf /var/lib/mysql

  436  systemctl  stop mysqld

  438  ls /var/lib/mysql  目录没有了 
  439  cp -r /opt/mysql.bak /var/lib/mysql
  440  chown -R mysql:mysql /var/lib/mysql
  441  ls /var/lib/mysql  查看 
  442  systemctl  start mysqld 启动服务
  443  mysql -uroot -p密码
  		
下次上课要讲的内容			
			
			数据备份策略
			
			1  使用mysqldump 对数据做备份和恢复
			
								 
			2 使用binlog日志文件恢复数据(启用了binlog 日志就是对数据做时时备份)
					   恢复所有数据
					   恢复部分数据
						
			3 安装第3方软件实现
dba2_day01
dba2_day02