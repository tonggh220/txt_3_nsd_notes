数据库课程的 第1次 (DB1_DAY01 +  day02)
完成学习任务
1 搭建mysql数据库服务器
如果有mariadb软件的话 要清除，
[root@host50 ~]# systemctl  stop mariadb
[root@host50 ~]# rpm -e --nodeps mariadb-server
[root@host50 ~]# rpm -e --nodeps mariadb
[root@host50 ~]# rm -rf /etc/my.cnf
[root@host50 ~]# rm -rf /var/lib/mysql

安装软件
tar  -xvf  mysql-5.7.17.tar  解压软件
yum -y  install mysql-community-.rpm  安装软件 

[root@host50 ~]# systemctl start mysqld  启动服务 


[root@host50 ~]# ps -C  mysqld  查进程
  PID TTY          TIME CMD
 1137 ?        00:00:00 mysqld
[root@host50 ~]# 
[root@host50 ~]# netstat -utnlp  | grep mysqld 查看进程状态
tcp6       0      0 :::3306                 :::*                    LISTEN      1137/mysqld         
[root@host50 ~]# 
[root@host50 ~]# ls /var/log/mysqld.log 
/var/log/mysqld.log
[root@host50 ~]# 
[root@host50 ~]# grep  password /var/log/mysqld.log  查看初始密码
2021-05-30T02:16:24.800445Z 1 [Note] A temporary password is generated for root@localhost: flOhqokz+6?b
[root@host50 ~]# mysql -hlocalhost -uroot -p'flOhqokz+6?b'  使用初始密码登录

mysql> alter user root@"localhost" identified by "123qqq...A" ; 修改管理员root 登录密码
mysql> show databases; 查看已有的库
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> exit  断开连接
Bye
[root@host50 ~]# 
[root@host50 ~]# mysql -hlocalhost -uroot -p123qqq...A  使用修改后的密码登录


修改mysql服务的密码策略
[root@host50 ~]# mysql -hlocalhost -uroot -p123qqq...A
mysql> show  variables like  "%password%" ;  查看与密码相关的配置

mysql> set global validate_password_length=6;  修改密码长度
mysql> set global validate_password_policy=0;  修改密码策略
mysql> alter  user  root@"localhost" identified by "123456"; 修改新密码
mysql> exit  断开连接
]# mysql  -hlocalhost  -uroot -p123456 使用新密码登录
mysql> 

使修改永久生效
]# vim /etc/my.cnf
[mysqld]
validate_password_length=6
validate_password_policy=0
:wq
[root@host50 ~]# systemctl  restart mysqld 重启服务成功说明配置生效了 

练习： 在ip地址是 192.168.4.51的主机上运行mysql服务
并设置数据管理员本机登录密码为123456
操作步骤：
	1 安装软件
	2 启动服务
	3 查看初始密码
	4 管理员使用初始密码登录
	5 修改登录密码
	6 断开连接
	7 使用新密码登录
	8 命令行修改密码策略
	9 使用新的密码策略设置新密码
	10断开连接，
	11使用新密码登录
	12 配置新密码策略永久生效


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

搭建数据库服务器的目的是为了存储数据，存储数据到数据库的流程是怎么样的？

1 连接数据库服务器 
（连接数据库服务方式:mysql命令行连接  java/php/python脚本连接 使用图形工具连接）

2 创建库(库：就是在服务器上创建的文件夹) 
create database  库名； 创建文件夹
create database  student;

use  库名；  进入文件夹里
use  student;


3 创建表（表： 用存储数据的文件）
create table  库名.表名(表头名  数据类型 ， 表头名  数据类型 ， ....);
create table student.stuinfo(姓名  char , 年龄  int  , 学费  int );

4 存储数据到表里
insert into  库名.表名 values (值列表)；
insert into  student.stuinfo values("A",19,28000),("b",21,18000);

5 查看表记录 （查看文件的内容）
select 表头名  from  库名.表名;
mysql> select 姓名  from student.stuinfo;
+--------+
| 姓名   |
+--------+
| A      |
| b      |
+--------+
2 rows in set (0.00 sec)

mysql> 

mysql> select * from student.stuinfo;
+--------+--------+--------+
| 姓名   | 年龄   | 学费   |
+--------+--------+--------+
| A      |     19 |  28000 |
| b      |     21 |  18000 |
+--------+--------+--------+
2 rows in set (0.00 sec)


6 断开连接  exit 

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
2 mysql数据类型  根据存储数据的需要定义表头存储数据类型

怎么 查看已有表里 有哪些表头及对应的数据类型 ？
desc  库名.表名;
desc  mysql.user;

		2.1  字符类型   字符类型的表头赋值的使用要加 " "
					char     定长 存储的字符个数<=255
					varchar  变长 存储的字符个数<=65532
					
					
					char(5)   varchar(5)   char(7)     varchar(30) 
					name        user       班级         邮箱
					"jim  "      "jim"     nsd2012     plj@163.com
					 
					"ab   "      "ab"      nsd2109     panglij@sina.com.cn
					
					大文本数据类
							blob
							text
					
		2.2  数值类型   商品价格  工资  成绩  奖金 身高 体重  年龄   
						整数类型的命令
						tinyint  smallint   muduint int   bigint
						有正整数和负整数之分
					    命令unsigned 表示不使用整数的，负数存储范围
						
						-1
						
						浮点型(有小数点的数) 
						单精度  float 
						双精度  double
				
  double				 float
  π = 3.1415926		工资	32000.88			
		
		2.3  枚举类型(表头的值要在列举的范围内选择)
			 单选 enum(值列表)    性别  enum("男","女"，"保密")
			 多选 set(值列表)     爱好  set("打篮球","玩游戏","看电影","钱") 
		
		上班要选社保医院       注册账号信息  性别     爱好 
				协和医院
				北京医院
				同仁医院
				友谊医院
		
		2.4  日期时间类型
			  年	year   默认必须是4位数字  2021   出生年份
			  日期  date   YYYYMMDD  20210530        生日
			  时间  time   HHMMSS    142115         上课时间
			  日期时间  datetime  或 timestamp   YYYYMMDDHHMMSS  聚会时间 开会时间  婚宴时间
						
		
 mysql> create table student.t1(
    -> 姓名  char(15) ,
    -> 年龄   tinyint unsigned,
    -> 邮箱   varchar(50),
    -> 出生年份   year,
    -> 生日  date,
    -> 性别   enum("男","女"),
    -> 爱好  set("打篮球","玩游戏","看电影","钱"),
    -> 工资 float(7,2),
    -> 下班时间 time
    -> )default  charset utf8;
 
 mysql> insert into student.t1 
 values 
 ("庞丽静",58,"panglj@tedu.cn",1958,20211120,"女","钱,看电影",30000.88,173000);

 mysql> select  * from  student.t1;
+-----------+--------+----------------+--------------+------------+--------+---------------+----------+--------------+
| 姓名      | 年龄   | 邮箱           | 出生年份     | 生日       | 性别   | 爱好          | 工资     | 下班时间     |
+-----------+--------+----------------+--------------+------------+--------+---------------+----------+--------------+
| 庞丽静    |     58 | panglj@tedu.cn |         1958 | 2021-11-20 | 女     | 看电影,钱     | 30000.88 | 17:30:00     |
+-----------+--------+----------------+--------------+------------+--------+---------------+--------------------------

！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
3 mysql表结构
		3.1 约束条件  指定的是查看表结构时的后4列  
		desc  库.表;
		  Null         | Key |  Default | Extra
		是否允许为空   | 键值|   默认值 |  额外设置 （auto_increment）
		
	
create table  student.t2( 
class char(7) , 
name  char(10) not null, 
age int  default 19,
likes set("a","b","c","d") not null  default "a,b" );

mysql> desc student.t2;
+-------+----------------------+------+-----+---------+-------+
| Field | Type                 | Null | Key | Default | Extra |
+-------+----------------------+------+-----+---------+-------+
| class | char(7)              | YES  |     | NULL    |       |
| name  | char(10)             | NO   |     | NULL    |       |
| age   | int(11)              | YES  |     | 19      |       |
| likes | set('a','b','c','d') | NO   |     | a,b     |       |
+-------+----------------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> insert into student.t2(class,name)values("nsd2012","yaya"); 没给值 使用默认值
Query OK, 1 row affected (0.02 sec)

mysql> select  * from student.t2;
+---------+------+------+-------+
| class   | name | age  | likes |
+---------+------+------+-------+
| nsd2012 | yaya |   19 | a,b   |
+---------+------+------+-------+
1 row in set (0.00 sec)

mysql> insert into student.t2(class,name,age,likes)
values("nsd2009","plj",28,"c,d"); 给值 就不使用默认值了
Query OK, 1 row affected (0.02 sec)

mysql> select  * from student.t2;
+---------+------+------+-------+
| nsd2012 | yaya |   19 | a,b   |
| nsd2009 | plj  |   28 | c,d   |
+---------+------+------+-------+
2 rows in set (0.00 sec)

mysql> 
mysql> insert into student.t2 values("nsd2103","",null,"a,c,d");
Query OK, 1 row affected (0.04 sec)

mysql> select  * from student.t2;
+---------+------+------+-------+
| class   | name | age  | likes |
+---------+------+------+-------+
| nsd2012 | yaya |   19 | a,b   |
| nsd2009 | plj  |   28 | c,d   |
| NULL    | null | NULL | a,c,d |
| nsd2103 |      | NULL | a,c,d |
+---------+------+------+-------+
4 rows in set (0.00 sec)

mysql> 

		3.2 修改表结构
			alter table 库名.表名  执行动作；
			执行动作包括：
					1 添加新表头 add 
					2 删除已有的表头 drop 
					3 修改表头使用的数据类型  modify 
					4 修改表头名称 change 
					5 修改表名 rename
					
	    create table student.t3(name char(10));
		desc  student.t3;
		
		mysql> alter table  student.t3  
		add  age int not null default 19;

		mysql> alter table  student.t3  add  stu_num  int first;
			
		mysql> alter table  student.t3  add  gender enum("m","w") after name;
		
mysql> alter table  student.t3 drop age ,drop stu_num;
Query OK, 0 rows affected (0.23 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc student.t3;
+--------+---------------+------+-----+---------+-------+
| Field  | Type          | Null | Key | Default | Extra |
+--------+---------------+------+-----+---------+-------+
| name   | char(10)      | YES  |     | NULL    |       |
| gender | enum('m','w') | YES  |     | NULL    |       |
+--------+---------------+------+-----+---------+-------+

mysql> alter table student.t3 
        modify  name  varchar(15) not null default "tarena";
mysql> desc student.t3
    -> ;
+--------+---------------+------+-----+---------+-------+
| Field  | Type          | Null | Key | Default | Extra |
+--------+---------------+------+-----+---------+-------+
| name   | varchar(15)   | NO   |     | tarena  |       |
| gender | enum('m','w') | YES  |     | NULL    |       |
+--------+---------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> 
mysql> alter table  student.t3 change gender sex enum('m','w') null  default null;

mysql> use student;
mysql> alter table t3 rename teacher;

mysql> show tables;
+-------------------+
| Tables_in_student |
+-------------------+
| stuinfo           |
| t2                |
| teacher           |
+-------------------+
3 rows in set (0.00 sec)


！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！

		3.3 键值  (给表头加的标签 ，标签有不同功能)
				普通索引 index   给表头的值排序  （自行开视频学习一下 ）
				
				主 键    primary key  表头的值不能为NULL 且值不重复
				
				存储各种证件编号：身份证号  护照  驾驶证  考试证编号
				
				创建主键并验证功能
mysql> create table  student.t4(
    -> stu_num int  primary key ,  name char(10));
				
				
mysql> desc student.t4;
+---------+----------+------+-----+---------+-------+
| Field   | Type     | Null | Key | Default | Extra |
+---------+----------+------+-----+---------+-------+
| stu_num | int(11)  | NO   | PRI | NULL    |       |
| name    | char(10) | YES  |     | NULL    |       |
+---------+----------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> insert into student.t4 values (1,"bob");
Query OK, 1 row affected (0.03 sec)

mysql> insert into student.t4 values (1,"tom");
ERROR 1062 (23000): Duplicate entry '1' for key 'PRIMARY'
mysql> 
mysql> insert into student.t4 values (null,"tom");
ERROR 1048 (23000): Column 'stu_num' cannot be null
mysql> 
mysql> insert into student.t4 values (2,"tom");
Query OK, 1 row affected (0.05 sec)

mysql> select  * from student.t4;
+---------+------+
| stu_num | name |
+---------+------+
|       1 | bob  |
|       2 | tom  |
+---------+------+
2 rows in set (0.00 sec)

mysql> 

！！！！！！！！！！！！！！！！！！！！

		主键primary key 与 auto_increment连用 
				           
	    auto_increment 自增长  让同通过 +1 计算结果给自己赋值 
		
mysql> create table  student.t5(
       stu_num int  primary key  auto_increment ,  name char(10) );
		
mysql> desc student.t5;
+---------+----------+------+-----+---------+----------------+
| Field   | Type     | Null | Key | Default | Extra          |
+---------+----------+------+-----+---------+----------------+
| stu_num | int(11)  | NO   | PRI | NULL    | auto_increment |
| name    | char(10) | YES  |     | NULL    |                |
+---------+----------+------+-----+---------+----------------+
2 rows in set (0.00 sec)

mysql> 
mysql> insert into student.t5(name) values ("bob") ;  
Query OK, 1 row affected (0.03 sec)

mysql> insert into student.t5(name) values ("tom") ;  
Query OK, 1 row affected (0.03 sec)

mysql> select  * from student.t5;
+---------+------+
| stu_num | name |
+---------+------+
|       1 | bob  |
|       2 | tom  |
+---------+------+
mysql> insert into student.t5(name) values ("jim") ;
Query OK, 1 row affected (0.04 sec)

mysql> select  * from student.t5;
+---------+------+
| stu_num | name |
+---------+------+
|       1 | bob  |
|       2 | tom  |
|       3 | jim  |
+---------+------+
3 rows in set (0.00 sec)

mysql> 
mysql> insert into student.t5(stu_num,name) values (2,"lcuy") ;
ERROR 1062 (23000): Duplicate entry '2' for key 'PRIMARY'

mysql> insert into student.t5(stu_num,name) values (7,"lcuy") ;
Query OK, 1 row affected (0.02 sec)

mysql> select  * from student.t5;
+---------+------+
| stu_num | name |
+---------+------+
|       1 | bob  |
|       2 | tom  |
|       3 | jim  |
|       7 | lcuy |
+---------+------+
4 rows in set (0.00 sec)

mysql> 
mysql> insert into student.t5(name) values ("john") ;
Query OK, 1 row affected (0.04 sec)

mysql> select  * from student.t5;
+---------+------+
| stu_num | name |
+---------+------+
|       1 | bob  |
|       2 | tom  |
|       3 | jim  |
|       7 | lcuy |
|       8 | john |
+---------+------+
5 rows in set (0.00 sec)

mysql> 
		
		复合主键 :表里的多个表头一起做主键 ,添加多行时只有只要复合主键表头的值
		不同时重复就可以。
				

 PRI	        PRI
客户端ip地址   服务端口号    客户端对服务的访问状态
cip             sport         status
1.1.1.1			22			 deny
2.1.1.1			22		 	 deny 


mysql> create table student.t6(
    -> cip  varchar(15) ,   sport smallint , status enum("deny","allow"),
    -> primary key(cip,sport)
    -> );
Query OK, 0 rows affected (0.23 sec)

mysql> desc student.t6;
+--------+----------------------+------+-----+---------+-------+
| Field  | Type                 | Null | Key | Default | Extra |
+--------+----------------------+------+-----+---------+-------+
| cip    | varchar(15)          | NO   | PRI | NULL    |       |
| sport  | smallint(6)          | NO   | PRI | NULL    |       |
| status | enum('deny','allow') | YES  |     | NULL    |       |
+--------+----------------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> 
	
mysql> insert into student.t6 values ("1.1.1.1",22,"deny");
Query OK, 1 row affected (0.03 sec)

mysql> select  * from student.t6;
+---------+-------+--------+
| cip     | sport | status |
+---------+-------+--------+
| 1.1.1.1 |    22 | deny   |
+---------+-------+--------+
1 row in set (0.00 sec)

mysql> insert into student.t6 values ("1.1.1.1",22,"allow");
ERROR 1062 (23000): Duplicate entry '1.1.1.1-22' for key 'PRIMARY'
mysql> 
mysql> insert into student.t6 values ("1.1.1.1",22,"deny");
ERROR 1062 (23000): Duplicate entry '1.1.1.1-22' for key 'PRIMARY'
mysql> 
mysql> insert into student.t6 values ("1.1.1.1",80,"deny");
Query OK, 1 row affected (0.07 sec)

mysql> select  * from student.t6;
+---------+-------+--------+
| cip     | sport | status |
+---------+-------+--------+
| 1.1.1.1 |    22 | deny   |
| 1.1.1.1 |    80 | deny   |
+---------+-------+--------+
2 rows in set (0.00 sec)

mysql> 
				
				
				外 键    foreign key 
				给表里的外键表头赋值时，值必须在参考表中指定的表头值列表里选择。
				
				在表中创建外键必须满足如下条件：
					1 表的存储引擎必须是innodb 
					2 字段类型必须匹配
					3 被参考的字段必须是主键
		
				创建外键的命令格式
				
				create table  库.表A(表头列表 , foreign key(表头名 )
				references 库.表B(表头名)  
				on  update cascade  on delete cascade 
				)engine=innodb;
				
					
员工表 yg_tab
编号   姓名 				
  1     Bob			
  2     tom 
  3     jim 		

create table student.yg_tab(
yg_id int primary key  auto_increment,
name char(10)
)engine=innodb;
	
insert into  student.yg_tab(name)values("bob"),("tom"),("jim");

select  * from student.yg_tab;
mysql> select  * from student.yg_tab;
+-------+------+
| yg_id | name |
+-------+------+
|     1 | bob  |
|     2 | tom  |
|     3 | jim  |
+-------+------+
3 rows in set (0.00 sec)

mysql> 


工资表 gz_tab
编号     工资	
gz_id     pay			

create table student.gz_tab(gz_id int , pay int , foreign key(gz_id) 
references  yg_tab(yg_id)  on update  cascade   on delete cascade
)engine=innodb;

mysql> use student;
mysql> show  table  

下次上课测试外键功能


  
需要知道的 标签： 唯一索引  全文索引 