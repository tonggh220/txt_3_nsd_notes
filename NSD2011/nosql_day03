NOsql_day03

1主从复制 （功能类似于MySQL服务的主从同步结构）
	Redis提供存储数据的服务结构，分为主/从 2种角色
	主服务器 接收客户端访问
	从服务器 与主服务器保持数据一致
        支持的服务结构有：一主一从  一主多从 主从从

命令行配置命令（临时配置）
 >slaveof  主服务器Ip   端口号
 
永久配置（永久配置）
]#vim /etc/redis/6379.conf
 slaveof  主服务器Ip   端口号
:wq

 
 > info  replication  查看服务器的角色
 >  slaveof no one 反客为主(临时恢复为 主数据库服务器)
 
*****每台redis服务器默认都是主（master）角色*****
配置一主一从   51 master  52 slave
	具体操作如下：
           51和52 主机都要运行redis服务，并且firewalld 、selinux 关闭
	   在51主机存储并查看数据
	      51> mset x 1 y 2 z 4 j  3
           在52主机指定主服务器的信息
                > slaveof 192.168.4.51 6351
	   在2台主机分别查看复制信息
192.168.4.52:6352> info replication
# Replication
role:slave
master_host:192.168.4.51
master_port:6351
master_link_status:up

192.168.4.51:6351> info replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.52,port=6352,state=online,offset=84,lag=1


配置一主多从 诉求：Redis服务器53 也配置为51的slave 服务器 
	     在53主机做如下配置：
		1 要运行redis服务，并且firewalld 、selinux 关闭

		2 在53主机指定主服务器
		> slaveof  192.168.4.51 6351
		> keys *

3 在51 查看复制信息
192.168.4.51:6351> info replication 
# Replication
role:master
connected_slaves:2
slave0:ip=192.168.4.52,port=6352,state=online,offset=1522,lag=1
slave1:ip=192.168.4.53,port=6353,state=online,offset=1522,lag=1

配置主从从 诉求：把Redis服务器 54 配置为 53的 slave服务器。
	   在54主机做如下配置：
		1  要运行redis服务，并且firewalld 、selinux 关闭	
		2  永久配置
		   vim /etc/redis/6379.conf
			    bind  192.168.4.54
			    port  6379
		        282 slaveof  192.168.4.51 6351
		   :wq
		   ]#redis-cli -h 192.168.4.54 -p 6379 shutdown
		   ]#/etc/init.d/redis_6379 start
		   ]#redis-cli -h 192.168.4.54 -p 6379
		   > info  replication

1.2 主从复制的工作过程？（理解 和背诵）

     1.3 配置带验证的主从复制(主设置了连接密码)
	具体配置如下
		1 主服务器设置连接密码
[root@host51 ~]# redis-cli  -h 192.168.4.51 -p 6351
192.168.4.51:6351> config set requirepass 123456
OK
192.168.4.51:6351> auth 123456
192.168.4.51:6351> config rewrite  永久生效

		2 从服务器指定连接密码
vim /etc/redis/6379.conf
282 slaveof  192.168.4.51 6351
289 masterauth  123456
:wq
]# redis-cli -h 192.168.4.52 -p 6352  shutdown
]# /etc/init.d/restart start 
[root@host52 ~]# redis-cli  -h 192.168.4.52 -p 6352 shutdown
vim  /etc/redis/6379.conf		
282 slaveof 192.168.4.51 6351
289 masterauth 123456
:wq
[root@host52 ~]# /etc/init.d/redis_6379 start
[root@host52 ~]# redis-cli  -h 192.168.4.52 -p 6352 
192.168.4.52:6352> info replication
# Replication
role:slave
master_host:192.168.4.51
master_port:6351
master_link_status:up


192.168.4.51:6351> info replication  在51主机查看复制信息
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.52,port=6352,state=online,offset=6802,lag=0



	1.4 哨兵服务：
	    哨兵服务的功能：服务运行后，监视配置文件中指定的主数据库服务器，发现主服务器监视不到时，把对应的从 升级为主数据库服务器。
         
           诉求：57主机的哨兵服务运行后 ，监视 51 和 52 中的主数据库服务器 51 。
		
***如果主从结构中的主服务器设置了连接密码，也要设置一样的连接密码***
 
     配置从服务器52的连接密码和51一样
[root@host52 ~]# redis-cli  -h 192.168.4.52 -p 6352 
192.168.4.52:6352> config get requirepass 查看
1) "requirepass"
2) ""
192.168.4.52:6352> config set requirepass 123456 设置
192.168.4.52:6352> auth 123456  输入密码
192.168.4.52:6352> config rewrite  报错
192.168.4.52:6352> exit
[root@host52 ~]# tail -1 /etc/redis/6379.conf       
     在57主机配置哨兵服务，具体操作如下：
	1  安装源码redis软件
   61  yum -y install gcc
   62  tar -zxvf /var/ftp/pub/redis-4.0.8.tar.gz 
   63  cd redis-4.0.8/
   64  make && make install  
	
	2 创建并编辑主配置文件 
	  vim /etc/sentinel.conf
bind 192.168.4.57
port 26379
sentinel monitor   myserver  192.168.4.51 6351  1
sentinel auth-pass myserver  123456    
:wq

        3 启动哨兵服务
***关闭所有主机的防火墙和seLinux***
	]# redis-sentinel /etc/sentinel.conf 


	4 测试
	   4.1  停止51主机的redis服务 
[root@host51 ~]# redis-cli  -h 192.168.4.51 -p 6351 -a 123456 shutdown

	   4.2 查看52主机的角色
192.168.4.52:6352> info replication
# Replication
role:master
connected_slaves:0

	   4.3 哨兵服务会自动监视新的主服务器52
	]# cat /etc/sentinel.conf 
.....
sentinel monitor myserver 192.168.4.52 6352 1
sentinel known-slave myserver 192.168.4.51 6351