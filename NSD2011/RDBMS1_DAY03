一、数据导入导出 功能：批量处理数据
	检索目录：导入导出时存储数据的文件必须在指定的目录下
		查看存放文件的默认目录
mysql> show  variables  like  "secure_file_priv";  
+------------------+-----------------------+
| Variable_name    | Value                 |
+------------------+-----------------------+
| secure_file_priv | /var/lib/mysql-files/ |
+------------------+-----------------------+


		修改存放文件的目录
vim /etc/my.cnf
[mysqld]
secure_file_priv="/myload"
:wq
[root@mysql50 ~]# mkdir /myload
[root@mysql50 ~]# chown mysql /myload
[root@mysql50 ~]# setenforce 0
[root@mysql50 ~]# systemctl  restart mysqld
]#mysql -uroot -ptarena
mysql> show  variables  like  "secure_file_priv"; 
+------------------+----------+
| Variable_name    | Value    |
+------------------+----------+
| secure_file_priv | /myload/ |
+------------------+----------+
1 row in set (0.00 sec)


	1.1  导入 把系统文件的内容存储到数据库的表里
命令格式
load  data  infile   "/目录名/文件名" into   table  库名.表名
fields terminated   by   "分隔符" lines  terminated  by   "\n";

把系统用户系统用户信息存储到db3库下user表里
          /etc/passwd
操作步骤：
	创建存储数据的库 
create database db3;
	创建存储数据的表
create table db3.user(name char(50) , password  char(1) , uid  int , gid int , comment varchar(100) , homedir char(60) , shell  char(30) );

desc db3.user;
select  * from db3.user;

	把系统文件拷贝到要求的目录下
mysql> system cp /etc/passwd /myload/
	执行导入数据的命令
mysql> load  data infile "/myload/passwd" into table db3.user  fields terminated by ":" lines terminated by "\n" ;
	查看数据
select  * from  db3.user;
        根据自己的需要做优化
mysql> alter table db3.user add id int primary key auto_increment first;
mysql> select  * from db3.user where id = 1;
mysql> select  * from db3.user where id <= 5;



注意事项（背诵） 



	1.2  导出 把表记录存储到系统文件里
	命令格式1

	select查询命令  into outfile  "/目录/文件";



       命令格式2

	select查询命令  into outfile  "/目录/文件"  fields terminated by "符号";




       命令格式3

	select查询命令  into outfile  "/目录/文件"  fields terminated by "符号"  lines terminated by "符号" ;
      练习到 15:39

        select  * from db3.user into outfile "/myload/a.txt";
	
        select  * from db3.user into outfile "/myload/b.txt" fields terminated by ":";
        
        select  * from  db3.user where id <= 3  into outfile  "/myload/c.txt" fields  terminated by "#" lines terminated by "!!!";
   
       select name,shell from db3.user into outfile "/myload/d.txt";

 ]# ls /myload/*.txt

 ]# cat /myload/a.txt

	 导出数据注意事项（背诵）

二、管理表记录 db3.user

	查询select
	select 表头名称列表 from  库.表 where 条件；

      select  *  from db3.user ; 查看所有表记录

      select  *  from  db3.user where  uid = 1 ;只显示与条件匹配的行

      select  name , uid , shell  from  db3.user where  uid = 1 ;


	插入insert      休息到 16:25
		添加1行  给所有表头赋值
insert into db3.user values(31,"bob" , "x" , 2000 , 2000 , "test user" , "/home/bob" , "/bin/bash");

                添加多行 给所有表头赋值
insert into db3.user 
values 
(41,"tom" , "x" , 2000 , 2000 , "test user" , "/home/bob" , "/bin/bash"),(28,"bob" , "x" , 2000 , 2000 , "test user" , "/home/bob" , "/bin/bash");

		添加1行 给指定表头赋值
insert into db3.user(name,shell,password) values("lucy","/sbin/nologin","x");

		添加多行 给指定表头赋值
insert into db3.user(name,shell,password) values
("lucy1","/sbin/nologin","x"),("2lucy","/sbin/nologin","x"),("lucya","/sbin/nologin","x");

	更新update  修改行里表头的值
	update  库.表 set  字段名=值 , 字段名=值 where 条件；//只修改复合条件的行的表头值

	update  库.表 set  字段名=值 , 字段名=值； //批量修改
	
update db3.user set password="a" , comment="student" ;
select password , comment from db3.user;
update db3.user set password="x" , comment="root" where name="root";

	删除delete 删除表里行
	delete from  库.表 where 条件; 只删除与条件匹配的行
	delete from  库.表；删除所有行
mysql> select  * from db3.user ;
mysql> delete from db3.user where id > 20 ;
mysql> select  * from db3.user where id <= 20 ;



MySQL图形管理工具 之 phpmyadmin

    准备软件运行环境
  118  yum -y install httpd  php php-mysql
  119  rpm -q httpd  php php-mysql
  120  systemctl  start httpd
  121  systemctl  enable httpd
  122  vim /var/www/html/a.php
       <?php
	 $i = 9 ;
	 echo  $i ;
       ?>
   :wq

  123  curl  http://localhost/a.php
	9



     安装phpmyadmin软件
tar -zxvf phpMyAdmin-2.11.11-all-languages.tar.gz 
mv phpMyAdmin-2.11.11-all-languages/ /var/www/html/phpmyadmin
ls /var/www/html/
ls /var/www/html/phpmyadmin/
ls /var/www/html/phpmyadmin/index.php

    修改phpmyadmin软件的配置文件（告诉软件管理本机的数据库服务）
     
]# cp /var/www/html/phpmyadmin/config.sample.inc.php  /var/www/html/phpmyadmin/config.inc.php

]# vim  /var/www/html/phpmyadmin/config.inc.php
17 $cfg['blowfish_secret'] = 'plj123';
31 $cfg['Servers'][$i]['host'] = 'localhost';
:wq

	
	在客户端打开浏览器在地址栏输入网址
http://192.168.4.50/phpmyadmin
    用户 root
    密码 tarena

    匹配条件 :  在对数据做select update delete 都可以加条件
	    MySQL只处理与条件匹配的数据，反之不处理。

	数值比较 符号两边要是 数字或数值类型的字段
		 >  >=  <  <=  =  !=
select name , uid , gid  from db3.user where uid != gid;
select name , uid , gid  from db3.user where uid = gid;	
select name , uid , gid  from db3.user where id <= 10;
select name , uid , gid  from db3.user where id = 5;

	字符比较  符号两边要是字符或字符类型的表头
		=  !=
select name from  db3.user where  name = "root";

select name , shell from db3.user where  shell != "/bin/bash" ;  
                  练习5分钟到 09:27
  
insert into db3.user(name,shell) values (null , null);

判断空 is null 
select id , name from  db3.user where name is null ;

	判断非空 is not null
select name , shell from db3.user where shell is not null ; 

select id , name , shell  from  db3.user where name is null;
select id , name , shell  from db3.user where shell is null ;

	范围比较
	in   not in  between 数字 and 数字
select name from  db3.user where name in ( "mysql","sync","bin" ); 

select  name , uid  from  db3.user where uid in (10,20,30,50); 

select name , shell from db3.user where shell not in    ("/bin/bash","/sbin/nologin");

select name , uid  from  db3.user   where  uid  between 10  and  20 ;


多条件比较
		逻辑与 and   &&  多个判断条件要同时成立
		逻辑或 or    ||  多个判断条件，只要某1个条件成立即可

select name  from db3.user where  name="root" and  uid=0 and  shell is not  null ;

select name  from db3.user where  name="mysql" and  uid=0 and  shell is not  null ;

select name , uid from db3.user  where name in ("a","b")  or  uid between 1 and 5;

and  和  or  同时 使用时 and 的优先级 比 or 高
select name , uid  from db3.user  where  name="root" or name="bin" and  uid=1 ;
	
() 提高优先级
select name , uid  from db3.user  where  （name="root" or name="bin") and  uid=1 ;

	正则匹配  regexp  '正则表达式'
	符号  ^  $  . |  []  *
select name from db3.user where name regexp 'r';


 

select name  from db3.user where name  regexp '^[atr]';

select name  from  db3.user 
 where name regexp '^a' or  name regexp '^t';

select name from db3.user where name regexp  '^a|^t';
select name  from db3.user where name  regexp '[atr]$';
select name  from db3.user where name  regexp '^r.*t$';
	模糊匹配
where 字段名  like   '通配符'
_ ：表示1个字符  %：表示0~n个字符
mysql> select  name from db3.user where name like '___';
mysql> select  name from db3.user where name like '____
mysql> select  name from db3.user where name like '%a%' ;
mysql> select  name from db3.user where name like 'a%' ;
mysql> select name from db3.user  where name like '__%__';


insert into db3.user(name)values("ya3ya"),("8yaya");

select name from db3.user where name regexp '[0-9]';
select name from db3.user where name not  regexp '[0-9]';


        数学计算 + - * / %
select name , uid from db3.user where uid % 2 =  0 ;

update db3.user set uid=uid+1 where id <= 5 ;
update db3.user set uid=uid-1 where id <= 5 ;

alter table db3.user add age tinyint unsigned default 21 after name;

select  name, age , 2021-age csnf from db3.user where name="root";

select name , uid , gid , (uid + gid)/2 pjz from db3.user where name="mysql";


	
	
	操作查询结果：对查询出来的数据再做处理
         聚集函数 对数据总统计的命令
	 min(字段名)
	 max(字段名)
	avg(字段名)
	sum(字段名) 
	count(字段名)
select max(uid) from db3.user;
select min(uid) from db3.user;
select sum(uid) from db3.user;
select avg(uid) from db3.user;

select count(name) numbers from db3.user where shell="/sbin/nologin";

select count(*) from db3.user;

select min(uid) , max(uid) , avg(uid) , sum(uid) ,count(uid) from db3.user;

   查询结果排序 order by 字段名  asc或desc;

select name,uid from db3.user where uid between 10 and 100 ;

select name,uid from db3.user where uid between 10 and 100 order by  uid ;

 select name,uid from db3.user where uid between 10 and 100 order by uid  desc;

   查询结果分组 group  by 字段名

select shell from db3.user group by shell;

select shell from db3.user where id <= 10  group by shell;

   过滤查询结果 having （在已经查找的的数据里 做查找）
 select name from db3.user where shell not in ("/bin/bash","/sbin/nolog") having  name in ("root","mysql");


       限制查询结果显示行数 limit 
	不限制的话，会显示所有与查询条件匹配的行

	limit 数字; 只显示查询结果的头几行 
        limit 数字,数字； 显示查询结果指定范围内的行

mysql> select name , uid , gid from  db3.user ;
mysql> select name , uid , gid from  db3.user limit 3;

select name , uid , gid from  db3.user where id <= 5 ;
select name , uid , gid from  db3.user where id <= 5 limit 3;

select name,uid,shell from db3.user where id <=10 limit 1,4;

从查询结果的第1行开始显示 一共显示3行
select name,uid,shell from db3.user where id <=10 limit 0,3;

从查询结果的第4行开始显示 一共显示3行
select name,uid,shell from db3.user where id <=10 limit 3,3;


       distinct 字段名  去重显示 查询结果有重复了 只显示第1次出现的

mysql> select distinct shell from db3.user;

mysql> select distinct gid from db3.user;



select * from db3.user order by uid desc limit 1 ;


去重显示时可以输出重复的次数吗 ？
mysql> select shell from db3.user group by shell ;

mysql> select count(shell) from db3.user group by shell ;

insert db3.user(name)values("*"),("$"),("&");
select name from db3.user where name in ("*","$","&","?");

对表中的数据做处理还有如下方式：
视图 触发器 存储过程 多表查询 嵌套查询 连接查询