project02_day02（升级day01的网络架构）
一 升级网站运行平台 LNMP

	动态网站 开发语言 PHP  JAVA  根据登录用户的不同显示不同的页面信息和数据信息。
 
	静态网站 开发语言 html CSS   任何用户登录网站显示的内容和数据都一样

       1.1 清除当前配置
		1.1.1 卸载挂载的共享
[root@web33 ~]# umount /var/www/html/
[root@web33 ~]# mount | grep "/var/www/html"
 
[root@web33 ~]# vim /etc/fstab
#192.168.4.30:/sitedir  /var/www/html  nfs  defaults 0 0
:wq
               1.1.2 停止httpd服务，并设置开机不运行
[root@web33 ~]# systemctl  stop httpd
[root@web33 ~]# systemctl  disable httpd
		
       1.2 部署LNMP 
		安装源码的Nginx 
]# yum  -y install gcc pcre-devel  zlib-devel
]# tar -zxvf nginx-x.x.tar.gz
]# cd nginx.x.x
]# ./configure  && make && make install

]# yum -y install php php-devel	 安装php
 
]# yum -y install php-fpm   安装php-fpm	

]# yum -y install php-mysql 安装php-mysql（提供php脚本连接mysql服务连接命令）		
   
                修改nginx配置文件
]# vim +65 /usr/local/nginx/conf/nginx.conf
    location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            include        fastcgi.conf;
        }
:wq
[root@web33 ~]# /usr/local/nginx/sbin/nginx -t
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful

		挂载NFS30的共享目录/sitedir
[root@web33 ~]# rm -rf  /usr/local/nginx/html/*
[root@web33 ~]# vim /etc/fstab 
192.168.4.30:/sitedir   /usr/local/nginx/html nfs  defaults 0 0
:wq
[root@web33 ~]# mount -a
[root@web33 ~]# mount  | grep "/usr/local/nginx/html"
[root@web33 ~]# ls /usr/local/nginx/html/
test.html
		启动nginx 服务 和 php-fpm服务
[root@web33 ~]# /usr/local/nginx/sbin/nginx
[root@web33 ~]# systemctl  start php-fpm
[root@web33 ~]# ss -utnlp  | grep 80
[root@web33 ~]# ss -utnlp  | grep 9000
[root@web33 ~]#
[root@web33 ~]# systemctl  enable php-fpm
[root@web33 ~]# echo "/usr/local/nginx/sbin/nginx" >> /etc/rc.local 
[root@web33 ~]# chmod +x  /etc/rc.local

测试配置
[root@mysql11 ~]# curl  http://192.168.4.33/test.html
my web page 

[root@web33 ~]# vim /usr/local/nginx/html/test2.php
<?php
$school="tarena";
echo $school;
?>
:wq
[root@nfs30 ~]# ls /sitedir/
test2.php  test.html
[root@localhost ~]#  

[root@mysql11 ~]# curl http://192.168.4.33/test2.php
tarena
    

二 部署缓存服务： 目的实现网站访问加速

   配置Redis集群
   2.1 准备redis服务器
	  安装软件
          初始化配置

   2.2 启用Redis服务器的集群功能
	  停止服务
          修改配置文件，启用集群配置
          启动服务

   2.3 配置管理主机
	  部署ruby脚本运行环境
          创建管理脚本


   2.4 创建集群
[root@host57 /]# redis-trib.rb create --replicas 1 192.168.4.51:6351 192.168.4.52:6352 192.168.4.53:6353 192.168.4.54:6354 192.168.4.55:6355 192.168.4.56:6356



2.5 集群信息
[root@host57 /]# redis-trib.rb info 192.168.4.52:6352
192.168.4.52:6352 (de7f7af5...) -> 0 keys | 5462 slots | 1 slaves.
192.168.4.51:6351 (70ab9a4b...) -> 0 keys | 5461 slots | 1 slaves.
192.168.4.53:6353 (1cb9f4e9...) -> 0 keys | 5461 slots | 1 slaves.
[OK] 0 keys in 3 masters.
0.00 keys per slot on average.
[root@host57 /]# 2

  配置网站服务 配置NGINX执行php脚本可以把数据存储在redis集群里
    具体操作如下：
	1、安装软件提供连接Redis集群的模块redis.so
   70  tar -zxvf redis-cluster-4.3.0.tgz 
   72  cd redis-4.3.0/
   74  phpize 
   78  ./configure --with-php-config=/usr/bin/php-config
[root@web33 redis-4.3.0]# make
[root@web33 redis-4.3.0]# make install
Installing shared extensions:     /usr/lib64/php/modules/
[root@web33 redis-4.3.0]# 
[root@web33 redis-4.3.0]# ls /usr/lib64/php/modules/

        2、调用模块 
         vim /etc/php.ini
720 extension_dir = "/usr/lib64/php/modules/"
730 extension = "redis.so"
：wq
]# systemctl  restart php-fpm

        3、查看支持的模块
[root@web33 redis-4.3.0]# php -m  | grep -i redis
redis

测试配置，具体操作如下
	在nfs30主机编写存储数据到集群里的PHP 脚本
		vim  /sitedir/a.php 存储数据的php脚本
		<?php 
$redis_list = ['192.168.4.51:6351','192.168.4.52:6352','192.168.4.53:6353','192.168.4.54:6354','192.168.4.55:6355','192.168.4.56:6356'];

$client = new RedisCluster(NUll,$redis_list);

$client->set("i","tarenaA ");
$client->set("j","tarenaB ");
$client->set("k","tarenaC ");
  
echo "save data ok";             

                 ?>
		vim  /sitedir/b.php 查询数据的PHP脚本
		<?php
$redis_list = ['192.168.4.51:6351','192.168.4.52:6352','192.168.4.53:6353','192.168.4.54:6354','192.168.4.55:6355','192.168.4.56:6356'];

$client = new RedisCluster(NUll,$redis_list);

echo $client->get("i");
echo $client->get("j");
echo $client->get("k");
		
		?>



	客户端访问网站web33 执行php脚本
[root@web33 ~]# ls /usr/local/nginx/html/
a.php  b.php  test2.php  test.html
[root@web33 ~]#

[root@nfs30 ~]# curl http://192.168.4.33/a.php
save data ok

[root@host51 ~]# curl  http://192.168.4.33/b.php
tarenaA tarenaB tarenaC 

        在Redis服务器本机命令行连接服务查看数据 
[root@host51 ~]# redis-cli -c -h 192.168.4.51 -p 6351
192.168.4.51:6351> keys *
1) "j"
192.168.4.51:6351> get j
"tarenaB "
192.168.4.51:6351>

[root@host51 ~]# redis-cli -c -h 192.168.4.52 -p 6352
192.168.4.52:6352> keys *
1) "k"
192.168.4.52:6352> get k
"tarenaC "
192.168.4.52:6352> 

[root@host51 ~]# redis-cli -c -h 192.168.4.53 -p 6353
192.168.4.53:6353> keys *
1) "i"
192.168.4.53:6353> get i
"tarenaA "
192.168.4.53:6353>


三 数据迁移：把存储在读写分离结构里的数据 在线复制的搭建PXC集群里
   具体操作如下：
   3.1 把66主机配置为 mysql11的slave服务器，具体操作如下：
	    	安装软件mysql-5.7.17.tar  
[root@host66 ~]# tar -xvf /var/ftp/pub/mysql-5.7.17.tar	
[root@host66 ~]# yum -y install mysql-community-*.rpm
		
		修改配置文件 （指定server_id=66）
]# vim /etc/my.cnf
[mysqld]
server_id=66
:wq
		启动mysqld服务 
[root@host66 ~]# systemctl  start mysqld

		使用初始密码登录并修改登录密码
[root@host66 ~]#grep -i password /var/log/mysqld.log 
[root@host66 ~]#mysql -uroot -p'e8ViLdI6Wy-r'
mysql> alter user root@"localhost" identified by "123qqq...A";
mysql> exit;

		确保数据一致 (使用innobackupex命令)
			1 在mysql11主机做如下操作
[root@mysql11 ~]# yum -y install libev-4.15-1.el6.rf.x86_64.rpm
[root@mysql11 ~]# yum -y install percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm

[root@mysql11 ~]# innobackupex -u root -p 123qqq...A /allbak --no-timestamp

[root@mysql11 ~]# scp -r /allbak/  root@192.168.4.66:/opt/

休息到 16:10
		       2 在66主机做如下操作
                        			      使用备份文件恢复数据
    2  which innobackupex
    3  yum -y install /var/ftp/pub/libev-4.15-1.el6.rf.x86_64.rpm 
    4  yum -y install /var/ftp/pub/percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm 
    5  which innobackupex
    6  systemctl  stop mysqld
    7  rm -rf /var/lib/mysql/*
    8  innobackupex --apply-log /opt/allbak/
    10  innobackupex --copy-back /opt/allbak/
   11  ls  /var/lib/mysql
   12  chown -R mysql:mysql  /var/lib/mysql
   13  systemctl  start mysqld
   14  mysql -uroot -p123qqq...A
mysql> show databases;
mysql> select user from mysql.user;


			      指定主服务器
[root@host66 ~]# grep master11 /opt/allbak/xtrabackup_info 
binlog_pos = filename 'master11.000002', position '1583'

[root@host66 ~]# mysql -uroot -p123qqq...A
mysql> change master to master_host="192.168.4.11",master_user="repluser",master_password="123qqq...A",master_log_file="master11.000002",master_log_pos=1583;	
mysql> start slave;
	
                              查看状态信息  show  slave  status\G;
mysql> show slave status \G
            Slave_IO_Running: Yes
            Slave_SQL_Running: Yes
mysql> select  * from db1.user;


   3.2 配置pxc集群，具体操作如下：
		1  在66主机安装PXC软件包
]# systemctl stop mysqld
]# rpm -qa | grep  -i mysql

[root@host66 pxc]# rpm -e --nodeps mysql-community-libs mysql-community-embedded mysql-community-embedded-devel mysql-community-common  mysql-community-client mysql-community-devel mysql-community-test mysql-community-libs-compat mysql-community-minimal-debuginfo mysql-community-server mysql-community-embedded-compat

]# cd pxc
]# yum -y install percona-xtrabackup-24-2.4.13-1.el7.x86_64.rpm 
]# yum -y install qpress-1.1-14.11.x86_64.rpm
]# tar -zvf Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar
]# yum -y install Percona-XtraDB-Cluster-*.rpm

		2  在10主机安装PXC软件包
[root@pxc10 ~]# cd pxc
[root@pxc10 ~]# yum -y install libev-4.15-1.el6.rf.x86_64.rpm
[root@pxc10 ~]# yum -y install percona-xtrabackup-24-2.4.13-1.el7.x86_64.rpm 
[root@pxc10 ~]# yum -y install qpress-1.1-14.11.x86_64.rpm
[root@pxc10 ~]# tar -zvf Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar
[root@pxc10 ~]# yum -y install Percona-XtraDB-Cluster-*.rpm

  	    	3  在88主机安装PXC软件包
[root@pxc88 ~]# cd pxc
[root@pxc88 ~]# yum -y install libev-4.15-1.el6.rf.x86_64.rpm
[root@pxc88 ~]# yum -y install percona-xtrabackup-24-2.4.13-1.el7.x86_64.rpm 
[root@pxc88 ~]# yum -y install qpress-1.1-14.11.x86_64.rpm
[root@pxc88 ~]# tar -zvf Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar
[root@pxc88 ~]# yum -y install Percona-XtraDB-Cluster-*.rpm   