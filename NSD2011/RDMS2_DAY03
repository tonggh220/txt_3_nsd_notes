DBMS2_DAY03  mycat分库分表
 准备新的数据库服务器 53（db1） 54(db2) 55(db3)
     把软件Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz拷     贝给 ip 192.168.4.56 虚拟机 

     56虚拟机 不需要运行mysqld服务 

1 相关概念
2 mycat软件的介绍
3 拓扑结构

4 配置mycat服务 ：具体操作如下
        内存>=1G   
        主机名  hostname mycat56 
		echo  mycat56  > /etc/hostname

	1 安装软件
]# yum  -y   install java-1.8.0-openjdk.x86_64
]# tar -zxvf /var/ftp/pub/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz
]# mv mycat /usr/local/
]# ls /usr/local/mycat/  了解安装目录下，存放都是什么文件（背诵）

xml  扩展标记语言  配置项要放在标签里 有单标签和双标签

     <!--     --> 注释符号 

	2 修改配置文件
	   2.1  配置客户端连接mycat服务使用的用户名、密码、逻辑库
	   vim /usr/local/mycat/conf/server.xml 使用默认配置
	
	   2.2  配置分片存储数据的表
]# sed -i '56,77d' /usr/local/mycat/conf/schema.xml
]# cp /usr/local/mycat/conf/schema.xml /root/ 	
]# vim /usr/local/mycat/conf/schema.xml
<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">

<mycat:schema xmlns:mycat="http://io.mycat/">
      
      <schema  选项>    定义数据分片存储的表名
                   定义表名
		   <table 选项  /> 
		   <table 选项>..... </table>
      </schema>

      <dataNode 选项=值,…… />  定义数据库服务器的主机名

      <datahost 选项=值,…>……</datahost>定义数据库服务器的ip地址

</mycat:schema>
:wq

[root@mycat56 mycat]# cat /usr/local/mycat/conf/schema.xml 
<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">
<mycat:schema xmlns:mycat="http://io.mycat/">
        <schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100">
                <table name="travelrecord" dataNode="dn1,dn2,dn3" rule="auto-sharding-long" />
                <table name="company" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />
                <table name="goods" primaryKey="ID" type="global" dataNode="dn1,dn2,dn3" />
                <table name="hotnews" primaryKey="ID" autoIncrement="true" dataNode="dn1,dn2,dn3" rule="mod-long" />
                <table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3" rule="sharding-by-intfile" />
                       <table name="customer" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile">
                        <childTable name="orders" primaryKey="ID" joinKey="customer_id"
                                                parentKey="id">
                                <childTable name="order_items" joinKey="order_id"
                                                        parentKey="id" />
                        </childTable>
                        <childTable name="customer_addr" primaryKey="ID" joinKey="customer_id"
                                                parentKey="id" />
                </table>
        </schema>
        <dataNode name="dn1" dataHost="mysql53" database="db1" />
        <dataNode name="dn2" dataHost="mysql54" database="db2" />
        <dataNode name="dn3" dataHost="mysql55" database="db3" />

        <dataHost name="mysql53" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">

                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM1" url="192.168.4.53:3306" user="pljadmin"
                                   password="123qqq...A">
                </writeHost>
        </dataHost>

        <dataHost name="mysql54" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM2" url="192.168.4.54:3306" user="pljadmin"
                                   password="123qqq...A">
                </writeHost>
        </dataHost>

        <dataHost name="mysql55" maxCon="1000" minCon="10" balance="0"
                          writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM3" url="192.168.4.55:3306" user="pljadmin"
                                   password="123qqq...A">
                </writeHost>
        </dataHost>
</mycat:schema>

3 配置数据库服务器
		3.1 创建schema.xml文件中指定的库名
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'create database db1'
[root@host54 ~]# mysql -uroot -p123qqq...A -e 'create database db2'
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'create database db3'

                3.2 分别添加schema.xml文件中指定pljadmin 用户
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.*  to pljadmin@"%" identified by "123qqq...A"'

[root@host54 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.*  to pljadmin@"%" identified by "123qqq...A"'

[root@host53 ~]# mysql -uroot -p123qqq...A -e 'grant all on *.*  to pljadmin@"%" identified by "123qqq...A"'


	5 启动服务
[root@mycat56 mycat]# /usr/local/mycat/bin/mycat help
Usage: /usr/local/mycat/bin/mycat { console | start | stop | restart | status | dump }


[root@mycat56 mycat]# /usr/local/mycat/bin/mycat start
Starting Mycat-server...

[root@mycat56 mycat]# ls /usr/local/mycat/logs/
mycat.log  mycat.pid  wrapper.log

[root@mycat56 mycat]# ss -utnlp  | grep 8066
tcp    LISTEN     0      100      :::8066                 :::*                   users:(("java",pid=16855,fd=78))



        动态查看日志 看报错信息
		第1个终端 
		 tail -f /usr/local/mycat/logs/wrapper.log

                第2个终端
                ]# /usr/local/mycat/bin/mycat start

                
	排错思路：
		1 检查  schema.xml 文件 配置
		2 检查 数据库的配置
                3 内存>=1G   
                4 主机名  hostname mycat56 
		4  echo  mycat56  > /etc/hostname
		5  重启56 主机的操作系统
	        6  启动mycat服务


	
6 测试配置

	客户连接mycat服务 访问数据
	mysql -h192.168.4.56 -u用户 -p密码
[root@mysql50 ~]# mysql -h192.168.4.56 -P8066 -uroot -p123456
mysql> show databases;
+----------+
| DATABASE |
+----------+
| TESTDB   |
+----------+
1 row in set (0.01 sec)
mysql> use TESTDB;
mysql> show tables;
+------------------+
| Tables in TESTDB |
+------------------+
| company          |
| customer         |
| customer_addr    |
| employee         |
| goods            |
| hotnews          |
| orders           |
| order_items      |
| travelrecord     |
+------------------+

分片规则的使用：
	注意：根据表使用的分片规则建表，必须创建分片规则要求的表头。

	sharding-by-intfile 枚举法分片规则的使用
        表头的值 必须在  规则文件定义的值 里选择

        vim schema.xml
<table name="employee" primaryKey="ID" dataNode="dn1,dn2,dn3"
                           rule="sharding-by-intfile" />

        vim  rule.xml
        <tableRule name="sharding-by-intfile">
                <rule>
                        <columns>sharding_id</columns> 表头名
                        <algorithm>hash-int</algorithm> 算法名
                </rule>
        </tableRule>

 <function name="hash-int"
              class="io.mycat.route.function.PartitionByFileMap">
     <property name="mapFile">partition-hash-int.txt</property> 定义表头值的规则文件
        </function>

vim /usr/local/mycat/conf/partition-hash-int.txt 定义表头的值
表头的值=第几台数据库服务器
10000=0   
10010=1    
10020=2    
:wq

	让修改生效要重启mycat服务
[root@mycat56 ~]# /usr/local/mycat/bin/mycat restart
[root@mycat56 ~]# ss -utnlp  | grep  8066

        建表
[root@mysql50 ~]# mysql -h192.168.4.56 -P8066 -uroot -p123456
mysql> use TESTDB;
mysql> create table  employee( 
       ID int primary key , 
       sharding_id int,
       name char(15) , 
       age  int );

存储数据
mysql> insert into employee(ID,sharding_id,name,age) values(1,10000,"aaa",29),(2,10000,"bbbb",21);

mysql> insert into employee(ID,sharding_id,name,age) values(1,10010,"xxx",29),(2,10010,"yyy",21);

mysql> insert into employee(ID,sharding_id,name,age) values(1,10020,"jjjj",29),(2,10020,"kkkk",21),(3,10020,"fff",23);

mysql> select  * from employee;
+----+-------------+------+------+
| ID | sharding_id | name | age  |
+----+-------------+------+------+
|  1 |       10010 | xxx  |   29 |
|  2 |       10010 | yyy  |   21 |
|  1 |       10000 | aaa  |   29 |
|  2 |       10000 | bbbb |   21 |
|  1 |       10020 | jjjj |   29 |
|  2 |       10020 | kkkk |   21 |
|  3 |       10020 | fff  |   23 |
+----+-------------+------+------+
7 rows in set (0.32 sec)


查看是否分片存储
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'select  * from  db1.employee'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------+------+------+
| ID | sharding_id | name | age  |
+----+-------------+------+------+
|  1 |       10000 | aaa  |   29 |
|  2 |       10000 | bbbb |   21 |
+----+-------------+------+------+
[root@host53 ~]# 
[root@host54 ~]# mysql -uroot -p123qqq...A -e 'select * from db2.employee'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------+------+------+
| ID | sharding_id | name | age  |
+----+-------------+------+------+
|  1 |       10010 | xxx  |   29 |
|  2 |       10010 | yyy  |   21 |
+----+-------------+------+------+
[root@host54 ~]# 

[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select * from db3.employee'
mysql: [Warning] Using a password on the command line interface can be insecure.
+----+-------------+------+------+
| ID | sharding_id | name | age  |
+----+-------------+------+------+
|  1 |       10020 | jjjj |   29 |
|  2 |       10020 | kkkk |   21 |
|  3 |       10020 | fff  |   23 |
+----+-------------+------+------+
[root@host55 ~]#

 mod-long  求模分片规则的使用
        根据表头值与设定的数字，取余的结果 存储数据
	
		查看mod-long规则的表名
		vim schema.xml
<table name="hotnews"  dataNode="dn1,dn2,dn3"  rule="mod-long" />
 
		查看表头的名字  和 和取余的数字
		vim rule.xml
<tableRule name="mod-long"> 规则名称
                <rule>
                        <columns>id</columns> 表头名
                        <algorithm>mod-long</algorithm> 算法名
                </rule>
</tableRule>
<function name="mod-long" class="io.mycat.route.function.PartitionByMod">
                <!-- how many data nodes -->
                <property name="count">3</property> 与数字3做取余计算
</function>

		如果有修改，需要重启mycat服务
[root@mycat56 ~]# /usr/local/mycat/bin/mycat restart
[root@mycat56 ~]# ss -utnlp  | grep 8066

		连接mycat服务建表存储数据
[root@mysql50 ~]# mysql -h192.168.4.56 -P8066 -uroot -p123456
mysql> use TESTDB;
mysql> create table hotnews(id int , 
title char(10) , comment char(200));

mysql> insert into hotnews(id,title,comment)values(7,"aaa","AAAAA"),(7,"bbb","BBBB");

mysql> insert into hotnews(id,title,comment)values(9,"aaa","AAAAA"),(9,"bbb","BBBB"),(9,"bbb","BBBB");

mysql> insert into hotnews(id,title,comment)values(11,"aaa","AAAAA"),(11,"bbb","BBBB"),(11,"bbb","BBBB");

mysql> select  * from hotnews;                                                +------+-------+---------+
| id   | title | comment |
+------+-------+---------+
|    7 | aaa   | AAAAA   |
|    7 | bbb   | BBBB    |
|    9 | aaa   | AAAAA   |
|    9 | bbb   | BBBB    |
|    9 | bbb   | BBBB    |
|   11 | aaa   | AAAAA   |
|   11 | bbb   | BBBB    |
|   11 | bbb   | BBBB    |
+------+-------+---------+
8 rows in set (0.01 sec)


		在数据库服务器查看数据   
[root@host55 ~]# mysql -uroot -p123qqq...A -e 'select * from db3.hotnews'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+-------+---------+
| id   | title | comment | 
+------+-------+---------+
|   11 | aaa   | AAAAA   |
|   11 | bbb   | BBBB    |
|   11 | bbb   | BBBB    |
+------+-------+---------+
[root@host55 ~]# 
 [root@host54 ~]# mysql -uroot -p123qqq...A -e 'select * from db2.hotnews'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+-------+---------+
| id   | title | comment |
+------+-------+---------+
|    7 | aaa   | AAAAA   |
|    7 | bbb   | BBBB    |
+------+-------+---------+
[root@host54 ~]# 
[root@host53 ~]# mysql -uroot -p123qqq...A -e 'select  * from  db1.hotnews'
mysql: [Warning] Using a password on the command line interface can be insecure.
+------+-------+---------+
| id   | title | comment |
+------+-------+---------+
|    9 | aaa   | AAAAA   |
|    9 | bbb   | BBBB    |
|    9 | bbb   | BBBB    |
+------+-------+---------+
[root@host53 ~]# 














