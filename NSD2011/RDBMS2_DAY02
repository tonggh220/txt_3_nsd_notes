DBMS2_DAY02
数据读写分离： 是存储数据的服务结构

把客户端访问数据库服务时的 查询访问select   和存储数据访问insert 分别给不同的数据库服务器处理。

不做读写分离处理的话 select 访问和 insert 访问都是同1台服务器处理。

	怎么实现数据的读写分离：
		1 通过程序员写代码实现
                2 使用MySQL服务的中间件软件提供的服务实现
  
	


准备1台新虚拟机 不需要安装数据库服务软件。
  配置IP为 192.168.4.57  配置YUM  关闭firewalld 和selinux 
  拷贝软件maxscale-2.1.2-1.rhel.7.x86_64.rpm	

		1 环境准备 把52 配置为 51 的从数据库服务器

		2 配置读写分离服务器192.168.4.57,具体如下
			1 安装软件
[root@host57 ~]# rpm -ivh  maxscale-2.1.2-1.rhel.7.x86_64.rpm

			2 修改配置文件


[root@host57 ~]#  vim /etc/maxscale.cnf
[maxscale]
threads=auto

[server1]
type=server
address=192.168.4.51
port=3306
protocol=MySQLBackend

[server2]
type=server
address=192.168.4.52
port=3306
protocol=MySQLBackend


[MySQL Monitor]
type=monitor
module=mysqlmon
servers=server1,server2
user=mysqla
passwd=123qqq...A
monitor_interval=10000





[Read-Write Service]
type=service
router=readwritesplit
servers=server1,server2
user=mysqlb
passwd=123qqq...A
max_slave_connections=100%


[MaxAdmin Service]
type=service
router=cli

[Read-Write Listener]
type=listener
service=Read-Write Service
protocol=MySQLClient
port=4006

[MaxAdmin Listener]
type=listener
service=MaxAdmin Service
protocol=maxscaled
socket=default
port=4016

:wq

			3 配置数据库服务器
			   添加用户mysqla
			   添加用户mysqlb
在主服务器51 添加 ，在从52服务器查看
mysql>  grant replication slave , replication client on *.* to  mysqla@"%" identified by "123qqq...A"；

mysql> grant select on mysql.* to mysqlb@"%" identified by "123qqq...A";

[root@host52 ~]# mysql -uroot -p123qqq...A -e 'select user from mysql.user where user in ("mysqla","mysqlb")'

                         4 启动读写分离服务
[root@host57 ~]# maxscale  -f /etc/maxscale.cnf			

[root@host57 ~]# ss -utnlp  | grep  4006

[root@host57 ~]# ss -utnlp  | grep  4016

[root@host57 ~]# ls /var/log/maxscale/ 查看日志看报错信息
maxscale.log

[root@host57 ~]# pkill -9 maxscale  通过杀进程的方式停止服务


			5 验证配置
[root@host57 ~]# maxadmin -uadmin -pmariadb -P4016
MaxScale> list servers
Servers.
-------------------+-----------------+-------+-------------+--------------------
Server             | Address         | Port  | Connections | Status              
-------------------+-----------------+-------+-------------+--------------------
server1            | 192.168.4.51    |  3306 |           0 | Master, Running
server2            | 192.168.4.52    |  3306 |           0 | Slave, Running
-------------------+-----------------+-------+-------------+--------------------
MaxScale> exit

	2021-03-04 00:57:56   error  : [MySQLAuth] [Read-Write Service] Failed to connect to server 'server1' (192.168.4.51:3306) when checking authentication user credentials and permissions: 1045 Access den

                3 客户测试配置：
			1 在主服务器添加用户 ，给客户连接使用（从数据库服务器会自动同步添加的用户）
[root@host51 ~]# mysql -uroot -p123qqq...A 

create database db99;
create table db99.user(id int);
grant select,insert on db99.* to plj999@"%" identified by "123qqq...A"'

			2 在客户端50连接读写分离服务器57访问数据
[root@mysql50 ~]# mysql -h192.168.4.57 -P4006 -uplj999 -p123qqq...A
mysql> show grants;
mysql> insert into db99.user values(110);
mysql> insert into db99.user values(120);
mysql> insert into db99.user values(119);
mysql> select * from db99.user;

			3 验证读写分离 操作如下：
[root@host52 ~]# mysql -uroot -p123qqq...A -e 'insert into db99.user values(99999)'

[root@mysql50 ~]# mysql -h192.168.4.57 -P4006 -uplj999 -p123qqq...A -e 'select * from db99.user'

[root@mysql50 ~]# mysql -h192.168.4.57 -P4006 -uplj999 -p123qqq...A -e 'insert into db99.user values(8888)'

[root@mysql50 ~]# mysql -h192.168.4.57 -P4006 -uplj999 -p123qqq...A -e 'select * from db99.user'
+-------+
| id    |
+-------+
|   110 |
|   120 |
|   119 |
| 99999 |
|  8888 |
+-------+




多实例
  准备1台新虚拟机 不需要安装数据库服务软件。
  配置IP为 192.168.4.58  配置YUM  关闭firewalld 和selinux 
  拷贝软件 mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz

DBMS2_DAY03
 新的数据库服务器 53（db1） 54(db2) 55(db3)
 把软件Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz拷贝给ip 192.168.4.56 虚拟机 


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

多实例
  准备1台新虚拟机 不需要安装数据库服务软件。
      配置IP为 192.168.4.58  配置YUM  关闭firewalld 和selinux 
      拷贝软件 mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz

      配置多实例，具体操作如下
	1 安装软件
]# rpm -q libaio || yum -y install libaio
]# useradd  mysql
]# tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz
]# mv mysql-5.7.20-linux-glibc2.12-x86_64/ /usr/local/mysql
        
        2 优化配置
PATH=/usr/local/mysql/bin:$PATH

vim /etc/bashrc  在文件的末尾添加
export  PATH=/usr/local/mysql/bin:$PATH  
:wq

	3 创建并编辑主配置文件 /etc/my.cnf
	  [mysqld_multi]#管理实例服务的运行参数
          mysqld = /usr/local/mysql/bin/mysqld_safe   
          mysqladmin=/usr/local/mysql/bin/mysqladmin
          user = root 
		
	  [mysqld1]#创建实例1
数据库目录
端口号
错误日志文件
PID文件
socket文件   

	  [mysqld2]#创建实例2
数据库目录
端口号
错误日志文件
PID文件
socket文件 
:wq

[root@host58 ~]# cat /etc/my.cnf
[mysqld_multi]
mysqld=/usr/local/mysql/bin/mysqld_safe   
mysqladmin=/usr/local/mysql/bin/mysqladmin
user=root 

[mysqld1]
datadir=/dir1
port=3307
log-error=/dir1/mysqld1.err
pid-file=/dir1/mysqld1.pid
socket=/dir1/mysqld1.sock

[mysqld2]
datadir=/dir2
port=3308
log-error=/dir2/mysqld2.err
pid-file=/dir2/mysqld2.pid
socket=/dir2/mysqld2.sock
[root@host58 ~]#

 

	 
	4 启动实例
		启动实例1 
]# mysqld_multi start 1
]# ss -utnlp  | grep 3307
]# ls /dir1/mysqld1.*

              5 连接实例服务
]# mysql -uroot -p'fpl>%.FrD5X4' -S /dir1/mysqld1.sock
       
mysql> alter user  root@"localhost" identified by "123456"; 修改登录密码
mysql> show databases;
mysql> create database bbsdb;
mysql> system ls /dir1  查看数据库存储的位置
mysql> exit 断开连接
]# mysql -uroot -p123456 -S /dir1/mysqld1.sock使用新密码登录

	     6 停止实例
[root@host58 ~]# mysqld_multi --user root --password 123456 stop 1
[root@host58 ~]# ss -utnlp  | grep 3307

	
	      实例2的操作
   54  mysqld_multi  start 2 
   55  ls /dir2
   56  ss -utnlp  | grep 3308
   57  mysql -uroot -p'As1uIdeoF,_)' -S /dir2/mysqld2.sock
   58  mysql -uroot -p123456 -S /dir2/mysqld2.sock
   59  mysqld_multi  --user root --password 123456 stop 2
   60  ss -utnlp  | grep 3308


[root@host58 ~]# mysqld_multi  start  2
[root@host58 ~]# mysqld_multi  start  1
	
[root@host58 ~]# ss -utnlp | grep 3308
tcp    LISTEN     0      80       :::3308                 :::*                   users:(("mysqld",pid=14187,fd=16))
[root@host58 ~]# ss -utnlp | grep 3307
tcp    LISTEN     0      80       :::3307                 :::*                   users:(("mysqld",pid=14392,fd=28))
[root@host58 ~]# 






