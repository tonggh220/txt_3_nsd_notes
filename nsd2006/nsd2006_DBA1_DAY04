####db1_day03 知识点回顾
1  数据导入与导出
	  检索目录 、导入数据  、 导出数据

2 管理表记录  select    update  insert   delete 


3 匹配条件( 可以适应于 select   update   delete )
		基本 匹配 ：数值比较  字符比较  范围匹配   空  非空
		                    逻辑匹配  
		高级匹配   ： 计算   正则表达式     模糊匹配

        操作查询结果： 排序   分组   过滤   限制行数  去重显示  聚集函数 
		
4  phpmyadmin 图形工具的安装与使用
	4.1 部署运行环境 lamp
	4.2 安装phpmyadmin，步骤如下：
			1 解包    2 拷贝到网页目录下    3 创建主配置文件并修改
			4 客户端输入软件的网址访问
			    http://192.168.4.50/phpmyadmin


DBA1_DAY04
1 用户授权（用户管理）
		在数据库服务器上，使用数据库管理员登陆后，添加新用户 
		给客户端连接使用，默认只允许数据库管理员root 用户 自己连接自己
		
		1.1  授权（添加新用户）
				命令1 ： grant   权限列表   on   库名    to  用户名@"客户端地址"  
				             identified by   "密码" ;
		
				命令2 ： grant   权限列表   on   库名    to  用户名@"客户端地址"  
				             identified by   "密码"   with  grant  option ;
				
			     参数的表示方式？ 详细见PPT
                 授权的例子：见ppt 
                 
		
		1.2  授权库（mysql库介绍）
             查看表记录可以获取用户权限；也可以通过更新记录，修改用户权限

				desc  mysql.user;
				select  user ,  host   from   mysql,user;
				
				mysql> show grants for  mydba@"%";
+--------------------------------------------------------------+
| Grants for mydba@%                                           |
+--------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'mydba'@'%' WITH GRANT OPTION |
+--------------------------------------------------------------+
1 row in set (0.00 sec)

mysql> select * from mysql.user 
where user="mydba" and host="%" \G

	
mysql> update mysql.user set  delete_priv="N" , drop_priv="N" 
where user="mydba" and host="%" ;

mysql> flush privileges;

mysql> select * from mysql.user 
where user="mydba" and host="%" \G

mysql> show grants for  mydba@"%";	



			mysql> desc mysql.db;

mysql> select user ,  host , db  from  mysql.db   \G 

mysql>  update  mysql.db  set  delete_priv="n" , update_priv="n" 
               where   db="db3" ;
			   
mysql>  flush  privileges;

mysql> show  grants  for  admin2@"localhost";

mysql> select   *  from  mysql.db   \G 


			mysql> desc  mysql.tables_priv ;

			mysql> select  *  from   mysql.tables_priv ;
			
			mysql> show grants for  admin@"192.168.4.%";

update  mysql.tables_priv  set   table_priv="select,insert,update"
where  user="admin" and  host="192.168.4.%"	;

flush  privileges;
		
mysql> show grants for  admin@"192.168.4.%";



		desc  mysql.columns_priv;
		
mysql> select * from   mysql.columns_priv;
		
mysql> update mysql.columns_priv 
set Column_priv="update,insert" where user="yaya2" ;

mysql> flush  privileges;
mysql> select * from   mysql.columns_priv;


1.3  撤销权限：删除已有用户的权限 
					命令：
revoke  权限列表  on  库名.表   from    用户名@"客户端地址";

  select  host , user from mysql.user;
  show  grants  for    mydba@"%";

mysql> revoke  grant option on *.*  from  mydba@"%";
mysql> revoke  select,insert,update  on *.*  from  mydba@"%";	
mysql> revoke  all  on *.*  from  mydba@"%";

	
		        删除用户
				drop   user  mydba@"%";
				
		1.4   管理用户的相关命令
		
	
		1.5  root密码管理（操作系统管理员有权限）
				1.5.1  修改root 用户本机登陆密码
]# mysqladmin -uroot -p旧密码  password "新密码"
]# mysqladmin -uroot -p123456  password "123qqq...A"

]# mysql -uroot -p123qqq...A    //使用新密码登陆

				1.5.2  恢复root 用户本机登陆密码,步骤如下：
]# vim /etc/my.cnf				
[mysqld]
skip-grant-tables			
#validate_password_policy=0
#validate_password_length=6
:wq
]# systemctl restart  mysqld

]# mysql   可以无密码的登陆
mysql> select  * from  mysql.user 
              where user="root" and host="localhost" \G

mysql> update  mysql.user 
set authentication_string=password("666...qqqA") 
where  user="root" and host="localhost" ;

mysql> flush privileges;
				
mysql> exit

]# vim /etc/my.cnf		
[mysqld]
#skip-grant-tables
:wq
]# systemctl restart  mysqld
]# mysql  -uroot  -p666...qqqA  使用修改后的密码登陆

2 完全备份
		2.1 数据备份的相关概念
						2.1.1 数据备份方式     冷备份      热备份 
						                                   物理备份   逻辑备份
						
			数据的物理备份和恢复
					备份
   cp -r /var/lib/mysql  /opt/
   scp -r /opt/mysql  root@192.168.4.51:/root/							
					恢复数据 步骤如下：			
								停止服务
								删除数据库目录
								把备份数据库拷贝到数据库目录里
								修改目录的所有者和组用户为mysql
								启动服务
								管理登陆查看数据
systemctl  stop mysqld
rm -rf /var/lib/mysql
cp -r /root/mysql   /var/lib/

chown  -R  mysql:mysql   /var/lib/mysql
systemctl  start mysqld
mysql -uroot -p123456


	数据备份策略：
						完全备份：备份所有数据
										  可以是1台服务器上的所有数据
										  可以是1个库的所有数据
										  可以是1张表的所有数据
				 不是备份所有数据，只备份新产生的数据
										  
						增量备份： 备份上次备份后,所有新 产生的数据
						
						差异备份:    备份第1次备份后，所有新 产生的数据
                                           用所有的数据减去第1次备份的剩下的就是新的
   
      工作中使用的备份策略
				完全+差异
				完全+增量
						
		2.2  数据的完全备份与恢复
						mysqldump 完全备份命令
				]# mysqldump  --help 
				]# man   mysqldump 
				
				]# mysqldump  -uroot  -p密码  库名  > /目录名/文件.sql 
				库名的表示方式：
				       -A 或  --all-databases 备份1台服务器的所有数据
					   库名  备份1个 库的所有数据
					   库名  表名    备份1张表的所有数据
					   -B 库名1 库名2    把多个库的所有数据放到一个备份文件里
]# mysqldump  -uroot -p666...qqqA  -A > /root/all.sql	
]# mysqldump  -uroot -p666...qqqA  db1  > /root/db1.sql				   
]# mysqldump  -uroot -p666...qqqA  db1 t11   > /root/t11.sql
]# mysqldump  -uroot -p666...qqqA  -B db1  db3    > /root/twodb.sql					   
[root@host50 ~]# ls /root/*.sql
/root/all.sql  /root/db1.sql  /root/t11.sql  /root/twodb.sql
]# mysqldump -uroot -p123qqq...A mysql > /root/mysql.sql				   
]# ls /root/*.sql

[root@host50 ~]# scp /root/mysql.sql  root@192.168.4.51:/root/
[root@host50 ~]# scp /root/t11.sql oot@192.168.4.51:/root/
				
				mysql 完全恢复命令
				]# mysql  -uroot -p密码  库名 <  /目录名/文件.sql 
host51:
mysql> delete from mysql.user;
mysql>  drop  table  db1.t11;

]# mysql -uroot  -p密码  mysql  < /root/mysql.sql
]# mysql -uroot  -p密码  db1 <      /root/t11.sql

每周一的早上六点把服务器的所有数据完全备份
vim /root/bak.sh 
#!/bin/bash
mysqldump -uroot -p123qqq...A  -A  > /root/`date +%F`_alldata.sql
:wq

chmod  +x  /root/bak.sh

crontab  -e 
00 06  *   *   1  /root/bak.sh
:wq

休息到  10：10 上课 

3 增量备份 之 binlog日志的使用
		3.1 binlog日志介绍 ？ 具体见 ppt 
		
		3.2 管理日志文件：
					启用日志
						vim  /etc/my.cnf
						[mysqld]
						
						:wq
						systemctl restart  mysqld
						
						查看日志 > show  master status;
						                   ls /var/lib/mysql/
									   
						
						自定义日志文件存放的目录和文件名
						mkdir  /mylog
						chown  mysql  /mylog 
						vim  /etc/my.cnf	
						[mysqld]
						server_id=50
						#log_bin
						log_bin=/mylog/plj
						:wq
						systemctl restart  mysqld
							查看日志 > show  master status;
						                   ]# ls /mylog
						
				创建新的日志文件
						]# systemctl  restart mysqld

						mysql> flush  logs;
						等效于
						]#mysql -uroot -p密码  -e   ' flush  logs'
						
]# mysqldump -uroot -p123qqq...A --flush-logs 
-B db1 db3  mysql  > /root/three.sql 

						
						删除已有的日志文件
		purge  master  logs  to  “日志名 ”；   #删除指定编号之前的日志文件
							   
		reset  master;	  #删除所有的日志文件，重新创建第1个日志文件


        只要在数据库服务器上启用的了binlog日志就是增量备份数据。
		
		3.2 使用日志文件恢复数据
					3.2.1  使用日志恢复所有数据
					命令格式
					mysqlbinlog   /目录/文件名   |   mysql  -uroot -p密码

 host50]#
 mysqldump -uroot -p123qqq...A --flush-logs  db3 user   
 > /root/db3_user.sql
 
insert into db3.user(name,vid) values ("BBB",99)' 
insert into db3.user(name,vid) values ("AAA",99)' 

show  master status ;
    plj.000002 |      720		


scp   /root/db3_user.sql   root@192.168.4.51:/root/
scp  /mylog/plj.000002   root@192.168.4.51:/root/


[root@host51 ~]# mysql -uroot -p123456 -e  'create database db3'
    mysql -uroot -p123456 db3  < /root/db3_user.sql 
    mysql -uroot -p123456 -e 'select count(*) from db3.user' 
    mysqlbinlog /root/plj.000002 
    mysqlbinlog /root/plj.000002  | mysql -uroot -p123456
    mysql -uroot -p123456 -e 'select count(*) from db3.user' 
    mysql -uroot -p123456 -e 'select * from db3.user' 



    					3.2.2   使用日志恢复指定的数据
					命令格式
mysqlbinlog  选项  /目录/文件名   |   mysql  -uroot -p密码


					查看日志格式    mysql> show variables like  "binlog_format";

					
					修改日志格式   
					vim /etc/my.cnf
					[mysqld]
					binlog_format="mixed"
					:wq
					systemctl restart mysqld
					
				insert   update    delete 
					
					选项介绍
							偏移量范围 
							
			--start-position=起始偏移量   --stop-position=结束偏移量
			
						   时间范围 
							   --start-datetime="YYYY/mm/dd  hh:mm:ss"
							   --stop-datetime="YYYY/mm/dd  hh:mm:ss"              
					
[root@host51 ~]# mysqlbinlog  --start-position=1504   
--stop-position=1646   /root/plj.000003 | mysql -uroot -p123456					
	

]# mysqlbinlog --start-datetime="2020/09/17 2:47:12"  
/root/plj.000003  | mysql -uroot -p123456



        