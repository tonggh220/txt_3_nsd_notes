day02
	一、 升级网站运行平台 
			1.1  清除当前的配置
				   1.1.1   停止网站服务
				   1.1.2   卸载当前挂载
				   1.1.3   注释开机挂载配置
			1.2  部署lnmp运行平台
					1.2.1 安装源码的nginx
					1.2.2 安装 php   php-devel   php-mysql
					1.2.3 安装 php-fpm
					1.2.4 挂载共享
					1.2.5 启动服务
					1.2.6 测试配置
					
	二、部署缓存服务
			2.1 部署redis集群
				  2.1.1  准备6台redis 服务器并启用了集群功能
				  2.1.2  配置管理主机 
								2.1.2.1  部署ruby脚本运行环境
								2.1.2.2  创建ruby脚本
								2.1.2.3  查看脚本的帮助信息

				  2.1.3  创建集群
							1  创建集群
[root@mgm58 etc]# redis-trib.rb create --replicas 1 
192.168.4.51:6379 192.168.4.52:6379 192.168.4.53:6379 
192.168.4.54:6379 192.168.4.56:6379 192.168.4.57:6379
							
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.

							2  查看集群信息
[root@mgm58 etc]# redis-trib.rb info 192.168.4.51:6379
					
							
				  2.1.4  命令行连接集群存取数据
[root@R51 ~]# redis-cli  -c  -h 192.168.4.57 -p 6379
192.168.4.57:6379> set x 101
192.168.4.53:6379> get x
192.168.4.53:6379> exit
[root@R51 ~]# 


			2.2 配置网站服务器（可以把数据存储到redis 集群里）
				  2.2.1  安装连接集群的软件 redis-cluster-4.3.0.tgz
		  
				  2.2.2   调用软件
				  
				  
				  
			2.3 测试配置（编写连接集群存取数据的php脚本）
				  编写存储数据的脚本set.php
				  
<?php
$redis_list = ['192.168.4.51:6379','192.168.4.52:6379','192.168.4.53:6379','192.168.4.54:6379','192.168.4.56:6379','192.168.4.57:6379'];
$client = new RedisCluster(NUll,$redis_list);
$client->set("i","tarenaA ");
$client->set("j","tarenaB ");
$client->set("k","tarenaC ");
echo   "data save  ok ";
?>

				  客户端访问脚本set.php 
[root@R51 ~]# curl  http://192.168.4.33/set.php
data save ok		
		  
				  命令行连接集群的Redis服务器查看数据
[root@R52 ~]# redis-cli  -c -h 192.168.4.51 -p 6379
192.168.4.51:6379> keys *
1) "j"
192.168.4.51:6379> get i
-> Redirected to slot [15759] located at 192.168.4.53:6379
"tarenaA "
192.168.4.53:6379> get k
-> Redirected to slot [7629] located at 192.168.4.52:6379
"tarenaC "
192.168.4.52:6379> 

 编写获取数据的脚本 get.php
[root@nfs30 sitedir]#vim  /sitedir/get.php 
<?php
$redis_list = ['192.168.4.51:6379','192.168.4.52:6379','192.168.4.53:6379','192.168.4.54:6379','192.168.4.56:6379','192.168.4.57:6379'];

$client = new RedisCluster(NUll,$redis_list);

echo $client->get("i");
echo $client->get("j");
echo $client->get("k");
?>
[root@nfs30 sitedir]# 
				  
				  
				  访问脚本
[root@R51 ~]# curl  http://192.168.4.33/get.php
tarenaA tarenaB tarenaC 
                     
	三 、 数据迁移 （在不停止mysql数据存储服务的情况下，把数据复制到pxc 集群里）
			3.1 把192.168.4.66主机配置mysql11的  slave服务器，步骤如下：
				 安装软件mysql-5.7.17.tar  	修改 管理员登录密码123qqq...A 
				 改配置文件 （指定server_id=66）
				 重启 动mysqld服务
				 
				 确保数据一致 (使用innobackupex命令)
						  1 在mysql11主机 做不锁表完全备份
[root@mysql11 ~]# yum -y install  libev-4.15-1.el6.rf.x86_64.rpm	
[root@mysql11 ~]# yum -y install  percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm					  
[root@mysql11 ~]# innobackupex --user root --password 123qqq...A  /fullbak  --no-timestamp
[root@mysql11 ~]# scp -r  /fullbak/  root@192.168.4.66:/opt/
						  
						  2 在66 主机使用备份文件恢复数据
[root@pxc66 ~]# yum -y install  libev-4.15-1.el6.rf.x86_64.rpm	
[root@pxc66 ~]# yum -y install  percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm	
   15  systemctl  stop mysqld
   16  rm -rf /var/lib/mysql/*
   17  innobackupex --apply-log /opt/fullbak/
   18  innobackupex --copy-back /opt/fullbak/
   19  ls /var/lib/mysql
   20  ls /var/lib/mysql -l
   21  chown -R mysql:mysql /var/lib/mysql
   22  systemctl  start mysqld
   23  mysql -uroot -p123qqq...A

