1 MySQL主从同步
		1.1  mysql 主从同步，是存储数据的服务结构，实现功能 从角色的数据库服务器
		自动同步主角色的数据库服务器上的数据。
		
		主数据库服务器： 客户端访问数据连接的 服务器做主
		从数据库服务器： 自动连接主数据库服务器，并同步数据到本机
		
		mysql主从同步的工作过程：
					主数据库服务器必须启用binlog日志文件
					
					从数据库服务器：有2个线程  IO   和 SQL 
					
	    构建主从同步结构：步骤如下：
					配置主数据库服务器：  192.168.4.51
							启用binlog日志文件   
							用户授权  repluser  123qqq...A    查看日志信息
							
					配置从数据库服务器：192.168.4.52
							
							指定server_id   并重启数据库服务
							
						vim /etc/my.cnf
							[mysqld]
							  server_id=52
					      :wq
						  
						  systemctl  restart  mysqld
						  setenforce  0
						  systemctl   stop  firewalld
							
						 确保与主数据库服务器数据一致
[root@host51 ~]# mysqldump -uroot -p123qqq...A --master-data  db3  > /root/db3.sql							
[root@host51 ~]# scp  /root/db3.sql  root@192.168.4.52:/opt/		
[root@host52 ~]# mysql -uroot -p123qqq...A  -e 'create database db3'
[root@host52 ~]# mysql -uroot -p123qqq...A   db3  < /opt/db3.sql


					
							指定主服务器信息
[root@host52 ~]# grep master51 /opt/db3.sql 
CHANGE MASTER TO MASTER_LOG_FILE='master51.000001',
 MASTER_LOG_POS=999;
[root@host52 ~]# 							
				[root@host52 ~]#	mysql  -uroot  -p密码 		
							
			mysql>show   slave status  \G
								 
								 
			mysql> change master to   master_host="192.168.4.51"	,
			master_user="repluser" , master_password="123qqq...A",
			master_log_file="master51.000001",master_log_pos=999;
								 
							启动slave进程
				mysql> start  slave ;
				
								启动slave进程    mysql> start  slave ;
				
							查看状态
				mysql>show   slave status  \G
							  Slave_IO_Running: Yes   
                              Slave_SQL_Running: Yes
						
							
							mysql>show   slave status  \G
							
				             Last_IO_Error:  IO 线程的报错信息
	                         Last_SQL_Error:  SQL 线程的报错信息
							 
							 
							修改指定的主服务器的信息 		
							stop  slave;
							    change master to   选项="值" ，选项="值" ；
							start slave; 
							 
成为从服务器后相关的文件，删除文件 可以恢复为独立的数据库服务器
					cd  /var/lib/mysql/
					rm   -rf   master.info 
	                rm  -rf host52-relay-bin.*
                    rm -rf relay-log.info 
                    systemctl  restart  mysqld
					
					测试主从同步的功能，步骤如下：
								1 在主服务器添加用户，给客户端 连接使用
[root@host51 ~]# mysql -uroot -p123qqq...A 
-e 'grant all on db3.* to  yaya99@"%" identified by "123qqq...A"'			
								
								2 客户端连接主服务器存取数据
[root@host50 ~]# mysql -h192.168.4.51 -uyaya99 -p123qqq...A 
-e 'use db3;show tables'

[root@host50 ~]# mysql -h192.168.4.51 -uyaya99 -p123qqq...A 
-e 'insert into db3.user(name)values("boy")'

[root@host50 ~]# mysql -h192.168.4.51 -uyaya99 -p123qqq...A 
-e 'create table db3.t2(name char(10))'

								3 在从服务本机能够查看到和主服务器一样的数据

[root@host52 mysql]# mysql -uroot -p123qqq...A  
-e 'select name from db3.user where name="boy"'

[root@host52 mysql]# mysql -uroot -p123qqq...A  
-e 'select  * from db3.t2'


一主多从 例子  把主机 53 也配置为 51的从服务器
							配置从服务器192.168.4.53
										1 指定server_id并重启服务
				vim /etc/my.cnf
						[mysqld]
						server_id=53
				:wq
				systemctl  restart  mysqld 
				
										2 确保与主数据库服务器数据一致
[root@host51 ~]# mysqldump -uroot -p123qqq...A --master-data  db3  > /root/db3.sql							
[root@host51 ~]# scp  /root/db3.sql  root@192.168.4.53:/opt/		

[root@host53 ~]# mysql -uroot -p123qqq...A  -e    'create database db3'
[root@host53 ~]# mysql -uroot -p123qqq...A   db3  < /opt/db3.sql
					
							指定主服务器信息
[root@host53 ~]# grep master51 /opt/db3.sql 
CHANGE MASTER TO MASTER_LOG_FILE='master51.000001',
 MASTER_LOG_POS=3576;
					
				
					     				3  指定主服务器信息
	mysql> change master to  master_host="192.168.4.51",
     master_user="repluser" ,  master_password="123qqq...A",
     master_log_file="master51.000001",master_log_pos=3576;

mysql> start slave;
mysql> show slave status \G
									
										4 启动slave进程   start  slave ;
										5 查看状态            show slave status \G 
										6 测试数据同步
										



                            
