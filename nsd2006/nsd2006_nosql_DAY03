一、Redis 主从复制 (类似于 mysql服务的主从同步)
			1.1 主从复制介绍 
						主数据库服务器 ：接收客户端访问的主机
						从数据库服务器 ： 自动同步主服务器的数据
						
						常用的结构模式有： 具体见ppt 
						
						
			1.2 配置主从复制   50  -  55
						查看服务器的角色   info   replication 
						redis 服务运行后 ，默认的角色 是master 服务。
						
						
						命令行配置的命令  slaveof    主服务器的ip     主服务器的端口
						临时恢复为主服务器  slaveof  no  one
						
			            永久配置    vim /etc/redis/6379.conf
										  slaveof  主服务器的ip     主服务器的端口
			                             :wq
										 
						配置一主一从结构   把主机52 配置为 51的从服务器 
									1  主机51 和  52  分别运行redis服务
									2  在52主机执行 slaveof    192.168.4.51  6351
									3  永久配置为51的从服务器
									 vim /etc/redis/6379.conf
									        282 slaveof 192.168.4.51  6351
									:wq
		
						配置一主多从结构  把主机53 也配置为 51的从服务器 
									  1 主机53 运行redis服务
									  2  在53主机执行 slaveof    192.168.4.51  6351
									  3 分别在 51 和 53 主机查看    info  replication 
									  4  在 51 主机 存储 新变量   mset  school  tarena   age 99
									  5  在 52  和  53 主机能查看到 同样的变量  keys *
						 
						
					
						配置主从从结构
									   1 主机54 运行redis服务
									   2  在54主机执行 slaveof    192.168.4.52  6352
									   3 在 52主机查看    info  replication 
									   4  在 51 主机 存储 新变量 
									   5   在 52  和  54 主机能查看到 同样的变量 
									   
						配置带验证的主从复制结构
								主服务器的redis服务设置了连接密码，从服务器在连接主服务器时
								也必须指定连接密码
								
								1 在 51 主机设置连接密码
[root@host51 ~]# vim +501 /etc/redis/6379.conf 								
	requirepass 123456	
:wq

[root@host51 ~]# redis-cli -h 192.168.4.51 -p 6351 shutdown
[root@host51 ~]# /etc/init.d/redis_6379  start
Starting Redis server...
[root@host51 ~]# redis-cli -h 192.168.4.51 -p 6351 
192.168.4.51:6351> ping
(error) NOAUTH Authentication required.
192.168.4.51:6351> AUTH  123456
OK
192.168.4.51:6351> ping
PONG
192.168.4.51:6351> keys *
	
								2 从服务器指定连接主服务器的密码
								> config set  masterauth 123456
                                > config rewrite

								或
								]# vim /etc/redis/6379.conf 
								  282 slaveof   192.168.4.51    6351
								  289 masterauth  123456
							   :wq
						]# redis-cli  -h 192.168.4.53 -p 6353  shutdown
                        ]# /etc/init.d/redis_6379 start

								
							   3  在2台从服务器 查看   info replication
								

						
									   
			1.3 主从复制的工作过程? 具体见PPT  
			
						休息到  11：10  上课 
						
						
			1.4 哨兵服务
			     1.4.1 哨兵服务介绍
					作用： 监视主数据库服务器redis服务的状态，当主服务器的redis服务
					无法连接， 把对应的从服务器 升级为主服务器。
					
					哨兵服务 + Redis主从复制 可以实现redis服务的高可用
				
				拓扑结构见PPT
					配置Redis主从结构  把52 配置为 51 的从服务器 
									
					1.4.2 配置哨兵服务 192.168.4.57
							  1 安装源码redis软件 （不需要做初始化配置 也不需要启动redis服务 ）
 241  yum -y  install gcc
  242  tar -zxvf  /var/ftp/pub/redis-4.0.8.tar.gz 
  243  cd redis-4.0.8/
  244  make && make install	  
							  
					
							  
							  注意：如果主服务器设置了连接密码 从服务器也要设置同样连接密码
[root@host52 ~]# redis-cli -h 192.168.4.52 -p 6352 
192.168.4.52:6352> config set requirepass 123456
OK
192.168.4.52:6352> config rewrite
(error) NOAUTH Authentication required.
192.168.4.52:6352> 
192.168.4.52:6352> auth 123456
OK
192.168.4.52:6352> config rewrite
OK
192.168.4.52:6352> exit

[root@host52 ~]# redis-cli -h 192.168.4.52 -p 6352 
192.168.4.52:6352> keys *
(error) NOAUTH Authentication required.
192.168.4.52:6352> auth 123456
OK
192.168.4.52:6352> keys *
							  
							 2  创建并编辑，哨兵服务的主配置文件
							  vim /etc/sentinel.conf
							       bind   192.168.4.57
								   sentinel   monitor      dachui   192.168.4.51   6351   1
							       sentinel   auth-pass   dachui   123456
							  :wq
							  
							  
							  3 启动哨兵服务
							  ]# redis-sentinel   /etc/sentinel.conf          
							  
							  4 测试配置 
								    4.1  停止 主服务器 51 的redis 服务 
[root@host51 ~]# redis-cli -h 192.168.4.51 -p 6351  -a 123456  shutdown
									
									4.2  在从服务器查看 角色  变为master 
									192.168.4.52:6352> auth 123456
									OK
									192.168.4.52:6352> info replication
									# Replication
										role:master
									4.3 哨兵服务器 会监视新的 主数据库服务器 52
									cat  /etc/sentinel.conf
									sentinel monitor dachui 192.168.4.52 6352 1


二、持久化（Redis数据永久存储的方式） （偏理论） 192.168.4.50    192.168.4.55 
       数据永久保存。

		2.1 RDB (默认启用的方式)
			  RDB介绍 ？ 具体见PPT 
			  配置文件里有默认的存储时间定义
dbfilename  dump.rdb
 save 900 1
 save 300 10
 save 60 10000

			使用备份的dump.rdb文件恢复 
					在  192.168.4.50 备份dump.rdb 文件
192.168.4.50:6350> keys *
1) "a"
2) "c"
3) "name"
4) "x"
5) "age"
6) "class"
7) "b"
192.168.4.50:6350> save 

[root@host50 ~]# cp /var/lib/redis/6379/dump.rdb   /opt	
[root@host50 ~]# 	scp    /opt/dump.rdb  root@192.168.4.55:/root/
					在  192.168.4.55  使用备份的  dump.rdb 文件 恢复数据
					  恢复步骤如下：
									停止redis服务
									清空数据库目录
									拷贝备份文件到数据库目录里
									启动服务后
									连接服务，查看数据
]#cp /root/dump.rdb  /var/lib/redis/6379/
]#  ls /var/lib/redis/6379/
]# /etc/init.d/redis_6379 start
]#  redis-cli  -h 192.168.4.55 -p 6355  									
> keys  *
	
					验证redis服务存盘频率
]# redis-cli  -h 192.168.4.50  -p 6350  -a 123456 shutdown
]# ls /var/lib/redis/6379/
]# rm -rf /var/lib/redis/6379/*
]# vim /etc/redis/6379.conf 
save 900 1
#save 300 10
save 120 10
save 60 10000
：wq

]#/etc/init.d/redis_6379 start
]#redis-cli  -h 192.168.4.50  -p 6350  -a 123456 
>         2分钟内存储 大于或等于 10个变量

]# ls /var/lib/redis/6379/	dump.rdb 
	   
			休息到  15：10   上课 
			
			
							   
		2.2  AOF (没有启用)
				AOF 介绍？ 见PPT  （和mysql服务binlog日志文件功能一样）
			
   			启用AOF文件
[root@host50 ~]# redis-cli  -h 192.168.4.50  -p 6350  -a 123456 
192.168.4.50:6350> config set appendonly yes
OK
192.168.4.50:6350> CONFIG rewrite
OK
192.168.4.50:6350> exit
[root@host50 ~]# 
[root@host50 ~]# ls /var/lib/redis/6379/
appendonly.aof  dump.rdb
[root@host50 ~]#		  
[root@host50 ~]# redis-cli  -h 192.168.4.50  -p 6350  -a 123456	
> set  name bob
> set   age   19

[root@host50 ~]# cat  /var/lib/redis/6379/	appendonly.ao


				是备份的AOF文件恢复数据
				192.168.4.50 备份
[root@host50 ~]# cp /var/lib/redis/6379/appendonly.aof  /root/
[root@host50 ~]# scp  /root/appendonly.aof  root@!92.168.4.55:/opt/

				192.168.4.55 恢复    15:50 
							停止数据库服务
							清空数据库目录
							启用aof文件 
							拷贝备份的aof文件到数据库目录下
							启动服务
							访问服务查看数据
[root@host55 ~]# redis-cli  -h 192.168.4.55 -p 6355   shutdown	
[root@host55 ~]# rm -rf /var/lib/redis/6379/*	

[root@host55 ~]# vim /etc/redis/6379.conf 
appendonly yes	
appendfilename "appendonly.aof"
:wq

[root@host55 ~]# cp /root/appendonly.aof  /var/lib/redis/6379/
[root@host55 ~]# ls /var/lib/redis/6379/
appendonly.aof
[root@host55 ~]# 
[root@host55 ~]# /etc/init.d/redis_6379 start
Starting Redis server...
[root@host55 ~]# redis-cli  -h 192.168.4.55 -p 6355   
192.168.4.55:6355> keys *
			
       与aof文件相关的配置  6379.conf
				AOF文件记录写操作的方式?
                何时触发日志重写？

				修复AOF文件
[root@host50 ~]# redis-check-aof --fix 
/var/lib/redis/6379/appendonly.aof
提示 输入 y 

	
	  .rdb      aof 
	
	
三、数据类型（管理变量命令的使用）
		字符类型 
192.168.4.50:6350> set  stie   www.tedu.cn	
192.168.4.50:6350> get stie
"www.tedu.cn"
192.168.4.50:6350> GETRANGE  stie 0 2
"www"
192.168.4.50:6350> GETRANGE  stie -2 -1
"cn"
192.168.4.50:6350> 
	
192.168.4.50:6350> strlen stie
(integer) 11
192.168.4.50:6350>

192.168.4.50:6350> keys  *
1) "stie"
192.168.4.50:6350> APPEND name pang
(integer) 4
192.168.4.50:6350> APPEND name lijing
(integer) 10
192.168.4.50:6350> get name
"panglijing"
192.168.4.50:6350> APPEND name A
(integer) 11
192.168.4.50:6350> get name
"panglijingA"
	
	
192.168.4.50:6350> get x
"7"
192.168.4.50:6350> decr x
(integer) 6
192.168.4.50:6350> decr x
(integer) 5
192.168.4.50:6350> decr x
(integer) 4
192.168.4.50:6350> get x
"4"
192.168.4.50:6350> decrby x 3
(integer) 1
192.168.4.50:6350>	

        redis 数据类型管理命令总结，具体操作见ppt 
set  getrange   strlen   append  setbit   bitcount  decr   decrby  incr   incrby    incrbyfloat
lpush   llen      lrange   lpop   lindex  lset   rpush     rpop
hset  hmset  hgetall hkeys  hvals   hget  hmget  hdel